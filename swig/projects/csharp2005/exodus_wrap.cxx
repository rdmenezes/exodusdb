/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

#define SWIGCSHARP


#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__)) 
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__)) 
# else
#   define SWIGUNUSED 
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif 
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED 
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#  ifndef GCC_HASCLASSVISIBILITY
#    define GCC_HASCLASSVISIBILITY
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif 
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif



#include <stdlib.h>
#include <string.h>
#include <stdio.h>


/* Support for throwing C# exceptions from C/C++. There are two types: 
 * Exceptions that take a message and ArgumentExceptions that take a message and a parameter name. */
typedef enum {
  SWIG_CSharpApplicationException,
  SWIG_CSharpArithmeticException,
  SWIG_CSharpDivideByZeroException,
  SWIG_CSharpIndexOutOfRangeException,
  SWIG_CSharpInvalidCastException,
  SWIG_CSharpInvalidOperationException,
  SWIG_CSharpIOException,
  SWIG_CSharpNullReferenceException,
  SWIG_CSharpOutOfMemoryException,
  SWIG_CSharpOverflowException,
  SWIG_CSharpSystemException
} SWIG_CSharpExceptionCodes;

typedef enum {
  SWIG_CSharpArgumentException,
  SWIG_CSharpArgumentNullException,
  SWIG_CSharpArgumentOutOfRangeException
} SWIG_CSharpExceptionArgumentCodes;

typedef void (SWIGSTDCALL* SWIG_CSharpExceptionCallback_t)(const char *);
typedef void (SWIGSTDCALL* SWIG_CSharpExceptionArgumentCallback_t)(const char *, const char *);

typedef struct {
  SWIG_CSharpExceptionCodes code;
  SWIG_CSharpExceptionCallback_t callback;
} SWIG_CSharpException_t;

typedef struct {
  SWIG_CSharpExceptionArgumentCodes code;
  SWIG_CSharpExceptionArgumentCallback_t callback;
} SWIG_CSharpExceptionArgument_t;

static SWIG_CSharpException_t SWIG_csharp_exceptions[] = {
  { SWIG_CSharpApplicationException, NULL },
  { SWIG_CSharpArithmeticException, NULL },
  { SWIG_CSharpDivideByZeroException, NULL },
  { SWIG_CSharpIndexOutOfRangeException, NULL },
  { SWIG_CSharpInvalidCastException, NULL },
  { SWIG_CSharpInvalidOperationException, NULL },
  { SWIG_CSharpIOException, NULL },
  { SWIG_CSharpNullReferenceException, NULL },
  { SWIG_CSharpOutOfMemoryException, NULL },
  { SWIG_CSharpOverflowException, NULL },
  { SWIG_CSharpSystemException, NULL }
};

static SWIG_CSharpExceptionArgument_t SWIG_csharp_exceptions_argument[] = {
  { SWIG_CSharpArgumentException, NULL },
  { SWIG_CSharpArgumentNullException, NULL },
  { SWIG_CSharpArgumentOutOfRangeException, NULL }
};

static void SWIGUNUSED SWIG_CSharpSetPendingException(SWIG_CSharpExceptionCodes code, const char *msg) {
  SWIG_CSharpExceptionCallback_t callback = SWIG_csharp_exceptions[SWIG_CSharpApplicationException].callback;
  if ((size_t)code < sizeof(SWIG_csharp_exceptions)/sizeof(SWIG_CSharpException_t)) {
    callback = SWIG_csharp_exceptions[code].callback;
  }
  callback(msg);
}

static void SWIGUNUSED SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpExceptionArgumentCodes code, const char *msg, const char *param_name) {
  SWIG_CSharpExceptionArgumentCallback_t callback = SWIG_csharp_exceptions_argument[SWIG_CSharpArgumentException].callback;
  if ((size_t)code < sizeof(SWIG_csharp_exceptions_argument)/sizeof(SWIG_CSharpExceptionArgument_t)) {
    callback = SWIG_csharp_exceptions_argument[code].callback;
  }
  callback(msg, param_name);
}


#ifdef __cplusplus
extern "C" 
#endif
SWIGEXPORT void SWIGSTDCALL SWIGRegisterExceptionCallbacks_exodus_library(
                                                SWIG_CSharpExceptionCallback_t applicationCallback,
                                                SWIG_CSharpExceptionCallback_t arithmeticCallback,
                                                SWIG_CSharpExceptionCallback_t divideByZeroCallback, 
                                                SWIG_CSharpExceptionCallback_t indexOutOfRangeCallback, 
                                                SWIG_CSharpExceptionCallback_t invalidCastCallback,
                                                SWIG_CSharpExceptionCallback_t invalidOperationCallback,
                                                SWIG_CSharpExceptionCallback_t ioCallback,
                                                SWIG_CSharpExceptionCallback_t nullReferenceCallback,
                                                SWIG_CSharpExceptionCallback_t outOfMemoryCallback, 
                                                SWIG_CSharpExceptionCallback_t overflowCallback, 
                                                SWIG_CSharpExceptionCallback_t systemCallback) {
  SWIG_csharp_exceptions[SWIG_CSharpApplicationException].callback = applicationCallback;
  SWIG_csharp_exceptions[SWIG_CSharpArithmeticException].callback = arithmeticCallback;
  SWIG_csharp_exceptions[SWIG_CSharpDivideByZeroException].callback = divideByZeroCallback;
  SWIG_csharp_exceptions[SWIG_CSharpIndexOutOfRangeException].callback = indexOutOfRangeCallback;
  SWIG_csharp_exceptions[SWIG_CSharpInvalidCastException].callback = invalidCastCallback;
  SWIG_csharp_exceptions[SWIG_CSharpInvalidOperationException].callback = invalidOperationCallback;
  SWIG_csharp_exceptions[SWIG_CSharpIOException].callback = ioCallback;
  SWIG_csharp_exceptions[SWIG_CSharpNullReferenceException].callback = nullReferenceCallback;
  SWIG_csharp_exceptions[SWIG_CSharpOutOfMemoryException].callback = outOfMemoryCallback;
  SWIG_csharp_exceptions[SWIG_CSharpOverflowException].callback = overflowCallback;
  SWIG_csharp_exceptions[SWIG_CSharpSystemException].callback = systemCallback;
}

#ifdef __cplusplus
extern "C" 
#endif
SWIGEXPORT void SWIGSTDCALL SWIGRegisterExceptionArgumentCallbacks_exodus_library(
                                                SWIG_CSharpExceptionArgumentCallback_t argumentCallback,
                                                SWIG_CSharpExceptionArgumentCallback_t argumentNullCallback,
                                                SWIG_CSharpExceptionArgumentCallback_t argumentOutOfRangeCallback) {
  SWIG_csharp_exceptions_argument[SWIG_CSharpArgumentException].callback = argumentCallback;
  SWIG_csharp_exceptions_argument[SWIG_CSharpArgumentNullException].callback = argumentNullCallback;
  SWIG_csharp_exceptions_argument[SWIG_CSharpArgumentOutOfRangeException].callback = argumentOutOfRangeCallback;
}


/* Callback for returning strings to C# without leaking memory */
typedef char * (SWIGSTDCALL* SWIG_CSharpStringHelperCallback)(const char *);
static SWIG_CSharpStringHelperCallback SWIG_csharp_string_callback = NULL;


#ifdef __cplusplus
extern "C" 
#endif
SWIGEXPORT void SWIGSTDCALL SWIGRegisterStringCallback_exodus_library(SWIG_CSharpStringHelperCallback callback) {
  SWIG_csharp_string_callback = callback;
}


/* Contract support */

#define SWIG_contract_assert(nullreturn, expr, msg) if (!(expr)) {SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, msg, ""); return nullreturn; } else


/* Callback for returning strings to C# without leaking memory */
typedef void * (SWIGSTDCALL* SWIG_CSharpWStringHelperCallback)(const wchar_t *);
static SWIG_CSharpWStringHelperCallback SWIG_csharp_wstring_callback = NULL;


#ifdef __cplusplus
extern "C"
#endif
SWIGEXPORT void SWIGSTDCALL SWIGRegisterWStringCallback_exodus_library(SWIG_CSharpWStringHelperCallback callback) {
  SWIG_csharp_wstring_callback = callback;
}

/*  Errors in SWIG */
#define  SWIG_UnknownError    	   -1 
#define  SWIG_IOError        	   -2 
#define  SWIG_RuntimeError   	   -3 
#define  SWIG_IndexError     	   -4 
#define  SWIG_TypeError      	   -5 
#define  SWIG_DivisionByZero 	   -6 
#define  SWIG_OverflowError  	   -7 
#define  SWIG_SyntaxError    	   -8 
#define  SWIG_ValueError     	   -9 
#define  SWIG_SystemError    	   -10
#define  SWIG_AttributeError 	   -11
#define  SWIG_MemoryError    	   -12 
#define  SWIG_NullReferenceError   -13




#include <string>


#include <string>


SWIGINTERN void SWIG_CSharpException(int code, const char *msg) {
  if (code == SWIG_ValueError) {
    SWIG_CSharpExceptionArgumentCodes exception_code = SWIG_CSharpArgumentOutOfRangeException;
    SWIG_CSharpSetPendingExceptionArgument(exception_code, msg, 0);
  } else {
    SWIG_CSharpExceptionCodes exception_code = SWIG_CSharpApplicationException;
    switch(code) {
    case SWIG_MemoryError:
      exception_code = SWIG_CSharpOutOfMemoryException;
      break;
    case SWIG_IndexError:
      exception_code = SWIG_CSharpIndexOutOfRangeException;
      break;
    case SWIG_DivisionByZero:
      exception_code = SWIG_CSharpDivideByZeroException;
      break;
    case SWIG_IOError:
      exception_code = SWIG_CSharpIOException;
      break;
    case SWIG_OverflowError:
      exception_code = SWIG_CSharpOverflowException;
      break;
    case SWIG_RuntimeError:
    case SWIG_TypeError:
    case SWIG_SyntaxError:
    case SWIG_SystemError:
    case SWIG_UnknownError:
    default:
      exception_code = SWIG_CSharpApplicationException;
      break;
    }
    SWIG_CSharpSetPendingException(exception_code, msg);
  }
}


#include <stdexcept>


#include "exodus/mv.h"
//#include "exodus/mvenvironment.h"
//#include "exodus/exodusfuncs.h"


#ifdef __cplusplus
extern "C" {
#endif

SWIGEXPORT int SWIGSTDCALL CSharp_MV_H_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_mvtypemask_get() {
  unsigned int jresult ;
  unsigned int result;
  
  result = (unsigned int)(unsigned int)mvtypemask;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_LASTDELIMITERCHARNOPLUS1_get() {
  int jresult ;
  int result;
  
  result = (int)(0x0300);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_mvar(void * jarg1) {
  exodus::var *arg1 = (exodus::var *) 0 ;
  
  arg1 = (exodus::var *)jarg1; 
  delete arg1;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_mvar_toBool(void * jarg1) {
  unsigned int jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  bool result;
  
  arg1 = (exodus::var *)jarg1; 
  result = (bool)((exodus::var const *)arg1)->toBool();
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_mvar_toInt(void * jarg1) {
  int jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  int result;
  
  arg1 = (exodus::var *)jarg1; 
  result = (int)((exodus::var const *)arg1)->toInt();
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_mvar_toDouble(void * jarg1) {
  double jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  double result;
  
  arg1 = (exodus::var *)jarg1; 
  result = (double)((exodus::var const *)arg1)->toDouble();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_toWString(void * jarg1) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  std::wstring result;
  
  arg1 = (exodus::var *)jarg1; 
  result = ((exodus::var const *)arg1)->toWString();
  jresult = SWIG_csharp_wstring_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_mvar_ToString(void * jarg1) {
  char * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  std::string result;
  
  arg1 = (exodus::var *)jarg1; 
  result = ((exodus::var const *)arg1)->toString();
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_mvar_toString2(void * jarg1) {
  char * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  std::string result;
  
  arg1 = (exodus::var *)jarg1; 
  result = ((exodus::var const *)arg1)->toString2();
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_mvar__SWIG_0() {
  void * jresult ;
  exodus::var *result = 0 ;
  
  result = (exodus::var *)new exodus::var();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_mvar__SWIG_1(void * jarg1) {
  void * jresult ;
  exodus::var *arg1 = 0 ;
  exodus::var *result = 0 ;
  
  arg1 = (exodus::var *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = (exodus::var *)new exodus::var((exodus::var const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_mvar__SWIG_2(char * jarg1, unsigned long jarg2) {
  void * jresult ;
  char *arg1 = (char *) 0 ;
  size_t arg2 ;
  exodus::var *result = 0 ;
  
  arg1 = (char *)jarg1; 
  arg2 = (size_t)jarg2; 
  result = (exodus::var *)new exodus::var((char const *)arg1,arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_mvar__SWIG_3(wchar_t * jarg1) {
  void * jresult ;
  std::wstring *arg1 = 0 ;
  exodus::var *result = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null wstring", 0);
    return 0;
  }
  std::wstring arg1_str(jarg1);
  arg1 = &arg1_str; 
  result = (exodus::var *)new exodus::var((std::wstring const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_mvar__SWIG_4(unsigned int jarg1) {
  void * jresult ;
  bool arg1 ;
  exodus::var *result = 0 ;
  
  arg1 = jarg1 ? true : false; 
  result = (exodus::var *)new exodus::var(arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_mvar__SWIG_5(int jarg1) {
  void * jresult ;
  int arg1 ;
  exodus::var *result = 0 ;
  
  arg1 = (int)jarg1; 
  result = (exodus::var *)new exodus::var(arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_mvar__SWIG_6(long long jarg1) {
  void * jresult ;
  long long arg1 ;
  exodus::var *result = 0 ;
  
  arg1 = (long long)jarg1; 
  result = (exodus::var *)new exodus::var(arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_mvar__SWIG_7(double jarg1) {
  void * jresult ;
  double arg1 ;
  exodus::var *result = 0 ;
  
  arg1 = (double)jarg1; 
  result = (exodus::var *)new exodus::var(arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_date(void * jarg1) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  result = ((exodus::var const *)arg1)->date();
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_time(void * jarg1) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  result = ((exodus::var const *)arg1)->time();
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_timedate(void * jarg1) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  result = ((exodus::var const *)arg1)->timedate();
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_mvar_ossleep(void * jarg1, int jarg2) {
  exodus::var *arg1 = (exodus::var *) 0 ;
  int arg2 ;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (int)jarg2; 
  ((exodus::var const *)arg1)->ossleep(arg2);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_ostime(void * jarg1) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  result = ((exodus::var const *)arg1)->ostime();
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_mvar_osopen__SWIG_0(void * jarg1) {
  unsigned int jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  bool result;
  
  arg1 = (exodus::var *)jarg1; 
  result = (bool)((exodus::var const *)arg1)->osopen();
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_mvar_osopen__SWIG_1(void * jarg1, void * jarg2, void * jarg3) {
  unsigned int jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  bool result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  arg3 = (exodus::var *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = (bool)((exodus::var const *)arg1)->osopen((exodus::var const &)*arg2,(exodus::var const &)*arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_osbread(void * jarg1, void * jarg2, void * jarg3, int jarg4) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  int arg4 ;
  exodus::var *result = 0 ;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  arg3 = (exodus::var *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var & type is null", 0);
    return 0;
  } 
  arg4 = (int)jarg4; 
  result = (exodus::var *) &(arg1)->osbread((exodus::var const &)*arg2,*arg3,arg4);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_mvar_osbwrite(void * jarg1, void * jarg2, void * jarg3) {
  unsigned int jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  bool result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  arg3 = (exodus::var *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var & type is null", 0);
    return 0;
  } 
  result = (bool)((exodus::var const *)arg1)->osbwrite((exodus::var const &)*arg2,*arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_mvar_osclose(void * jarg1) {
  exodus::var *arg1 = (exodus::var *) 0 ;
  
  arg1 = (exodus::var *)jarg1; 
  ((exodus::var const *)arg1)->osclose();
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_mvar_osread__SWIG_0(void * jarg1, void * jarg2, void * jarg3) {
  unsigned int jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  bool result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  arg3 = (exodus::var *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = (bool)(arg1)->osread((exodus::var const &)*arg2,(exodus::var const &)*arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_mvar_oswrite(void * jarg1, void * jarg2, void * jarg3) {
  unsigned int jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  bool result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  arg3 = (exodus::var *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = (bool)((exodus::var const *)arg1)->oswrite((exodus::var const &)*arg2,(exodus::var const &)*arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_mvar_osdelete__SWIG_0(void * jarg1) {
  unsigned int jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  bool result;
  
  arg1 = (exodus::var *)jarg1; 
  result = (bool)((exodus::var const *)arg1)->osdelete();
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_mvar_osdelete__SWIG_1(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  bool result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = (bool)((exodus::var const *)arg1)->osdelete((exodus::var const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_mvar_osrename(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  bool result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = (bool)((exodus::var const *)arg1)->osrename((exodus::var const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_mvar_oscopy(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  bool result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = (bool)((exodus::var const *)arg1)->oscopy((exodus::var const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_oslist__SWIG_0(void * jarg1, void * jarg2, void * jarg3, int jarg4) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  int arg4 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  arg3 = (exodus::var *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  arg4 = (int)jarg4; 
  result = ((exodus::var const *)arg1)->oslist((exodus::var const &)*arg2,(exodus::var const &)*arg3,arg4);
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_oslist__SWIG_1(void * jarg1, void * jarg2, void * jarg3) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  arg3 = (exodus::var *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = ((exodus::var const *)arg1)->oslist((exodus::var const &)*arg2,(exodus::var const &)*arg3);
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_oslistf(void * jarg1, void * jarg2, void * jarg3) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  arg3 = (exodus::var *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = ((exodus::var const *)arg1)->oslistf((exodus::var const &)*arg2,(exodus::var const &)*arg3);
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_oslistd(void * jarg1, void * jarg2, void * jarg3) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  arg3 = (exodus::var *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = ((exodus::var const *)arg1)->oslistd((exodus::var const &)*arg2,(exodus::var const &)*arg3);
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_osfile(void * jarg1) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  result = ((exodus::var const *)arg1)->osfile();
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_osdir(void * jarg1) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  result = ((exodus::var const *)arg1)->osdir();
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_mvar_osmkdir(void * jarg1) {
  unsigned int jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  bool result;
  
  arg1 = (exodus::var *)jarg1; 
  result = (bool)((exodus::var const *)arg1)->osmkdir();
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_mvar_osrmdir__SWIG_0(void * jarg1, unsigned int jarg2) {
  unsigned int jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  bool arg2 ;
  bool result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = jarg2 ? true : false; 
  result = (bool)((exodus::var const *)arg1)->osrmdir(arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_mvar_osrmdir__SWIG_1(void * jarg1) {
  unsigned int jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  bool result;
  
  arg1 = (exodus::var *)jarg1; 
  result = (bool)((exodus::var const *)arg1)->osrmdir();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_oscwd__SWIG_0(void * jarg1) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  result = ((exodus::var const *)arg1)->oscwd();
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_oscwd__SWIG_1(void * jarg1, void * jarg2) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = ((exodus::var const *)arg1)->oscwd((exodus::var const &)*arg2);
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_mvar_osflush(void * jarg1) {
  exodus::var *arg1 = (exodus::var *) 0 ;
  
  arg1 = (exodus::var *)jarg1; 
  ((exodus::var const *)arg1)->osflush();
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_mvar_osread__SWIG_1(void * jarg1, char * jarg2, void * jarg3) {
  unsigned int jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  char *arg2 = (char *) 0 ;
  exodus::var *arg3 = 0 ;
  bool result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (char *)jarg2; 
  arg3 = (exodus::var *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = (bool)(arg1)->osread((char const *)arg2,(exodus::var const &)*arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_suspend(void * jarg1) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  result = ((exodus::var const *)arg1)->suspend();
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_osshell(void * jarg1) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  result = ((exodus::var const *)arg1)->osshell();
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_osshellread(void * jarg1) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  result = ((exodus::var const *)arg1)->osshellread();
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_osshellwrite(void * jarg1, void * jarg2) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = ((exodus::var const *)arg1)->osshellwrite((exodus::var const &)*arg2);
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_mvar_osgetenv(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  bool result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = (bool)(arg1)->osgetenv((exodus::var const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_mvar_ossetenv(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  bool result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = (bool)((exodus::var const *)arg1)->ossetenv((exodus::var const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_mvar_stop(void * jarg1, void * jarg2) {
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return ;
  } 
  ((exodus::var const *)arg1)->stop((exodus::var const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_mvar_abort(void * jarg1, void * jarg2) {
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return ;
  } 
  ((exodus::var const *)arg1)->abort((exodus::var const &)*arg2);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_perform(void * jarg1) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  result = ((exodus::var const *)arg1)->perform();
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_execute(void * jarg1) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  result = ((exodus::var const *)arg1)->execute();
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_chain(void * jarg1) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  result = ((exodus::var const *)arg1)->chain();
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_logoff(void * jarg1) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  result = ((exodus::var const *)arg1)->logoff();
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_debug__SWIG_0(void * jarg1) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  result = ((exodus::var const *)arg1)->debug();
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_debug__SWIG_1(void * jarg1, void * jarg2) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = ((exodus::var const *)arg1)->debug((exodus::var const &)*arg2);
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_mvar_breakon(void * jarg1) {
  exodus::var *arg1 = (exodus::var *) 0 ;
  
  arg1 = (exodus::var *)jarg1; 
  ((exodus::var const *)arg1)->breakon();
}


SWIGEXPORT void SWIGSTDCALL CSharp_mvar_breakoff(void * jarg1) {
  exodus::var *arg1 = (exodus::var *) 0 ;
  
  arg1 = (exodus::var *)jarg1; 
  ((exodus::var const *)arg1)->breakoff();
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_output__SWIG_0(void * jarg1) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *result = 0 ;
  
  arg1 = (exodus::var *)jarg1; 
  result = (exodus::var *) &((exodus::var const *)arg1)->output();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_outputl__SWIG_0(void * jarg1) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *result = 0 ;
  
  arg1 = (exodus::var *)jarg1; 
  result = (exodus::var *) &((exodus::var const *)arg1)->outputl();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_outputt__SWIG_0(void * jarg1) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *result = 0 ;
  
  arg1 = (exodus::var *)jarg1; 
  result = (exodus::var *) &((exodus::var const *)arg1)->outputt();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_output__SWIG_1(void * jarg1, void * jarg2) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *result = 0 ;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = (exodus::var *) &((exodus::var const *)arg1)->output((exodus::var const &)*arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_outputl__SWIG_1(void * jarg1, void * jarg2) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *result = 0 ;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = (exodus::var *) &((exodus::var const *)arg1)->outputl((exodus::var const &)*arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_outputt__SWIG_1(void * jarg1, void * jarg2) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *result = 0 ;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = (exodus::var *) &((exodus::var const *)arg1)->outputt((exodus::var const &)*arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_logput__SWIG_0(void * jarg1) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *result = 0 ;
  
  arg1 = (exodus::var *)jarg1; 
  result = (exodus::var *) &((exodus::var const *)arg1)->logput();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_logputl__SWIG_0(void * jarg1) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *result = 0 ;
  
  arg1 = (exodus::var *)jarg1; 
  result = (exodus::var *) &((exodus::var const *)arg1)->logputl();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_logput__SWIG_1(void * jarg1, void * jarg2) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *result = 0 ;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = (exodus::var *) &((exodus::var const *)arg1)->logput((exodus::var const &)*arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_logputl__SWIG_1(void * jarg1, void * jarg2) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *result = 0 ;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = (exodus::var *) &((exodus::var const *)arg1)->logputl((exodus::var const &)*arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_errput__SWIG_0(void * jarg1) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *result = 0 ;
  
  arg1 = (exodus::var *)jarg1; 
  result = (exodus::var *) &((exodus::var const *)arg1)->errput();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_errputl__SWIG_0(void * jarg1) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *result = 0 ;
  
  arg1 = (exodus::var *)jarg1; 
  result = (exodus::var *) &((exodus::var const *)arg1)->errputl();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_errput__SWIG_1(void * jarg1, void * jarg2) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *result = 0 ;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = (exodus::var *) &((exodus::var const *)arg1)->errput((exodus::var const &)*arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_errputl__SWIG_1(void * jarg1, void * jarg2) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *result = 0 ;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = (exodus::var *) &((exodus::var const *)arg1)->errputl((exodus::var const &)*arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_put(void * jarg1, void * jarg2) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  std::ostream *arg2 = 0 ;
  exodus::var *result = 0 ;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (std::ostream *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::ostream & type is null", 0);
    return 0;
  } 
  result = (exodus::var *) &((exodus::var const *)arg1)->put(*arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_at__SWIG_0(void * jarg1, int jarg2) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  int arg2 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (int)jarg2; 
  result = ((exodus::var const *)arg1)->at(arg2);
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_at__SWIG_1(void * jarg1, int jarg2, int jarg3) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  int arg2 ;
  int arg3 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  result = ((exodus::var const *)arg1)->at(arg2,arg3);
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_getcursor(void * jarg1) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  result = ((exodus::var const *)arg1)->getcursor();
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_mvar_setcursor(void * jarg1) {
  exodus::var *arg1 = (exodus::var *) 0 ;
  
  arg1 = (exodus::var *)jarg1; 
  ((exodus::var const *)arg1)->setcursor();
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_getprompt(void * jarg1) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  result = ((exodus::var const *)arg1)->getprompt();
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_mvar_setprompt(void * jarg1) {
  exodus::var *arg1 = (exodus::var *) 0 ;
  
  arg1 = (exodus::var *)jarg1; 
  ((exodus::var const *)arg1)->setprompt();
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_mvar_input__SWIG_0(void * jarg1) {
  unsigned int jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  bool result;
  
  arg1 = (exodus::var *)jarg1; 
  result = (bool)(arg1)->input();
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_mvar_input__SWIG_1(void * jarg1, void * jarg2, int jarg3) {
  unsigned int jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  int arg3 ;
  bool result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  arg3 = (int)jarg3; 
  result = (bool)(arg1)->input((exodus::var const &)*arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_mvar_input__SWIG_2(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  bool result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = (bool)(arg1)->input((exodus::var const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_mvar_eof(void * jarg1) {
  unsigned int jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  bool result;
  
  arg1 = (exodus::var *)jarg1; 
  result = (bool)((exodus::var const *)arg1)->eof();
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_mvar_assigned(void * jarg1) {
  unsigned int jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  bool result;
  
  arg1 = (exodus::var *)jarg1; 
  result = (bool)((exodus::var const *)arg1)->assigned();
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_mvar_unassigned(void * jarg1) {
  unsigned int jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  bool result;
  
  arg1 = (exodus::var *)jarg1; 
  result = (bool)((exodus::var const *)arg1)->unassigned();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_transfer(void * jarg1, void * jarg2) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *result = 0 ;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var & type is null", 0);
    return 0;
  } 
  result = (exodus::var *) &(arg1)->transfer(*arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_exchange(void * jarg1, void * jarg2) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *result = 0 ;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var & type is null", 0);
    return 0;
  } 
  result = (exodus::var *) &(arg1)->exchange(*arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_clone(void * jarg1, void * jarg2) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *result = 0 ;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var & type is null", 0);
    return 0;
  } 
  result = (exodus::var *) &(arg1)->clone(*arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_abs(void * jarg1) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  result = ((exodus::var const *)arg1)->abs();
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_mod__SWIG_0(void * jarg1, void * jarg2) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = ((exodus::var const *)arg1)->mod((exodus::var const &)*arg2);
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_mod__SWIG_1(void * jarg1, int jarg2) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  int arg2 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (int)jarg2; 
  result = ((exodus::var const *)arg1)->mod(arg2);
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_pwr(void * jarg1, void * jarg2) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = ((exodus::var const *)arg1)->pwr((exodus::var const &)*arg2);
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_rnd(void * jarg1) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  result = ((exodus::var const *)arg1)->rnd();
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_mvar_initrnd(void * jarg1) {
  exodus::var *arg1 = (exodus::var *) 0 ;
  
  arg1 = (exodus::var *)jarg1; 
  ((exodus::var const *)arg1)->initrnd();
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_exp(void * jarg1) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  result = ((exodus::var const *)arg1)->exp();
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_sqrt(void * jarg1) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  result = ((exodus::var const *)arg1)->sqrt();
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_sin(void * jarg1) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  result = ((exodus::var const *)arg1)->sin();
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_cos(void * jarg1) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  result = ((exodus::var const *)arg1)->cos();
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_tan(void * jarg1) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  result = ((exodus::var const *)arg1)->tan();
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_atan(void * jarg1) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  result = ((exodus::var const *)arg1)->atan();
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_loge(void * jarg1) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  result = ((exodus::var const *)arg1)->loge();
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_integer(void * jarg1) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  result = ((exodus::var const *)arg1)->integer();
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_floor(void * jarg1) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  result = ((exodus::var const *)arg1)->floor();
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_round__SWIG_0(void * jarg1, int jarg2) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  int arg2 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (int)jarg2; 
  result = ((exodus::var const *)arg1)->round(arg2);
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_round__SWIG_1(void * jarg1) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  result = ((exodus::var const *)arg1)->round();
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_mvar_setxlocale(void * jarg1) {
  unsigned int jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  bool result;
  
  arg1 = (exodus::var *)jarg1; 
  result = (bool)((exodus::var const *)arg1)->setxlocale();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_getxlocale(void * jarg1) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *result = 0 ;
  
  arg1 = (exodus::var *)jarg1; 
  result = (exodus::var *) &(arg1)->getxlocale();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_chr(void * jarg1, int jarg2) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  int arg2 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (int)jarg2; 
  result = ((exodus::var const *)arg1)->chr(arg2);
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_str(void * jarg1, int jarg2) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  int arg2 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (int)jarg2; 
  result = ((exodus::var const *)arg1)->str(arg2);
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_space(void * jarg1) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  result = ((exodus::var const *)arg1)->space();
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_mvar_match(void * jarg1, void * jarg2, void * jarg3) {
  unsigned int jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  bool result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  arg3 = (exodus::var *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = (bool)((exodus::var const *)arg1)->match((exodus::var const &)*arg2,(exodus::var const &)*arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_seq(void * jarg1) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  result = ((exodus::var const *)arg1)->seq();
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_dcount(void * jarg1, void * jarg2) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = ((exodus::var const *)arg1)->dcount((exodus::var const &)*arg2);
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_count__SWIG_0(void * jarg1, void * jarg2) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = ((exodus::var const *)arg1)->count((exodus::var const &)*arg2);
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_count__SWIG_1(void * jarg1, wchar_t jarg2) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  wchar_t arg2 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (wchar_t)jarg2; 
  result = ((exodus::var const *)arg1)->count(arg2);
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_length(void * jarg1) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  result = ((exodus::var const *)arg1)->length();
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_len(void * jarg1) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  result = ((exodus::var const *)arg1)->len();
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT wchar_t * SWIGSTDCALL CSharp_mvar_data(void * jarg1) {
  wchar_t * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  wchar_t *result = 0 ;
  
  arg1 = (exodus::var *)jarg1; 
  result = (wchar_t *)((exodus::var const *)arg1)->data();
  jresult = (wchar_t *)result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_mvar_isnum(void * jarg1) {
  unsigned int jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  bool result;
  
  arg1 = (exodus::var *)jarg1; 
  result = (bool)((exodus::var const *)arg1)->isnum();
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_mvar_isnum_old(void * jarg1) {
  unsigned int jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  bool result;
  
  arg1 = (exodus::var *)jarg1; 
  result = (bool)((exodus::var const *)arg1)->isnum_old();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_converter(void * jarg1, void * jarg2, void * jarg3) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  exodus::var *result = 0 ;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  arg3 = (exodus::var *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = (exodus::var *) &(arg1)->converter((exodus::var const &)*arg2,(exodus::var const &)*arg3);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_swapper(void * jarg1, void * jarg2, void * jarg3, void * jarg4) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  exodus::var *arg4 = 0 ;
  exodus::var *result = 0 ;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  arg3 = (exodus::var *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  arg4 = (exodus::var *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = (exodus::var *) &(arg1)->swapper((exodus::var const &)*arg2,(exodus::var const &)*arg3,(exodus::var const &)*arg4);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_splicer__SWIG_0(void * jarg1, int jarg2, int jarg3, void * jarg4) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  int arg2 ;
  int arg3 ;
  exodus::var *arg4 = 0 ;
  exodus::var *result = 0 ;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (exodus::var *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = (exodus::var *) &(arg1)->splicer(arg2,arg3,(exodus::var const &)*arg4);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_splicer__SWIG_1(void * jarg1, int jarg2, void * jarg3) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  int arg2 ;
  exodus::var *arg3 = 0 ;
  exodus::var *result = 0 ;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (exodus::var *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = (exodus::var *) &(arg1)->splicer(arg2,(exodus::var const &)*arg3);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_quoter(void * jarg1) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *result = 0 ;
  
  arg1 = (exodus::var *)jarg1; 
  result = (exodus::var *) &(arg1)->quoter();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_squoter(void * jarg1) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *result = 0 ;
  
  arg1 = (exodus::var *)jarg1; 
  result = (exodus::var *) &(arg1)->squoter();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_unquoter(void * jarg1) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *result = 0 ;
  
  arg1 = (exodus::var *)jarg1; 
  result = (exodus::var *) &(arg1)->unquoter();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_ucaser(void * jarg1) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *result = 0 ;
  
  arg1 = (exodus::var *)jarg1; 
  result = (exodus::var *) &(arg1)->ucaser();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_lcaser(void * jarg1) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *result = 0 ;
  
  arg1 = (exodus::var *)jarg1; 
  result = (exodus::var *) &(arg1)->lcaser();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_trimmer__SWIG_0(void * jarg1, wchar_t * jarg2) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  exodus::var *result = 0 ;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (wchar_t *)jarg2; 
  result = (exodus::var *) &(arg1)->trimmer((wchar_t const *)arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_trimmerf__SWIG_0(void * jarg1, wchar_t * jarg2) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  exodus::var *result = 0 ;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (wchar_t *)jarg2; 
  result = (exodus::var *) &(arg1)->trimmerf((wchar_t const *)arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_trimmerb__SWIG_0(void * jarg1, wchar_t * jarg2) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  exodus::var *result = 0 ;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (wchar_t *)jarg2; 
  result = (exodus::var *) &(arg1)->trimmerb((wchar_t const *)arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_trimmer__SWIG_1(void * jarg1, void * jarg2) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var arg2 ;
  exodus::var const *argp2 ;
  exodus::var *result = 0 ;
  
  arg1 = (exodus::var *)jarg1; 
  argp2 = (exodus::var *)jarg2; 
  if (!argp2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null exodus::var const", 0);
    return 0;
  }
  arg2 = *argp2; 
  result = (exodus::var *) &(arg1)->trimmer(arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_trimmerf__SWIG_1(void * jarg1, void * jarg2) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var arg2 ;
  exodus::var const *argp2 ;
  exodus::var *result = 0 ;
  
  arg1 = (exodus::var *)jarg1; 
  argp2 = (exodus::var *)jarg2; 
  if (!argp2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null exodus::var const", 0);
    return 0;
  }
  arg2 = *argp2; 
  result = (exodus::var *) &(arg1)->trimmerf(arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_trimmerb__SWIG_1(void * jarg1, void * jarg2) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var arg2 ;
  exodus::var const *argp2 ;
  exodus::var *result = 0 ;
  
  arg1 = (exodus::var *)jarg1; 
  argp2 = (exodus::var *)jarg2; 
  if (!argp2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null exodus::var const", 0);
    return 0;
  }
  arg2 = *argp2; 
  result = (exodus::var *) &(arg1)->trimmerb(arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_fieldstorer(void * jarg1, void * jarg2, int jarg3, int jarg4, void * jarg5) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  int arg3 ;
  int arg4 ;
  exodus::var *arg5 = 0 ;
  exodus::var *result = 0 ;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (exodus::var *)jarg5;
  if (!arg5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = (exodus::var *) &(arg1)->fieldstorer((exodus::var const &)*arg2,arg3,arg4,(exodus::var const &)*arg5);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_substrer__SWIG_0(void * jarg1, int jarg2) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  int arg2 ;
  exodus::var *result = 0 ;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (int)jarg2; 
  result = (exodus::var *) &(arg1)->substrer(arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_substrer__SWIG_1(void * jarg1, int jarg2, int jarg3) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  int arg2 ;
  int arg3 ;
  exodus::var *result = 0 ;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  result = (exodus::var *) &(arg1)->substrer(arg2,arg3);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_convert(void * jarg1, void * jarg2, void * jarg3) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  arg3 = (exodus::var *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = ((exodus::var const *)arg1)->convert((exodus::var const &)*arg2,(exodus::var const &)*arg3);
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_swap(void * jarg1, void * jarg2, void * jarg3, void * jarg4) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  exodus::var *arg4 = 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  arg3 = (exodus::var *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  arg4 = (exodus::var *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = ((exodus::var const *)arg1)->swap((exodus::var const &)*arg2,(exodus::var const &)*arg3,(exodus::var const &)*arg4);
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_splice__SWIG_0(void * jarg1, int jarg2, int jarg3, void * jarg4) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  int arg2 ;
  int arg3 ;
  exodus::var *arg4 = 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (exodus::var *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = ((exodus::var const *)arg1)->splice(arg2,arg3,(exodus::var const &)*arg4);
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_splice__SWIG_1(void * jarg1, int jarg2, void * jarg3) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  int arg2 ;
  exodus::var *arg3 = 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (exodus::var *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = ((exodus::var const *)arg1)->splice(arg2,(exodus::var const &)*arg3);
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_quote(void * jarg1) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  result = ((exodus::var const *)arg1)->quote();
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_squote(void * jarg1) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  result = ((exodus::var const *)arg1)->squote();
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_unquote(void * jarg1) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  result = ((exodus::var const *)arg1)->unquote();
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_ucase(void * jarg1) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  result = ((exodus::var const *)arg1)->ucase();
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_lcase(void * jarg1) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  result = ((exodus::var const *)arg1)->lcase();
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_trim__SWIG_0(void * jarg1, wchar_t * jarg2) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (wchar_t *)jarg2; 
  result = ((exodus::var const *)arg1)->trim((wchar_t const *)arg2);
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_trimf__SWIG_0(void * jarg1, wchar_t * jarg2) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (wchar_t *)jarg2; 
  result = ((exodus::var const *)arg1)->trimf((wchar_t const *)arg2);
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_trimb__SWIG_0(void * jarg1, wchar_t * jarg2) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (wchar_t *)jarg2; 
  result = ((exodus::var const *)arg1)->trimb((wchar_t const *)arg2);
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_trim__SWIG_1(void * jarg1, void * jarg2) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var arg2 ;
  exodus::var const *argp2 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  argp2 = (exodus::var *)jarg2; 
  if (!argp2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null exodus::var const", 0);
    return 0;
  }
  arg2 = *argp2; 
  result = ((exodus::var const *)arg1)->trim(arg2);
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_trimf__SWIG_1(void * jarg1, void * jarg2) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var arg2 ;
  exodus::var const *argp2 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  argp2 = (exodus::var *)jarg2; 
  if (!argp2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null exodus::var const", 0);
    return 0;
  }
  arg2 = *argp2; 
  result = ((exodus::var const *)arg1)->trimf(arg2);
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_trimb__SWIG_1(void * jarg1, void * jarg2) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var arg2 ;
  exodus::var const *argp2 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  argp2 = (exodus::var *)jarg2; 
  if (!argp2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null exodus::var const", 0);
    return 0;
  }
  arg2 = *argp2; 
  result = ((exodus::var const *)arg1)->trimb(arg2);
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_fieldstore(void * jarg1, void * jarg2, int jarg3, int jarg4, void * jarg5) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  int arg3 ;
  int arg4 ;
  exodus::var *arg5 = 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (exodus::var *)jarg5;
  if (!arg5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = ((exodus::var const *)arg1)->fieldstore((exodus::var const &)*arg2,arg3,arg4,(exodus::var const &)*arg5);
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_substr__SWIG_0(void * jarg1, int jarg2) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  int arg2 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (int)jarg2; 
  result = ((exodus::var const *)arg1)->substr(arg2);
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_substr__SWIG_1(void * jarg1, int jarg2, int jarg3) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  int arg2 ;
  int arg3 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  result = ((exodus::var const *)arg1)->substr(arg2,arg3);
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_index__SWIG_0(void * jarg1, void * jarg2, int jarg3) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  int arg3 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  arg3 = (int)jarg3; 
  result = ((exodus::var const *)arg1)->index((exodus::var const &)*arg2,arg3);
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_index__SWIG_1(void * jarg1, void * jarg2) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = ((exodus::var const *)arg1)->index((exodus::var const &)*arg2);
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_index2__SWIG_0(void * jarg1, void * jarg2, int jarg3) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  int arg3 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  arg3 = (int)jarg3; 
  result = ((exodus::var const *)arg1)->index2((exodus::var const &)*arg2,arg3);
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_index2__SWIG_1(void * jarg1, void * jarg2) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = ((exodus::var const *)arg1)->index2((exodus::var const &)*arg2);
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_field__SWIG_0(void * jarg1, void * jarg2, int jarg3, int jarg4) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  int arg3 ;
  int arg4 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  result = ((exodus::var const *)arg1)->field((exodus::var const &)*arg2,arg3,arg4);
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_field__SWIG_1(void * jarg1, void * jarg2, int jarg3) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  int arg3 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  arg3 = (int)jarg3; 
  result = ((exodus::var const *)arg1)->field((exodus::var const &)*arg2,arg3);
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_field2__SWIG_0(void * jarg1, void * jarg2, int jarg3, int jarg4) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  int arg3 ;
  int arg4 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  result = ((exodus::var const *)arg1)->field2((exodus::var const &)*arg2,arg3,arg4);
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_field2__SWIG_1(void * jarg1, void * jarg2, int jarg3) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  int arg3 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  arg3 = (int)jarg3; 
  result = ((exodus::var const *)arg1)->field2((exodus::var const &)*arg2,arg3);
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_oconv__SWIG_0(void * jarg1, wchar_t * jarg2) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (wchar_t *)jarg2; 
  result = ((exodus::var const *)arg1)->oconv((wchar_t const *)arg2);
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_oconv__SWIG_1(void * jarg1, void * jarg2) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = ((exodus::var const *)arg1)->oconv((exodus::var const &)*arg2);
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_iconv__SWIG_0(void * jarg1, wchar_t * jarg2) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (wchar_t *)jarg2; 
  result = ((exodus::var const *)arg1)->iconv((wchar_t const *)arg2);
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_iconv__SWIG_1(void * jarg1, void * jarg2) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = ((exodus::var const *)arg1)->iconv((exodus::var const &)*arg2);
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_lower(void * jarg1) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  result = ((exodus::var const *)arg1)->lower();
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_raise(void * jarg1) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  result = ((exodus::var const *)arg1)->raise();
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_crop(void * jarg1) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  result = ((exodus::var const *)arg1)->crop();
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_lowerer(void * jarg1) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *result = 0 ;
  
  arg1 = (exodus::var *)jarg1; 
  result = (exodus::var *) &(arg1)->lowerer();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_raiser(void * jarg1) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *result = 0 ;
  
  arg1 = (exodus::var *)jarg1; 
  result = (exodus::var *) &(arg1)->raiser();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_cropper(void * jarg1) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *result = 0 ;
  
  arg1 = (exodus::var *)jarg1; 
  result = (exodus::var *) &(arg1)->cropper();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_remove(void * jarg1, void * jarg2, void * jarg3) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var & type is null", 0);
    return 0;
  } 
  arg3 = (exodus::var *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var & type is null", 0);
    return 0;
  } 
  result = ((exodus::var const *)arg1)->remove(*arg2,*arg3);
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_replace__SWIG_0(void * jarg1, int jarg2, int jarg3, int jarg4, void * jarg5) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  exodus::var *arg5 = 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (exodus::var *)jarg5;
  if (!arg5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = ((exodus::var const *)arg1)->replace(arg2,arg3,arg4,(exodus::var const &)*arg5);
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_replace__SWIG_1(void * jarg1, int jarg2, int jarg3, void * jarg4) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  int arg2 ;
  int arg3 ;
  exodus::var *arg4 = 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (exodus::var *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = ((exodus::var const *)arg1)->replace(arg2,arg3,(exodus::var const &)*arg4);
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_replace__SWIG_2(void * jarg1, int jarg2, void * jarg3) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  int arg2 ;
  exodus::var *arg3 = 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (exodus::var *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = ((exodus::var const *)arg1)->replace(arg2,(exodus::var const &)*arg3);
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_insert(void * jarg1, int jarg2, int jarg3, int jarg4, void * jarg5) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  exodus::var *arg5 = 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (exodus::var *)jarg5;
  if (!arg5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = ((exodus::var const *)arg1)->insert(arg2,arg3,arg4,(exodus::var const &)*arg5);
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_erase__SWIG_0(void * jarg1, int jarg2, int jarg3, int jarg4) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  result = ((exodus::var const *)arg1)->erase(arg2,arg3,arg4);
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_erase__SWIG_1(void * jarg1, int jarg2, int jarg3) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  int arg2 ;
  int arg3 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  result = ((exodus::var const *)arg1)->erase(arg2,arg3);
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_erase__SWIG_2(void * jarg1, int jarg2) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  int arg2 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (int)jarg2; 
  result = ((exodus::var const *)arg1)->erase(arg2);
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_extract__SWIG_0(void * jarg1, int jarg2, int jarg3, int jarg4) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  result = ((exodus::var const *)arg1)->extract(arg2,arg3,arg4);
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_extract__SWIG_1(void * jarg1, int jarg2, int jarg3) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  int arg2 ;
  int arg3 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  result = ((exodus::var const *)arg1)->extract(arg2,arg3);
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_extract__SWIG_2(void * jarg1, int jarg2) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  int arg2 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (int)jarg2; 
  result = ((exodus::var const *)arg1)->extract(arg2);
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_replacer__SWIG_0(void * jarg1, int jarg2, int jarg3, int jarg4, void * jarg5) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  exodus::var *arg5 = 0 ;
  exodus::var *result = 0 ;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (exodus::var *)jarg5;
  if (!arg5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = (exodus::var *) &(arg1)->replacer(arg2,arg3,arg4,(exodus::var const &)*arg5);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_replacer__SWIG_1(void * jarg1, int jarg2, int jarg3, void * jarg4) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  int arg2 ;
  int arg3 ;
  exodus::var *arg4 = 0 ;
  exodus::var *result = 0 ;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (exodus::var *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = (exodus::var *) &(arg1)->replacer(arg2,arg3,(exodus::var const &)*arg4);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_replacer__SWIG_2(void * jarg1, int jarg2, void * jarg3) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  int arg2 ;
  exodus::var *arg3 = 0 ;
  exodus::var *result = 0 ;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (exodus::var *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = (exodus::var *) &(arg1)->replacer(arg2,(exodus::var const &)*arg3);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_inserter__SWIG_0(void * jarg1, int jarg2, int jarg3, int jarg4, void * jarg5) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  exodus::var *arg5 = 0 ;
  exodus::var *result = 0 ;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (exodus::var *)jarg5;
  if (!arg5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = (exodus::var *) &(arg1)->inserter(arg2,arg3,arg4,(exodus::var const &)*arg5);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_inserter__SWIG_1(void * jarg1, int jarg2, int jarg3, void * jarg4) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  int arg2 ;
  int arg3 ;
  exodus::var *arg4 = 0 ;
  exodus::var *result = 0 ;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (exodus::var *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = (exodus::var *) &(arg1)->inserter(arg2,arg3,(exodus::var const &)*arg4);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_inserter__SWIG_2(void * jarg1, int jarg2, void * jarg3) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  int arg2 ;
  exodus::var *arg3 = 0 ;
  exodus::var *result = 0 ;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (exodus::var *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = (exodus::var *) &(arg1)->inserter(arg2,(exodus::var const &)*arg3);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_eraser__SWIG_0(void * jarg1, int jarg2, int jarg3, int jarg4) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  exodus::var *result = 0 ;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  result = (exodus::var *) &(arg1)->eraser(arg2,arg3,arg4);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_eraser__SWIG_1(void * jarg1, int jarg2, int jarg3) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  int arg2 ;
  int arg3 ;
  exodus::var *result = 0 ;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  result = (exodus::var *) &(arg1)->eraser(arg2,arg3);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_eraser__SWIG_2(void * jarg1, int jarg2) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  int arg2 ;
  exodus::var *result = 0 ;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (int)jarg2; 
  result = (exodus::var *) &(arg1)->eraser(arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_mvar_locate__SWIG_0(void * jarg1, void * jarg2, void * jarg3, int jarg4, int jarg5) {
  unsigned int jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  int arg4 ;
  int arg5 ;
  bool result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  arg3 = (exodus::var *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var & type is null", 0);
    return 0;
  } 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  result = (bool)((exodus::var const *)arg1)->locate((exodus::var const &)*arg2,*arg3,arg4,arg5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_mvar_locate__SWIG_1(void * jarg1, void * jarg2, void * jarg3, int jarg4) {
  unsigned int jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  int arg4 ;
  bool result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  arg3 = (exodus::var *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var & type is null", 0);
    return 0;
  } 
  arg4 = (int)jarg4; 
  result = (bool)((exodus::var const *)arg1)->locate((exodus::var const &)*arg2,*arg3,arg4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_mvar_locate__SWIG_2(void * jarg1, void * jarg2, void * jarg3) {
  unsigned int jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  bool result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  arg3 = (exodus::var *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var & type is null", 0);
    return 0;
  } 
  result = (bool)((exodus::var const *)arg1)->locate((exodus::var const &)*arg2,*arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_mvar_locateby__SWIG_0(void * jarg1, void * jarg2, char * jarg3, void * jarg4, int jarg5, int jarg6) {
  unsigned int jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  exodus::var *arg4 = 0 ;
  int arg5 ;
  int arg6 ;
  bool result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  arg3 = (char *)jarg3; 
  arg4 = (exodus::var *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var & type is null", 0);
    return 0;
  } 
  arg5 = (int)jarg5; 
  arg6 = (int)jarg6; 
  result = (bool)((exodus::var const *)arg1)->locateby((exodus::var const &)*arg2,(char const *)arg3,*arg4,arg5,arg6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_mvar_locateby__SWIG_1(void * jarg1, void * jarg2, char * jarg3, void * jarg4, int jarg5) {
  unsigned int jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  exodus::var *arg4 = 0 ;
  int arg5 ;
  bool result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  arg3 = (char *)jarg3; 
  arg4 = (exodus::var *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var & type is null", 0);
    return 0;
  } 
  arg5 = (int)jarg5; 
  result = (bool)((exodus::var const *)arg1)->locateby((exodus::var const &)*arg2,(char const *)arg3,*arg4,arg5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_mvar_locateby__SWIG_2(void * jarg1, void * jarg2, char * jarg3, void * jarg4) {
  unsigned int jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  exodus::var *arg4 = 0 ;
  bool result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  arg3 = (char *)jarg3; 
  arg4 = (exodus::var *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var & type is null", 0);
    return 0;
  } 
  result = (bool)((exodus::var const *)arg1)->locateby((exodus::var const &)*arg2,(char const *)arg3,*arg4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_mvar_locateby__SWIG_3(void * jarg1, void * jarg2, void * jarg3, void * jarg4, int jarg5, int jarg6) {
  unsigned int jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  exodus::var *arg4 = 0 ;
  int arg5 ;
  int arg6 ;
  bool result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  arg3 = (exodus::var *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  arg4 = (exodus::var *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var & type is null", 0);
    return 0;
  } 
  arg5 = (int)jarg5; 
  arg6 = (int)jarg6; 
  result = (bool)((exodus::var const *)arg1)->locateby((exodus::var const &)*arg2,(exodus::var const &)*arg3,*arg4,arg5,arg6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_mvar_locateby__SWIG_4(void * jarg1, void * jarg2, void * jarg3, void * jarg4, int jarg5) {
  unsigned int jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  exodus::var *arg4 = 0 ;
  int arg5 ;
  bool result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  arg3 = (exodus::var *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  arg4 = (exodus::var *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var & type is null", 0);
    return 0;
  } 
  arg5 = (int)jarg5; 
  result = (bool)((exodus::var const *)arg1)->locateby((exodus::var const &)*arg2,(exodus::var const &)*arg3,*arg4,arg5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_mvar_locateby__SWIG_5(void * jarg1, void * jarg2, void * jarg3, void * jarg4) {
  unsigned int jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  exodus::var *arg4 = 0 ;
  bool result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  arg3 = (exodus::var *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  arg4 = (exodus::var *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var & type is null", 0);
    return 0;
  } 
  result = (bool)((exodus::var const *)arg1)->locateby((exodus::var const &)*arg2,(exodus::var const &)*arg3,*arg4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_mvar_locateusing__SWIG_0(void * jarg1, void * jarg2, void * jarg3, void * jarg4, int jarg5, int jarg6, int jarg7) {
  unsigned int jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  exodus::var *arg4 = 0 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  bool result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  arg3 = (exodus::var *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  arg4 = (exodus::var *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var & type is null", 0);
    return 0;
  } 
  arg5 = (int)jarg5; 
  arg6 = (int)jarg6; 
  arg7 = (int)jarg7; 
  result = (bool)((exodus::var const *)arg1)->locateusing((exodus::var const &)*arg2,(exodus::var const &)*arg3,*arg4,arg5,arg6,arg7);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_mvar_locateusing__SWIG_1(void * jarg1, void * jarg2, void * jarg3, void * jarg4, int jarg5, int jarg6) {
  unsigned int jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  exodus::var *arg4 = 0 ;
  int arg5 ;
  int arg6 ;
  bool result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  arg3 = (exodus::var *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  arg4 = (exodus::var *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var & type is null", 0);
    return 0;
  } 
  arg5 = (int)jarg5; 
  arg6 = (int)jarg6; 
  result = (bool)((exodus::var const *)arg1)->locateusing((exodus::var const &)*arg2,(exodus::var const &)*arg3,*arg4,arg5,arg6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_mvar_locateusing__SWIG_2(void * jarg1, void * jarg2, void * jarg3, void * jarg4, int jarg5) {
  unsigned int jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  exodus::var *arg4 = 0 ;
  int arg5 ;
  bool result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  arg3 = (exodus::var *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  arg4 = (exodus::var *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var & type is null", 0);
    return 0;
  } 
  arg5 = (int)jarg5; 
  result = (bool)((exodus::var const *)arg1)->locateusing((exodus::var const &)*arg2,(exodus::var const &)*arg3,*arg4,arg5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_mvar_locateusing__SWIG_3(void * jarg1, void * jarg2, void * jarg3, void * jarg4) {
  unsigned int jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  exodus::var *arg4 = 0 ;
  bool result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  arg3 = (exodus::var *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  arg4 = (exodus::var *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var & type is null", 0);
    return 0;
  } 
  result = (bool)((exodus::var const *)arg1)->locateusing((exodus::var const &)*arg2,(exodus::var const &)*arg3,*arg4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_mvar_locateusing__SWIG_4(void * jarg1, void * jarg2, void * jarg3) {
  unsigned int jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  bool result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  arg3 = (exodus::var *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = (bool)((exodus::var const *)arg1)->locateusing((exodus::var const &)*arg2,(exodus::var const &)*arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_sum(void * jarg1, void * jarg2) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = ((exodus::var const *)arg1)->sum((exodus::var const &)*arg2);
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_mvar_connect(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  bool result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = (bool)(arg1)->connect((exodus::var const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_mvar_disconnect(void * jarg1) {
  unsigned int jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  bool result;
  
  arg1 = (exodus::var *)jarg1; 
  result = (bool)(arg1)->disconnect();
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_mvar_setdefaultconnection(void * jarg1) {
  unsigned int jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  bool result;
  
  arg1 = (exodus::var *)jarg1; 
  result = (bool)(arg1)->setdefaultconnection();
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_mvar_begintrans(void * jarg1) {
  unsigned int jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  bool result;
  
  arg1 = (exodus::var *)jarg1; 
  result = (bool)((exodus::var const *)arg1)->begintrans();
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_mvar_rollbacktrans(void * jarg1) {
  unsigned int jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  bool result;
  
  arg1 = (exodus::var *)jarg1; 
  result = (bool)((exodus::var const *)arg1)->rollbacktrans();
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_mvar_committrans(void * jarg1) {
  unsigned int jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  bool result;
  
  arg1 = (exodus::var *)jarg1; 
  result = (bool)((exodus::var const *)arg1)->committrans();
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_mvar_createdb__SWIG_0(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  bool result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = (bool)((exodus::var const *)arg1)->createdb((exodus::var const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_mvar_deletedb__SWIG_0(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  bool result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = (bool)((exodus::var const *)arg1)->deletedb((exodus::var const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_mvar_createdb__SWIG_1(void * jarg1, void * jarg2, void * jarg3) {
  unsigned int jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  bool result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  arg3 = (exodus::var *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var & type is null", 0);
    return 0;
  } 
  result = (bool)((exodus::var const *)arg1)->createdb((exodus::var const &)*arg2,*arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_mvar_deletedb__SWIG_1(void * jarg1, void * jarg2, void * jarg3) {
  unsigned int jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  bool result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  arg3 = (exodus::var *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var & type is null", 0);
    return 0;
  } 
  result = (bool)((exodus::var const *)arg1)->deletedb((exodus::var const &)*arg2,*arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_mvar_createfile(void * jarg1, void * jarg2, void * jarg3) {
  unsigned int jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  bool result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  arg3 = (exodus::var *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = (bool)(arg1)->createfile((exodus::var const &)*arg2,(exodus::var const &)*arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_mvar_deletefile(void * jarg1) {
  unsigned int jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  bool result;
  
  arg1 = (exodus::var *)jarg1; 
  result = (bool)((exodus::var const *)arg1)->deletefile();
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_mvar_clearfile(void * jarg1) {
  unsigned int jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  bool result;
  
  arg1 = (exodus::var *)jarg1; 
  result = (bool)((exodus::var const *)arg1)->clearfile();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_listfiles(void * jarg1) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  result = ((exodus::var const *)arg1)->listfiles();
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_mvar_createindex(void * jarg1, void * jarg2, void * jarg3) {
  unsigned int jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  bool result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  arg3 = (exodus::var *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = (bool)((exodus::var const *)arg1)->createindex((exodus::var const &)*arg2,(exodus::var const &)*arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_mvar_deleteindex(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  bool result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = (bool)((exodus::var const *)arg1)->deleteindex((exodus::var const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_listindexes(void * jarg1, void * jarg2) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = ((exodus::var const *)arg1)->listindexes((exodus::var const &)*arg2);
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_mvar_open(void * jarg1, void * jarg2, void * jarg3) {
  unsigned int jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  bool result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  arg3 = (exodus::var *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = (bool)(arg1)->open((exodus::var const &)*arg2,(exodus::var const &)*arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_mvar_close(void * jarg1) {
  exodus::var *arg1 = (exodus::var *) 0 ;
  
  arg1 = (exodus::var *)jarg1; 
  (arg1)->close();
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_mvar_select(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  bool result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = (bool)((exodus::var const *)arg1)->select((exodus::var const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_mvar_clearselect(void * jarg1) {
  exodus::var *arg1 = (exodus::var *) 0 ;
  
  arg1 = (exodus::var *)jarg1; 
  ((exodus::var const *)arg1)->clearselect();
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_mvar_readnext__SWIG_0(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  bool result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var & type is null", 0);
    return 0;
  } 
  result = (bool)((exodus::var const *)arg1)->readnext(*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_mvar_readnext__SWIG_1(void * jarg1, void * jarg2, void * jarg3) {
  unsigned int jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  bool result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var & type is null", 0);
    return 0;
  } 
  arg3 = (exodus::var *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var & type is null", 0);
    return 0;
  } 
  result = (bool)((exodus::var const *)arg1)->readnext(*arg2,*arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_mvar_selectrecord(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  bool result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = (bool)((exodus::var const *)arg1)->selectrecord((exodus::var const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_mvar_readnextrecord(void * jarg1, void * jarg2, void * jarg3) {
  unsigned int jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  bool result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var & type is null", 0);
    return 0;
  } 
  arg3 = (exodus::var *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var & type is null", 0);
    return 0;
  } 
  result = (bool)((exodus::var const *)arg1)->readnextrecord(*arg2,*arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_mvar__lock(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  bool result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = (bool)((exodus::var const *)arg1)->lock((exodus::var const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_mvar_unlock(void * jarg1, void * jarg2) {
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return ;
  } 
  ((exodus::var const *)arg1)->unlock((exodus::var const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_mvar_unlockall(void * jarg1) {
  exodus::var *arg1 = (exodus::var *) 0 ;
  
  arg1 = (exodus::var *)jarg1; 
  ((exodus::var const *)arg1)->unlockall();
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_mvar_read(void * jarg1, void * jarg2, void * jarg3) {
  unsigned int jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  bool result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  arg3 = (exodus::var *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = (bool)(arg1)->read((exodus::var const &)*arg2,(exodus::var const &)*arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_mvar_readv(void * jarg1, void * jarg2, void * jarg3, int jarg4) {
  unsigned int jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  int arg4 ;
  bool result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  arg3 = (exodus::var *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  arg4 = (int)jarg4; 
  result = (bool)(arg1)->readv((exodus::var const &)*arg2,(exodus::var const &)*arg3,arg4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_mvar_write(void * jarg1, void * jarg2, void * jarg3) {
  unsigned int jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  bool result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  arg3 = (exodus::var *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = (bool)((exodus::var const *)arg1)->write((exodus::var const &)*arg2,(exodus::var const &)*arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_mvar_writev(void * jarg1, void * jarg2, void * jarg3, int jarg4) {
  unsigned int jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  int arg4 ;
  bool result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  arg3 = (exodus::var *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  arg4 = (int)jarg4; 
  result = (bool)((exodus::var const *)arg1)->writev((exodus::var const &)*arg2,(exodus::var const &)*arg3,arg4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_mvar_deleterecord(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  bool result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = (bool)((exodus::var const *)arg1)->deleterecord((exodus::var const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_mvar_updaterecord(void * jarg1, void * jarg2, void * jarg3) {
  unsigned int jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  bool result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  arg3 = (exodus::var *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = (bool)((exodus::var const *)arg1)->updaterecord((exodus::var const &)*arg2,(exodus::var const &)*arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_mvar_insertrecord(void * jarg1, void * jarg2, void * jarg3) {
  unsigned int jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  bool result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  arg3 = (exodus::var *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = (bool)((exodus::var const *)arg1)->insertrecord((exodus::var const &)*arg2,(exodus::var const &)*arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_xlate__SWIG_0(void * jarg1, void * jarg2, void * jarg3, wchar_t * jarg4) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  wchar_t *arg4 = (wchar_t *) 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  arg3 = (exodus::var *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  arg4 = (wchar_t *)jarg4; 
  result = ((exodus::var const *)arg1)->xlate((exodus::var const &)*arg2,(exodus::var const &)*arg3,(wchar_t const *)arg4);
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_xlate__SWIG_1(void * jarg1, void * jarg2, void * jarg3, void * jarg4) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  exodus::var *arg4 = 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  arg3 = (exodus::var *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  arg4 = (exodus::var *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = ((exodus::var const *)arg1)->xlate((exodus::var const &)*arg2,(exodus::var const &)*arg3,(exodus::var const &)*arg4);
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_mvar_sqlexec__SWIG_0(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  bool result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = (bool)((exodus::var const *)arg1)->sqlexec((exodus::var const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_mvar_sqlexec__SWIG_1(void * jarg1, void * jarg2, void * jarg3) {
  unsigned int jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  bool result;
  
  arg1 = (exodus::var *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  arg3 = (exodus::var *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var & type is null", 0);
    return 0;
  } 
  result = (bool)((exodus::var const *)arg1)->sqlexec((exodus::var const &)*arg2,*arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mvar_version(void * jarg1) {
  void * jresult ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1; 
  result = ((exodus::var const *)arg1)->version();
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_MVeq(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  exodus::var *arg1 = 0 ;
  exodus::var *arg2 = 0 ;
  bool result;
  
  arg1 = (exodus::var *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = (bool)exodus::MVeq((exodus::var const &)*arg1,(exodus::var const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_MVlt__SWIG_0(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  exodus::var *arg1 = 0 ;
  exodus::var *arg2 = 0 ;
  bool result;
  
  arg1 = (exodus::var *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = (bool)exodus::MVlt((exodus::var const &)*arg1,(exodus::var const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_MVlt__SWIG_1(void * jarg1, int jarg2) {
  unsigned int jresult ;
  exodus::var *arg1 = 0 ;
  int arg2 ;
  bool result;
  
  arg1 = (exodus::var *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  arg2 = (int)jarg2; 
  result = (bool)exodus::MVlt((exodus::var const &)*arg1,arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_MVlt__SWIG_2(int jarg1, void * jarg2) {
  unsigned int jresult ;
  int arg1 ;
  exodus::var *arg2 = 0 ;
  bool result;
  
  arg1 = (int)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = (bool)exodus::MVlt(arg1,(exodus::var const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_MVadd(void * jarg1, void * jarg2) {
  void * jresult ;
  exodus::var *arg1 = 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = exodus::MVadd((exodus::var const &)*arg1,(exodus::var const &)*arg2);
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_MVmul(void * jarg1, void * jarg2) {
  void * jresult ;
  exodus::var *arg1 = 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = exodus::MVmul((exodus::var const &)*arg1,(exodus::var const &)*arg2);
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_MVdiv(void * jarg1, void * jarg2) {
  void * jresult ;
  exodus::var *arg1 = 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = exodus::MVdiv((exodus::var const &)*arg1,(exodus::var const &)*arg2);
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_MVmod(void * jarg1, void * jarg2) {
  void * jresult ;
  exodus::var *arg1 = 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = exodus::MVmod((exodus::var const &)*arg1,(exodus::var const &)*arg2);
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_MVcat(void * jarg1, void * jarg2) {
  void * jresult ;
  exodus::var *arg1 = 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var result;
  
  arg1 = (exodus::var *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = exodus::MVcat((exodus::var const &)*arg1,(exodus::var const &)*arg2);
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_dim__SWIG_0(int jarg1, int jarg2) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  exodus::dim *result = 0 ;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  result = (exodus::dim *)new exodus::dim(arg1,arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_dim__SWIG_1(int jarg1) {
  void * jresult ;
  int arg1 ;
  exodus::dim *result = 0 ;
  
  arg1 = (int)jarg1; 
  result = (exodus::dim *)new exodus::dim(arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_dim_redim__SWIG_0(void * jarg1, int jarg2, int jarg3) {
  unsigned int jresult ;
  exodus::dim *arg1 = (exodus::dim *) 0 ;
  int arg2 ;
  int arg3 ;
  bool result;
  
  arg1 = (exodus::dim *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  result = (bool)(arg1)->redim(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_dim_redim__SWIG_1(void * jarg1, int jarg2) {
  unsigned int jresult ;
  exodus::dim *arg1 = (exodus::dim *) 0 ;
  int arg2 ;
  bool result;
  
  arg1 = (exodus::dim *)jarg1; 
  arg2 = (int)jarg2; 
  result = (bool)(arg1)->redim(arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_dim_unparse(void * jarg1) {
  void * jresult ;
  exodus::dim *arg1 = (exodus::dim *) 0 ;
  exodus::var result;
  
  arg1 = (exodus::dim *)jarg1; 
  result = ((exodus::dim const *)arg1)->unparse();
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_dim(void * jarg1) {
  exodus::dim *arg1 = (exodus::dim *) 0 ;
  
  arg1 = (exodus::dim *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_dim__SWIG_2() {
  void * jresult ;
  exodus::dim *result = 0 ;
  
  result = (exodus::dim *)new exodus::dim();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_dim_parse(void * jarg1, void * jarg2) {
  void * jresult ;
  exodus::dim *arg1 = (exodus::dim *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var result;
  
  arg1 = (exodus::dim *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = (arg1)->parse((exodus::var const &)*arg2);
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_dim_read(void * jarg1, void * jarg2, void * jarg3) {
  unsigned int jresult ;
  exodus::dim *arg1 = (exodus::dim *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  bool result;
  
  arg1 = (exodus::dim *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  arg3 = (exodus::var *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = (bool)(arg1)->read((exodus::var const &)*arg2,(exodus::var const &)*arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_dim_write(void * jarg1, void * jarg2, void * jarg3) {
  unsigned int jresult ;
  exodus::dim *arg1 = (exodus::dim *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  bool result;
  
  arg1 = (exodus::dim *)jarg1; 
  arg2 = (exodus::var *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  arg3 = (exodus::var *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = (bool)((exodus::dim const *)arg1)->write((exodus::var const &)*arg2,(exodus::var const &)*arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FM_get() {
  void * jresult ;
  exodus::var *result = 0 ;
  
  result = (exodus::var *)&exodus::FM;
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_VM_get() {
  void * jresult ;
  exodus::var *result = 0 ;
  
  result = (exodus::var *)&exodus::VM;
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_SM_get() {
  void * jresult ;
  exodus::var *result = 0 ;
  
  result = (exodus::var *)&exodus::SM;
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_SVM_get() {
  void * jresult ;
  exodus::var *result = 0 ;
  
  result = (exodus::var *)&exodus::SVM;
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_TM_get() {
  void * jresult ;
  exodus::var *result = 0 ;
  
  result = (exodus::var *)&exodus::TM;
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_STM_get() {
  void * jresult ;
  exodus::var *result = 0 ;
  
  result = (exodus::var *)&exodus::STM;
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_SSTM_get() {
  void * jresult ;
  exodus::var *result = 0 ;
  
  result = (exodus::var *)&exodus::SSTM;
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_IM_get() {
  void * jresult ;
  exodus::var *result = 0 ;
  
  result = (exodus::var *)&exodus::IM;
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_RM_get() {
  void * jresult ;
  exodus::var *result = 0 ;
  
  result = (exodus::var *)&exodus::RM;
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AM_get() {
  void * jresult ;
  exodus::var *result = 0 ;
  
  result = (exodus::var *)&exodus::AM;
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_DQ_get() {
  void * jresult ;
  exodus::var *result = 0 ;
  
  result = (exodus::var *)&exodus::DQ;
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_SQ_get() {
  void * jresult ;
  exodus::var *result = 0 ;
  
  result = (exodus::var *)&exodus::SQ;
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_SLASH_get() {
  void * jresult ;
  exodus::var *result = 0 ;
  
  result = (exodus::var *)&exodus::SLASH;
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_SLASH__get() {
  char jresult ;
  char result;
  
  result = (char)(char)exodus::SLASH_;
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_SLASH_IS_BACKSLASH_get() {
  unsigned int jresult ;
  bool result;
  
  result = (bool)(false);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_LOWERCASE__get() {
  void * jresult ;
  exodus::var *result = 0 ;
  
  result = (exodus::var *)&exodus::LOWERCASE_;
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_UPPERCASE__get() {
  void * jresult ;
  exodus::var *result = 0 ;
  
  result = (exodus::var *)&exodus::UPPERCASE_;
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_PLATFORM__get() {
  void * jresult ;
  exodus::var *result = 0 ;
  
  result = (exodus::var *)&exodus::PLATFORM_;
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_DBTRACE_set(int jarg1) {
  int arg1 ;
  
  arg1 = (int)jarg1; 
  exodus::DBTRACE = arg1;
}


SWIGEXPORT int SWIGSTDCALL CSharp_DBTRACE_get() {
  int jresult ;
  int result;
  
  result = (int)exodus::DBTRACE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EXECPATH2_set(void * jarg1) {
  exodus::var *arg1 = (exodus::var *) 0 ;
  
  arg1 = (exodus::var *)jarg1; 
  exodus::EXECPATH2 = *arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EXECPATH2_get() {
  void * jresult ;
  exodus::var *result = 0 ;
  
  result = (exodus::var *)&exodus::EXECPATH2;
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_output(void * jarg1) {
  exodus::var *arg1 = 0 ;
  
  arg1 = (exodus::var *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return ;
  } 
  exodus::output((exodus::var const &)*arg1);
}


SWIGEXPORT void SWIGSTDCALL CSharp_outputl(void * jarg1) {
  exodus::var *arg1 = 0 ;
  
  arg1 = (exodus::var *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return ;
  } 
  exodus::outputl((exodus::var const &)*arg1);
}


SWIGEXPORT void SWIGSTDCALL CSharp_outputt(void * jarg1) {
  exodus::var *arg1 = 0 ;
  
  arg1 = (exodus::var *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return ;
  } 
  exodus::outputt((exodus::var const &)*arg1);
}


SWIGEXPORT void SWIGSTDCALL CSharp_errput(void * jarg1) {
  exodus::var *arg1 = 0 ;
  
  arg1 = (exodus::var *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return ;
  } 
  exodus::errput((exodus::var const &)*arg1);
}


SWIGEXPORT void SWIGSTDCALL CSharp_errputl(void * jarg1) {
  exodus::var *arg1 = 0 ;
  
  arg1 = (exodus::var *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return ;
  } 
  exodus::errputl((exodus::var const &)*arg1);
}


SWIGEXPORT void SWIGSTDCALL CSharp_logput(void * jarg1) {
  exodus::var *arg1 = 0 ;
  
  arg1 = (exodus::var *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return ;
  } 
  exodus::logput((exodus::var const &)*arg1);
}


SWIGEXPORT void SWIGSTDCALL CSharp_logputl(void * jarg1) {
  exodus::var *arg1 = 0 ;
  
  arg1 = (exodus::var *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return ;
  } 
  exodus::logputl((exodus::var const &)*arg1);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_backtrace() {
  void * jresult ;
  exodus::var result;
  
  result = exodus::backtrace();
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_getenvironmentn() {
  int jresult ;
  int result;
  
  result = (int)exodus::getenvironmentn();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_setenvironmentn(int jarg1) {
  int arg1 ;
  
  arg1 = (int)jarg1; 
  exodus::setenvironmentn(arg1);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_getprocessn() {
  void * jresult ;
  exodus::var result;
  
  result = exodus::getprocessn();
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_getexecpath() {
  void * jresult ;
  exodus::var result;
  
  result = exodus::getexecpath();
  jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_MVException(void * jarg1) {
  void * jresult ;
  exodus::var *arg1 = 0 ;
  exodus::MVException *result = 0 ;
  
  arg1 = (exodus::var *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = (exodus::MVException *)new exodus::MVException((exodus::var const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_MVException_description_set(void * jarg1, void * jarg2) {
  exodus::MVException *arg1 = (exodus::MVException *) 0 ;
  exodus::var *arg2 = (exodus::var *) 0 ;
  
  arg1 = (exodus::MVException *)jarg1; 
  arg2 = (exodus::var *)jarg2; 
  if (arg1) (arg1)->description = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_MVException_description_get(void * jarg1) {
  void * jresult ;
  exodus::MVException *arg1 = (exodus::MVException *) 0 ;
  exodus::var *result = 0 ;
  
  arg1 = (exodus::MVException *)jarg1; 
  result = (exodus::var *)& ((arg1)->description);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_MVException(void * jarg1) {
  exodus::MVException *arg1 = (exodus::MVException *) 0 ;
  
  arg1 = (exodus::MVException *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_MVDivideByZero(void * jarg1) {
  void * jresult ;
  exodus::var *arg1 = 0 ;
  exodus::MVDivideByZero *result = 0 ;
  
  arg1 = (exodus::var *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = (exodus::MVDivideByZero *)new exodus::MVDivideByZero((exodus::var const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_MVDivideByZero(void * jarg1) {
  exodus::MVDivideByZero *arg1 = (exodus::MVDivideByZero *) 0 ;
  
  arg1 = (exodus::MVDivideByZero *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_MVNonNumeric(void * jarg1) {
  void * jresult ;
  exodus::var *arg1 = 0 ;
  exodus::MVNonNumeric *result = 0 ;
  
  arg1 = (exodus::var *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = (exodus::MVNonNumeric *)new exodus::MVNonNumeric((exodus::var const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_MVNonNumeric(void * jarg1) {
  exodus::MVNonNumeric *arg1 = (exodus::MVNonNumeric *) 0 ;
  
  arg1 = (exodus::MVNonNumeric *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_MVOutOfMemory(void * jarg1) {
  void * jresult ;
  exodus::var *arg1 = 0 ;
  exodus::MVOutOfMemory *result = 0 ;
  
  arg1 = (exodus::var *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = (exodus::MVOutOfMemory *)new exodus::MVOutOfMemory((exodus::var const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_MVOutOfMemory(void * jarg1) {
  exodus::MVOutOfMemory *arg1 = (exodus::MVOutOfMemory *) 0 ;
  
  arg1 = (exodus::MVOutOfMemory *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_MVUnassigned(void * jarg1) {
  void * jresult ;
  exodus::var *arg1 = 0 ;
  exodus::MVUnassigned *result = 0 ;
  
  arg1 = (exodus::var *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = (exodus::MVUnassigned *)new exodus::MVUnassigned((exodus::var const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_MVUnassigned(void * jarg1) {
  exodus::MVUnassigned *arg1 = (exodus::MVUnassigned *) 0 ;
  
  arg1 = (exodus::MVUnassigned *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_MVUndefined(void * jarg1) {
  void * jresult ;
  exodus::var *arg1 = 0 ;
  exodus::MVUndefined *result = 0 ;
  
  arg1 = (exodus::var *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = (exodus::MVUndefined *)new exodus::MVUndefined((exodus::var const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_MVUndefined(void * jarg1) {
  exodus::MVUndefined *arg1 = (exodus::MVUndefined *) 0 ;
  
  arg1 = (exodus::MVUndefined *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_MVInvalidPointer(void * jarg1) {
  void * jresult ;
  exodus::var *arg1 = 0 ;
  exodus::MVInvalidPointer *result = 0 ;
  
  arg1 = (exodus::var *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = (exodus::MVInvalidPointer *)new exodus::MVInvalidPointer((exodus::var const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_MVInvalidPointer(void * jarg1) {
  exodus::MVInvalidPointer *arg1 = (exodus::MVInvalidPointer *) 0 ;
  
  arg1 = (exodus::MVInvalidPointer *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_MVDBException(void * jarg1) {
  void * jresult ;
  exodus::var *arg1 = 0 ;
  exodus::MVDBException *result = 0 ;
  
  arg1 = (exodus::var *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = (exodus::MVDBException *)new exodus::MVDBException((exodus::var const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_MVDBException(void * jarg1) {
  exodus::MVDBException *arg1 = (exodus::MVDBException *) 0 ;
  
  arg1 = (exodus::MVDBException *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_MVNotImplemented(void * jarg1) {
  void * jresult ;
  exodus::var *arg1 = 0 ;
  exodus::MVNotImplemented *result = 0 ;
  
  arg1 = (exodus::var *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = (exodus::MVNotImplemented *)new exodus::MVNotImplemented((exodus::var const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_MVNotImplemented(void * jarg1) {
  exodus::MVNotImplemented *arg1 = (exodus::MVNotImplemented *) 0 ;
  
  arg1 = (exodus::MVNotImplemented *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_MVDebug(void * jarg1) {
  void * jresult ;
  exodus::var *arg1 = 0 ;
  exodus::MVDebug *result = 0 ;
  
  arg1 = (exodus::var *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = (exodus::MVDebug *)new exodus::MVDebug((exodus::var const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_MVDebug(void * jarg1) {
  exodus::MVDebug *arg1 = (exodus::MVDebug *) 0 ;
  
  arg1 = (exodus::MVDebug *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_MVStop(void * jarg1) {
  void * jresult ;
  exodus::var *arg1 = 0 ;
  exodus::MVStop *result = 0 ;
  
  arg1 = (exodus::var *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = (exodus::MVStop *)new exodus::MVStop((exodus::var const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_MVStop(void * jarg1) {
  exodus::MVStop *arg1 = (exodus::MVStop *) 0 ;
  
  arg1 = (exodus::MVStop *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_MVAbort(void * jarg1) {
  void * jresult ;
  exodus::var *arg1 = 0 ;
  exodus::MVAbort *result = 0 ;
  
  arg1 = (exodus::var *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = (exodus::MVAbort *)new exodus::MVAbort((exodus::var const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_MVAbort(void * jarg1) {
  exodus::MVAbort *arg1 = (exodus::MVAbort *) 0 ;
  
  arg1 = (exodus::MVAbort *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_MVArrayDimensionedZero() {
  void * jresult ;
  exodus::MVArrayDimensionedZero *result = 0 ;
  
  result = (exodus::MVArrayDimensionedZero *)new exodus::MVArrayDimensionedZero();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_MVArrayDimensionedZero(void * jarg1) {
  exodus::MVArrayDimensionedZero *arg1 = (exodus::MVArrayDimensionedZero *) 0 ;
  
  arg1 = (exodus::MVArrayDimensionedZero *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_MVArrayIndexOutOfBounds(void * jarg1) {
  void * jresult ;
  exodus::var *arg1 = 0 ;
  exodus::MVArrayIndexOutOfBounds *result = 0 ;
  
  arg1 = (exodus::var *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "exodus::var const & type is null", 0);
    return 0;
  } 
  result = (exodus::MVArrayIndexOutOfBounds *)new exodus::MVArrayIndexOutOfBounds((exodus::var const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_MVArrayIndexOutOfBounds(void * jarg1) {
  exodus::MVArrayIndexOutOfBounds *arg1 = (exodus::MVArrayIndexOutOfBounds *) 0 ;
  
  arg1 = (exodus::MVArrayIndexOutOfBounds *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_MVArrayNotDimensioned() {
  void * jresult ;
  exodus::MVArrayNotDimensioned *result = 0 ;
  
  result = (exodus::MVArrayNotDimensioned *)new exodus::MVArrayNotDimensioned();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_MVArrayNotDimensioned(void * jarg1) {
  exodus::MVArrayNotDimensioned *arg1 = (exodus::MVArrayNotDimensioned *) 0 ;
  
  arg1 = (exodus::MVArrayNotDimensioned *)jarg1; 
  delete arg1;
}


SWIGEXPORT exodus::MVException * SWIGSTDCALL CSharp_MVDivideByZero_SWIGUpcast(exodus::MVDivideByZero *jarg1) {
    return (exodus::MVException *)jarg1;
}

SWIGEXPORT exodus::MVException * SWIGSTDCALL CSharp_MVNonNumeric_SWIGUpcast(exodus::MVNonNumeric *jarg1) {
    return (exodus::MVException *)jarg1;
}

SWIGEXPORT exodus::MVException * SWIGSTDCALL CSharp_MVOutOfMemory_SWIGUpcast(exodus::MVOutOfMemory *jarg1) {
    return (exodus::MVException *)jarg1;
}

SWIGEXPORT exodus::MVException * SWIGSTDCALL CSharp_MVUnassigned_SWIGUpcast(exodus::MVUnassigned *jarg1) {
    return (exodus::MVException *)jarg1;
}

SWIGEXPORT exodus::MVException * SWIGSTDCALL CSharp_MVUndefined_SWIGUpcast(exodus::MVUndefined *jarg1) {
    return (exodus::MVException *)jarg1;
}

SWIGEXPORT exodus::MVException * SWIGSTDCALL CSharp_MVInvalidPointer_SWIGUpcast(exodus::MVInvalidPointer *jarg1) {
    return (exodus::MVException *)jarg1;
}

SWIGEXPORT exodus::MVException * SWIGSTDCALL CSharp_MVDBException_SWIGUpcast(exodus::MVDBException *jarg1) {
    return (exodus::MVException *)jarg1;
}

SWIGEXPORT exodus::MVException * SWIGSTDCALL CSharp_MVNotImplemented_SWIGUpcast(exodus::MVNotImplemented *jarg1) {
    return (exodus::MVException *)jarg1;
}

SWIGEXPORT exodus::MVException * SWIGSTDCALL CSharp_MVDebug_SWIGUpcast(exodus::MVDebug *jarg1) {
    return (exodus::MVException *)jarg1;
}

SWIGEXPORT exodus::MVException * SWIGSTDCALL CSharp_MVStop_SWIGUpcast(exodus::MVStop *jarg1) {
    return (exodus::MVException *)jarg1;
}

SWIGEXPORT exodus::MVException * SWIGSTDCALL CSharp_MVAbort_SWIGUpcast(exodus::MVAbort *jarg1) {
    return (exodus::MVException *)jarg1;
}

SWIGEXPORT exodus::MVException * SWIGSTDCALL CSharp_MVArrayDimensionedZero_SWIGUpcast(exodus::MVArrayDimensionedZero *jarg1) {
    return (exodus::MVException *)jarg1;
}

SWIGEXPORT exodus::MVException * SWIGSTDCALL CSharp_MVArrayIndexOutOfBounds_SWIGUpcast(exodus::MVArrayIndexOutOfBounds *jarg1) {
    return (exodus::MVException *)jarg1;
}

SWIGEXPORT exodus::MVException * SWIGSTDCALL CSharp_MVArrayNotDimensioned_SWIGUpcast(exodus::MVArrayNotDimensioned *jarg1) {
    return (exodus::MVException *)jarg1;
}

#ifdef __cplusplus
}
#endif

