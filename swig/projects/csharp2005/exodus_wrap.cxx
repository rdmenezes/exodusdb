/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

#define SWIGJAVA


#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__)) 
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__)) 
# else
#   define SWIGUNUSED 
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif 
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED 
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#  ifndef GCC_HASCLASSVISIBILITY
#    define GCC_HASCLASSVISIBILITY
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif 
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif



/* Fix for jlong on some versions of gcc on Windows */
#if defined(__GNUC__) && !defined(__INTEL_COMPILER)
  typedef long long __int64;
#endif

/* Fix for jlong on 64-bit x86 Solaris */
#if defined(__x86_64)
# ifdef _LP64
#   undef _LP64
# endif
#endif

#include <jni.h>
#include <stdlib.h>
#include <string.h>


/* Support for throwing Java exceptions */
typedef enum {
  SWIG_JavaOutOfMemoryError = 1, 
  SWIG_JavaIOException, 
  SWIG_JavaRuntimeException, 
  SWIG_JavaIndexOutOfBoundsException,
  SWIG_JavaArithmeticException,
  SWIG_JavaIllegalArgumentException,
  SWIG_JavaNullPointerException,
  SWIG_JavaDirectorPureVirtual,
  SWIG_JavaUnknownError
} SWIG_JavaExceptionCodes;

typedef struct {
  SWIG_JavaExceptionCodes code;
  const char *java_exception;
} SWIG_JavaExceptions_t;


static void SWIGUNUSED SWIG_JavaThrowException(JNIEnv *jenv, SWIG_JavaExceptionCodes code, const char *msg) {
  jclass excep;
  static const SWIG_JavaExceptions_t java_exceptions[] = {
    { SWIG_JavaOutOfMemoryError, "java/lang/OutOfMemoryError" },
    { SWIG_JavaIOException, "java/io/IOException" },
    { SWIG_JavaRuntimeException, "java/lang/RuntimeException" },
    { SWIG_JavaIndexOutOfBoundsException, "java/lang/IndexOutOfBoundsException" },
    { SWIG_JavaArithmeticException, "java/lang/ArithmeticException" },
    { SWIG_JavaIllegalArgumentException, "java/lang/IllegalArgumentException" },
    { SWIG_JavaNullPointerException, "java/lang/NullPointerException" },
    { SWIG_JavaDirectorPureVirtual, "java/lang/RuntimeException" },
    { SWIG_JavaUnknownError,  "java/lang/UnknownError" },
    { (SWIG_JavaExceptionCodes)0,  "java/lang/UnknownError" }
  };
  const SWIG_JavaExceptions_t *except_ptr = java_exceptions;

  while (except_ptr->code != code && except_ptr->code)
    except_ptr++;

  jenv->ExceptionClear();
  excep = jenv->FindClass(except_ptr->java_exception);
  if (excep)
    jenv->ThrowNew(excep, msg);
}


/* Contract support */

#define SWIG_contract_assert(nullreturn, expr, msg) if (!(expr)) {SWIG_JavaThrowException(jenv, SWIG_JavaIllegalArgumentException, msg); return nullreturn; } else

/*  Errors in SWIG */
#define  SWIG_UnknownError    	   -1 
#define  SWIG_IOError        	   -2 
#define  SWIG_RuntimeError   	   -3 
#define  SWIG_IndexError     	   -4 
#define  SWIG_TypeError      	   -5 
#define  SWIG_DivisionByZero 	   -6 
#define  SWIG_OverflowError  	   -7 
#define  SWIG_SyntaxError    	   -8 
#define  SWIG_ValueError     	   -9 
#define  SWIG_SystemError    	   -10
#define  SWIG_AttributeError 	   -11
#define  SWIG_MemoryError    	   -12 
#define  SWIG_NullReferenceError   -13




#include <string>


SWIGINTERN void SWIG_JavaException(JNIEnv *jenv, int code, const char *msg) {
  SWIG_JavaExceptionCodes exception_code = SWIG_JavaUnknownError;
  switch(code) {
  case SWIG_MemoryError:
    exception_code = SWIG_JavaOutOfMemoryError;
    break;
  case SWIG_IOError:
    exception_code = SWIG_JavaIOException;
    break;
  case SWIG_SystemError:
  case SWIG_RuntimeError:
    exception_code = SWIG_JavaRuntimeException;
    break;
  case SWIG_OverflowError:
  case SWIG_IndexError:
    exception_code = SWIG_JavaIndexOutOfBoundsException;
    break;
  case SWIG_DivisionByZero:
    exception_code = SWIG_JavaArithmeticException;
    break;
  case SWIG_SyntaxError:
  case SWIG_ValueError:
  case SWIG_TypeError:
    exception_code = SWIG_JavaIllegalArgumentException;
    break;
  case SWIG_UnknownError:
  default:
    exception_code = SWIG_JavaUnknownError;
    break;
  }
  SWIG_JavaThrowException(jenv, exception_code, msg);
}


#include <stdexcept>


#include "exodus/mv.h"
//#include "exodus/mvenvironment.h"
//#include "exodus/exodusfuncs.h"


#ifdef __cplusplus
extern "C" {
#endif

SWIGEXPORT jint JNICALL Java_exodus_jexodusJNI_MV_1H_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_mvtypemask_1get(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  result = (unsigned int)(unsigned int)mvtypemask;
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_exodus_jexodusJNI_LASTDELIMITERCHARNOPLUS1_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0x0300);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_exodus_jexodusJNI_delete_1var(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  exodus::var *arg1 = (exodus::var *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(exodus::var **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jboolean JNICALL Java_exodus_jexodusJNI_var_1toBool(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = (bool)((exodus::var const *)arg1)->toBool();
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_exodus_jexodusJNI_var_1toInt(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = (int)((exodus::var const *)arg1)->toInt();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_exodus_jexodusJNI_var_1toDouble(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = (double)((exodus::var const *)arg1)->toDouble();
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_exodus_jexodusJNI_var_1toWString(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  std::wstring result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = ((exodus::var const *)arg1)->toWString();
  jsize result_len = (&result)->length();
  jchar *conv_buf = new jchar[result_len];
  for (jsize i = 0; i < result_len; ++i) {
    conv_buf[i] = (jchar)result[i];
  }
  jresult = jenv->NewString(conv_buf, result_len);
  delete [] conv_buf; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_exodus_jexodusJNI_var_1toString(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = ((exodus::var const *)arg1)->toString();
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_exodus_jexodusJNI_var_1toString2(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = ((exodus::var const *)arg1)->toString2();
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_new_1var_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  exodus::var *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (exodus::var *)new exodus::var();
  *(exodus::var **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_new_1var_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = 0 ;
  exodus::var *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = (exodus::var *)new exodus::var((exodus::var const &)*arg1);
  *(exodus::var **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_new_1var_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  wchar_t *arg1 = (wchar_t *) 0 ;
  exodus::var *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(wchar_t **)&jarg1; 
  result = (exodus::var *)new exodus::var((wchar_t const *)arg1);
  *(exodus::var **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_new_1var_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2) {
  jlong jresult = 0 ;
  char *arg1 = (char *) 0 ;
  size_t arg2 ;
  exodus::var *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  arg2 = (size_t)jarg2; 
  result = (exodus::var *)new exodus::var((char const *)arg1,arg2);
  *(exodus::var **)&jresult = result; 
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_new_1var_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::wstring *arg1 = 0 ;
  exodus::var *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null std::wstring");
    return 0;
  }
  const jchar *arg1_pstr = jenv->GetStringChars(jarg1, 0);
  if (!arg1_pstr) return 0;
  jsize arg1_len = jenv->GetStringLength(jarg1);
  std::wstring arg1_str;
  if (arg1_len) {
    arg1_str.reserve(arg1_len);
    for (jsize i = 0; i < arg1_len; ++i) {
      arg1_str.push_back((wchar_t)arg1_pstr[i]);
    }
  }
  arg1 = &arg1_str;
  jenv->ReleaseStringChars(jarg1, arg1_pstr);
  
  result = (exodus::var *)new exodus::var((std::wstring const &)*arg1);
  *(exodus::var **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_new_1var_1_1SWIG_15(JNIEnv *jenv, jclass jcls, jboolean jarg1) {
  jlong jresult = 0 ;
  bool arg1 ;
  exodus::var *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = jarg1 ? true : false; 
  result = (exodus::var *)new exodus::var(arg1);
  *(exodus::var **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_new_1var_1_1SWIG_16(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jlong jresult = 0 ;
  int arg1 ;
  exodus::var *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  result = (exodus::var *)new exodus::var(arg1);
  *(exodus::var **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_new_1var_1_1SWIG_17(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  long long arg1 ;
  exodus::var *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (long long)jarg1; 
  result = (exodus::var *)new exodus::var(arg1);
  *(exodus::var **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_new_1var_1_1SWIG_18(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jlong jresult = 0 ;
  double arg1 ;
  exodus::var *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (exodus::var *)new exodus::var(arg1);
  *(exodus::var **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1date(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = ((exodus::var const *)arg1)->date();
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1time(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = ((exodus::var const *)arg1)->time();
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1timedate(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = ((exodus::var const *)arg1)->timedate();
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_exodus_jexodusJNI_var_1ossleep(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  exodus::var *arg1 = (exodus::var *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = (int)jarg2; 
  ((exodus::var const *)arg1)->ossleep(arg2);
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1ostime(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = ((exodus::var const *)arg1)->ostime();
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_exodus_jexodusJNI_var_1osopen_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = (bool)((exodus::var const *)arg1)->osopen();
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_exodus_jexodusJNI_var_1osopen_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  jboolean jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  arg3 = *(exodus::var **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = (bool)((exodus::var const *)arg1)->osopen((exodus::var const &)*arg2,(exodus::var const &)*arg3);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1osbread(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  int arg4 ;
  exodus::var *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  arg3 = *(exodus::var **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var & reference is null");
    return 0;
  } 
  arg4 = (int)jarg4; 
  result = (exodus::var *) &(arg1)->osbread((exodus::var const &)*arg2,*arg3,arg4);
  *(exodus::var **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_exodus_jexodusJNI_var_1osbwrite(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  jboolean jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  arg3 = *(exodus::var **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var & reference is null");
    return 0;
  } 
  result = (bool)((exodus::var const *)arg1)->osbwrite((exodus::var const &)*arg2,*arg3);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_exodus_jexodusJNI_var_1osclose(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  exodus::var *arg1 = (exodus::var *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  ((exodus::var const *)arg1)->osclose();
}


SWIGEXPORT jboolean JNICALL Java_exodus_jexodusJNI_var_1osread_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  jboolean jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  arg3 = *(exodus::var **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = (bool)(arg1)->osread((exodus::var const &)*arg2,(exodus::var const &)*arg3);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_exodus_jexodusJNI_var_1oswrite(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  jboolean jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  arg3 = *(exodus::var **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = (bool)((exodus::var const *)arg1)->oswrite((exodus::var const &)*arg2,(exodus::var const &)*arg3);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_exodus_jexodusJNI_var_1osdelete_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = (bool)((exodus::var const *)arg1)->osdelete();
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_exodus_jexodusJNI_var_1osdelete_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = (bool)((exodus::var const *)arg1)->osdelete((exodus::var const &)*arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_exodus_jexodusJNI_var_1osrename(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = (bool)((exodus::var const *)arg1)->osrename((exodus::var const &)*arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_exodus_jexodusJNI_var_1oscopy(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = (bool)((exodus::var const *)arg1)->oscopy((exodus::var const &)*arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1oslist_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  int arg4 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  arg3 = *(exodus::var **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  arg4 = (int)jarg4; 
  result = ((exodus::var const *)arg1)->oslist((exodus::var const &)*arg2,(exodus::var const &)*arg3,arg4);
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1oslist_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  arg3 = *(exodus::var **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = ((exodus::var const *)arg1)->oslist((exodus::var const &)*arg2,(exodus::var const &)*arg3);
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1oslistf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  arg3 = *(exodus::var **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = ((exodus::var const *)arg1)->oslistf((exodus::var const &)*arg2,(exodus::var const &)*arg3);
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1oslistd(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  arg3 = *(exodus::var **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = ((exodus::var const *)arg1)->oslistd((exodus::var const &)*arg2,(exodus::var const &)*arg3);
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1osfile(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = ((exodus::var const *)arg1)->osfile();
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1osdir(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = ((exodus::var const *)arg1)->osdir();
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_exodus_jexodusJNI_var_1osmkdir(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = (bool)((exodus::var const *)arg1)->osmkdir();
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_exodus_jexodusJNI_var_1osrmdir_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  jboolean jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  bool arg2 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  result = (bool)((exodus::var const *)arg1)->osrmdir(arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_exodus_jexodusJNI_var_1osrmdir_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = (bool)((exodus::var const *)arg1)->osrmdir();
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1oscwd_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = ((exodus::var const *)arg1)->oscwd();
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1oscwd_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = ((exodus::var const *)arg1)->oscwd((exodus::var const &)*arg2);
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_exodus_jexodusJNI_var_1osflush(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  exodus::var *arg1 = (exodus::var *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  ((exodus::var const *)arg1)->osflush();
}


SWIGEXPORT jboolean JNICALL Java_exodus_jexodusJNI_var_1osread_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2, jlong jarg3, jobject jarg3_) {
  jboolean jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  char *arg2 = (char *) 0 ;
  exodus::var *arg3 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  arg3 = *(exodus::var **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = (bool)(arg1)->osread((char const *)arg2,(exodus::var const &)*arg3);
  jresult = (jboolean)result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1suspend(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = ((exodus::var const *)arg1)->suspend();
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1osshell(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = ((exodus::var const *)arg1)->osshell();
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1osshellread(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = ((exodus::var const *)arg1)->osshellread();
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1osshellwrite(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = ((exodus::var const *)arg1)->osshellwrite((exodus::var const &)*arg2);
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_exodus_jexodusJNI_var_1osgetenv(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = (bool)(arg1)->osgetenv((exodus::var const &)*arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_exodus_jexodusJNI_var_1ossetenv(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = (bool)((exodus::var const *)arg1)->ossetenv((exodus::var const &)*arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_exodus_jexodusJNI_var_1stop(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return ;
  } 
  ((exodus::var const *)arg1)->stop((exodus::var const &)*arg2);
}


SWIGEXPORT void JNICALL Java_exodus_jexodusJNI_var_1abort(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return ;
  } 
  ((exodus::var const *)arg1)->abort((exodus::var const &)*arg2);
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1perform(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = ((exodus::var const *)arg1)->perform();
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1execute(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = ((exodus::var const *)arg1)->execute();
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1chain(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = ((exodus::var const *)arg1)->chain();
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1logoff(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = ((exodus::var const *)arg1)->logoff();
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1debug_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = ((exodus::var const *)arg1)->debug();
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1debug_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = ((exodus::var const *)arg1)->debug((exodus::var const &)*arg2);
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_exodus_jexodusJNI_var_1breakon(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  exodus::var *arg1 = (exodus::var *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  ((exodus::var const *)arg1)->breakon();
}


SWIGEXPORT void JNICALL Java_exodus_jexodusJNI_var_1breakoff(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  exodus::var *arg1 = (exodus::var *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  ((exodus::var const *)arg1)->breakoff();
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1output_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = (exodus::var *) &((exodus::var const *)arg1)->output();
  *(exodus::var **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1outputl_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = (exodus::var *) &((exodus::var const *)arg1)->outputl();
  *(exodus::var **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1outputt_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = (exodus::var *) &((exodus::var const *)arg1)->outputt();
  *(exodus::var **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1output_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = (exodus::var *) &((exodus::var const *)arg1)->output((exodus::var const &)*arg2);
  *(exodus::var **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1outputl_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = (exodus::var *) &((exodus::var const *)arg1)->outputl((exodus::var const &)*arg2);
  *(exodus::var **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1outputt_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = (exodus::var *) &((exodus::var const *)arg1)->outputt((exodus::var const &)*arg2);
  *(exodus::var **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1logput_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = (exodus::var *) &((exodus::var const *)arg1)->logput();
  *(exodus::var **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1logputl_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = (exodus::var *) &((exodus::var const *)arg1)->logputl();
  *(exodus::var **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1logput_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = (exodus::var *) &((exodus::var const *)arg1)->logput((exodus::var const &)*arg2);
  *(exodus::var **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1logputl_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = (exodus::var *) &((exodus::var const *)arg1)->logputl((exodus::var const &)*arg2);
  *(exodus::var **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1errput_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = (exodus::var *) &((exodus::var const *)arg1)->errput();
  *(exodus::var **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1errputl_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = (exodus::var *) &((exodus::var const *)arg1)->errputl();
  *(exodus::var **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1errput_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = (exodus::var *) &((exodus::var const *)arg1)->errput((exodus::var const &)*arg2);
  *(exodus::var **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1errputl_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = (exodus::var *) &((exodus::var const *)arg1)->errputl((exodus::var const &)*arg2);
  *(exodus::var **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1put(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  std::ostream *arg2 = 0 ;
  exodus::var *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(std::ostream **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::ostream & reference is null");
    return 0;
  } 
  result = (exodus::var *) &((exodus::var const *)arg1)->put(*arg2);
  *(exodus::var **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1at_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  int arg2 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = (int)jarg2; 
  result = ((exodus::var const *)arg1)->at(arg2);
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1at_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  int arg2 ;
  int arg3 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  result = ((exodus::var const *)arg1)->at(arg2,arg3);
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1getcursor(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = ((exodus::var const *)arg1)->getcursor();
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_exodus_jexodusJNI_var_1setcursor(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  exodus::var *arg1 = (exodus::var *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  ((exodus::var const *)arg1)->setcursor();
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1getprompt(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = ((exodus::var const *)arg1)->getprompt();
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_exodus_jexodusJNI_var_1setprompt(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  exodus::var *arg1 = (exodus::var *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  ((exodus::var const *)arg1)->setprompt();
}


SWIGEXPORT jboolean JNICALL Java_exodus_jexodusJNI_var_1input_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = (bool)(arg1)->input();
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_exodus_jexodusJNI_var_1input_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jboolean jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  int arg3 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  arg3 = (int)jarg3; 
  result = (bool)(arg1)->input((exodus::var const &)*arg2,arg3);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_exodus_jexodusJNI_var_1input_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = (bool)(arg1)->input((exodus::var const &)*arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_exodus_jexodusJNI_var_1eof(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = (bool)((exodus::var const *)arg1)->eof();
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_exodus_jexodusJNI_var_1assigned(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = (bool)((exodus::var const *)arg1)->assigned();
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_exodus_jexodusJNI_var_1unassigned(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = (bool)((exodus::var const *)arg1)->unassigned();
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1transfer(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var & reference is null");
    return 0;
  } 
  result = (exodus::var *) &(arg1)->transfer(*arg2);
  *(exodus::var **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1exchange(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var & reference is null");
    return 0;
  } 
  result = (exodus::var *) &(arg1)->exchange(*arg2);
  *(exodus::var **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1clone(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var & reference is null");
    return 0;
  } 
  result = (exodus::var *) &(arg1)->clone(*arg2);
  *(exodus::var **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1abs(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = ((exodus::var const *)arg1)->abs();
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1mod_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = ((exodus::var const *)arg1)->mod((exodus::var const &)*arg2);
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1mod_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  int arg2 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = (int)jarg2; 
  result = ((exodus::var const *)arg1)->mod(arg2);
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1pwr(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = ((exodus::var const *)arg1)->pwr((exodus::var const &)*arg2);
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1rnd(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = ((exodus::var const *)arg1)->rnd();
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_exodus_jexodusJNI_var_1initrnd(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  exodus::var *arg1 = (exodus::var *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  ((exodus::var const *)arg1)->initrnd();
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1exp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = ((exodus::var const *)arg1)->exp();
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1sqrt(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = ((exodus::var const *)arg1)->sqrt();
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1sin(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = ((exodus::var const *)arg1)->sin();
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1cos(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = ((exodus::var const *)arg1)->cos();
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1tan(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = ((exodus::var const *)arg1)->tan();
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1atan(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = ((exodus::var const *)arg1)->atan();
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1loge(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = ((exodus::var const *)arg1)->loge();
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1integer(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = ((exodus::var const *)arg1)->integer();
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1floor(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = ((exodus::var const *)arg1)->floor();
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1round_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  int arg2 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = (int)jarg2; 
  result = ((exodus::var const *)arg1)->round(arg2);
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1round_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = ((exodus::var const *)arg1)->round();
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_exodus_jexodusJNI_var_1setxlocale(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = (bool)((exodus::var const *)arg1)->setxlocale();
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1getxlocale(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = (exodus::var *) &(arg1)->getxlocale();
  *(exodus::var **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1chr(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  int arg2 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = (int)jarg2; 
  result = ((exodus::var const *)arg1)->chr(arg2);
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1str(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  int arg2 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = (int)jarg2; 
  result = ((exodus::var const *)arg1)->str(arg2);
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1space(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = ((exodus::var const *)arg1)->space();
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_exodus_jexodusJNI_var_1match(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  jboolean jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  arg3 = *(exodus::var **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = (bool)((exodus::var const *)arg1)->match((exodus::var const &)*arg2,(exodus::var const &)*arg3);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1seq(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = ((exodus::var const *)arg1)->seq();
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1dcount(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = ((exodus::var const *)arg1)->dcount((exodus::var const &)*arg2);
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1count_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = ((exodus::var const *)arg1)->count((exodus::var const &)*arg2);
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1count_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  wchar_t arg2 ;
  wchar_t const *argp2 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  argp2 = *(wchar_t **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null wchar_t const");
    return 0;
  }
  arg2 = *argp2; 
  result = ((exodus::var const *)arg1)->count(arg2);
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1length(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = ((exodus::var const *)arg1)->length();
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1len(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = ((exodus::var const *)arg1)->len();
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1data(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  wchar_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = (wchar_t *)((exodus::var const *)arg1)->data();
  *(wchar_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_exodus_jexodusJNI_var_1isnum(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = (bool)((exodus::var const *)arg1)->isnum();
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_exodus_jexodusJNI_var_1isnum_1old(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = (bool)((exodus::var const *)arg1)->isnum_old();
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1converter(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  exodus::var *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  arg3 = *(exodus::var **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = (exodus::var *) &(arg1)->converter((exodus::var const &)*arg2,(exodus::var const &)*arg3);
  *(exodus::var **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1swapper(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  exodus::var *arg4 = 0 ;
  exodus::var *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  arg3 = *(exodus::var **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  arg4 = *(exodus::var **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = (exodus::var *) &(arg1)->swapper((exodus::var const &)*arg2,(exodus::var const &)*arg3,(exodus::var const &)*arg4);
  *(exodus::var **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1splicer_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3, jlong jarg4, jobject jarg4_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  int arg2 ;
  int arg3 ;
  exodus::var *arg4 = 0 ;
  exodus::var *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg4_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = *(exodus::var **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = (exodus::var *) &(arg1)->splicer(arg2,arg3,(exodus::var const &)*arg4);
  *(exodus::var **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1splicer_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  int arg2 ;
  exodus::var *arg3 = 0 ;
  exodus::var *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = *(exodus::var **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = (exodus::var *) &(arg1)->splicer(arg2,(exodus::var const &)*arg3);
  *(exodus::var **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1quoter(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = (exodus::var *) &(arg1)->quoter();
  *(exodus::var **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1squoter(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = (exodus::var *) &(arg1)->squoter();
  *(exodus::var **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1unquoter(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = (exodus::var *) &(arg1)->unquoter();
  *(exodus::var **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1ucaser(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = (exodus::var *) &(arg1)->ucaser();
  *(exodus::var **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1lcaser(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = (exodus::var *) &(arg1)->lcaser();
  *(exodus::var **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1trimmer_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  exodus::var *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(wchar_t **)&jarg2; 
  result = (exodus::var *) &(arg1)->trimmer((wchar_t const *)arg2);
  *(exodus::var **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1trimmerf_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  exodus::var *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(wchar_t **)&jarg2; 
  result = (exodus::var *) &(arg1)->trimmerf((wchar_t const *)arg2);
  *(exodus::var **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1trimmerb_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  exodus::var *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(wchar_t **)&jarg2; 
  result = (exodus::var *) &(arg1)->trimmerb((wchar_t const *)arg2);
  *(exodus::var **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1trimmer_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var arg2 ;
  exodus::var const *argp2 ;
  exodus::var *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(exodus::var **)&jarg1; 
  argp2 = *(exodus::var **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null exodus::var const");
    return 0;
  }
  arg2 = *argp2; 
  result = (exodus::var *) &(arg1)->trimmer(arg2);
  *(exodus::var **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1trimmerf_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var arg2 ;
  exodus::var const *argp2 ;
  exodus::var *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(exodus::var **)&jarg1; 
  argp2 = *(exodus::var **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null exodus::var const");
    return 0;
  }
  arg2 = *argp2; 
  result = (exodus::var *) &(arg1)->trimmerf(arg2);
  *(exodus::var **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1trimmerb_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var arg2 ;
  exodus::var const *argp2 ;
  exodus::var *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(exodus::var **)&jarg1; 
  argp2 = *(exodus::var **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null exodus::var const");
    return 0;
  }
  arg2 = *argp2; 
  result = (exodus::var *) &(arg1)->trimmerb(arg2);
  *(exodus::var **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1fieldstorer(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jlong jarg5, jobject jarg5_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  int arg3 ;
  int arg4 ;
  exodus::var *arg5 = 0 ;
  exodus::var *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg5_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = *(exodus::var **)&jarg5;
  if (!arg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = (exodus::var *) &(arg1)->fieldstorer((exodus::var const &)*arg2,arg3,arg4,(exodus::var const &)*arg5);
  *(exodus::var **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1substrer_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  int arg2 ;
  exodus::var *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (exodus::var *) &(arg1)->substrer(arg2);
  *(exodus::var **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1substrer_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  int arg2 ;
  int arg3 ;
  exodus::var *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  result = (exodus::var *) &(arg1)->substrer(arg2,arg3);
  *(exodus::var **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1convert(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  arg3 = *(exodus::var **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = ((exodus::var const *)arg1)->convert((exodus::var const &)*arg2,(exodus::var const &)*arg3);
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1swap(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  exodus::var *arg4 = 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  arg3 = *(exodus::var **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  arg4 = *(exodus::var **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = ((exodus::var const *)arg1)->swap((exodus::var const &)*arg2,(exodus::var const &)*arg3,(exodus::var const &)*arg4);
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1splice_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3, jlong jarg4, jobject jarg4_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  int arg2 ;
  int arg3 ;
  exodus::var *arg4 = 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg4_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = *(exodus::var **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = ((exodus::var const *)arg1)->splice(arg2,arg3,(exodus::var const &)*arg4);
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1splice_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  int arg2 ;
  exodus::var *arg3 = 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = *(exodus::var **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = ((exodus::var const *)arg1)->splice(arg2,(exodus::var const &)*arg3);
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1quote(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = ((exodus::var const *)arg1)->quote();
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1squote(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = ((exodus::var const *)arg1)->squote();
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1unquote(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = ((exodus::var const *)arg1)->unquote();
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1ucase(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = ((exodus::var const *)arg1)->ucase();
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1lcase(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = ((exodus::var const *)arg1)->lcase();
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1trim_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(wchar_t **)&jarg2; 
  result = ((exodus::var const *)arg1)->trim((wchar_t const *)arg2);
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1trimf_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(wchar_t **)&jarg2; 
  result = ((exodus::var const *)arg1)->trimf((wchar_t const *)arg2);
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1trimb_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(wchar_t **)&jarg2; 
  result = ((exodus::var const *)arg1)->trimb((wchar_t const *)arg2);
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1trim_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var arg2 ;
  exodus::var const *argp2 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(exodus::var **)&jarg1; 
  argp2 = *(exodus::var **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null exodus::var const");
    return 0;
  }
  arg2 = *argp2; 
  result = ((exodus::var const *)arg1)->trim(arg2);
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1trimf_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var arg2 ;
  exodus::var const *argp2 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(exodus::var **)&jarg1; 
  argp2 = *(exodus::var **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null exodus::var const");
    return 0;
  }
  arg2 = *argp2; 
  result = ((exodus::var const *)arg1)->trimf(arg2);
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1trimb_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var arg2 ;
  exodus::var const *argp2 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(exodus::var **)&jarg1; 
  argp2 = *(exodus::var **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null exodus::var const");
    return 0;
  }
  arg2 = *argp2; 
  result = ((exodus::var const *)arg1)->trimb(arg2);
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1fieldstore(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jlong jarg5, jobject jarg5_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  int arg3 ;
  int arg4 ;
  exodus::var *arg5 = 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg5_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = *(exodus::var **)&jarg5;
  if (!arg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = ((exodus::var const *)arg1)->fieldstore((exodus::var const &)*arg2,arg3,arg4,(exodus::var const &)*arg5);
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1substr_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  int arg2 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = (int)jarg2; 
  result = ((exodus::var const *)arg1)->substr(arg2);
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1substr_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  int arg2 ;
  int arg3 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  result = ((exodus::var const *)arg1)->substr(arg2,arg3);
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1index_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  int arg3 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  arg3 = (int)jarg3; 
  result = ((exodus::var const *)arg1)->index((exodus::var const &)*arg2,arg3);
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1index_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = ((exodus::var const *)arg1)->index((exodus::var const &)*arg2);
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1index2_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  int arg3 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  arg3 = (int)jarg3; 
  result = ((exodus::var const *)arg1)->index2((exodus::var const &)*arg2,arg3);
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1index2_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = ((exodus::var const *)arg1)->index2((exodus::var const &)*arg2);
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1field_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  int arg3 ;
  int arg4 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  result = ((exodus::var const *)arg1)->field((exodus::var const &)*arg2,arg3,arg4);
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1field_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  int arg3 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  arg3 = (int)jarg3; 
  result = ((exodus::var const *)arg1)->field((exodus::var const &)*arg2,arg3);
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1field2_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  int arg3 ;
  int arg4 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  result = ((exodus::var const *)arg1)->field2((exodus::var const &)*arg2,arg3,arg4);
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1field2_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  int arg3 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  arg3 = (int)jarg3; 
  result = ((exodus::var const *)arg1)->field2((exodus::var const &)*arg2,arg3);
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1oconv_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(wchar_t **)&jarg2; 
  result = ((exodus::var const *)arg1)->oconv((wchar_t const *)arg2);
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1oconv_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = ((exodus::var const *)arg1)->oconv((exodus::var const &)*arg2);
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1iconv_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(wchar_t **)&jarg2; 
  result = ((exodus::var const *)arg1)->iconv((wchar_t const *)arg2);
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1iconv_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = ((exodus::var const *)arg1)->iconv((exodus::var const &)*arg2);
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1lower(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = ((exodus::var const *)arg1)->lower();
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1raise(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = ((exodus::var const *)arg1)->raise();
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1crop(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = ((exodus::var const *)arg1)->crop();
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1lowerer(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = (exodus::var *) &(arg1)->lowerer();
  *(exodus::var **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1raiser(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = (exodus::var *) &(arg1)->raiser();
  *(exodus::var **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1cropper(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = (exodus::var *) &(arg1)->cropper();
  *(exodus::var **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1remove(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var & reference is null");
    return 0;
  } 
  arg3 = *(exodus::var **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var & reference is null");
    return 0;
  } 
  result = ((exodus::var const *)arg1)->remove(*arg2,*arg3);
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1replace_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3, jint jarg4, jlong jarg5, jobject jarg5_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  exodus::var *arg5 = 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg5_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = *(exodus::var **)&jarg5;
  if (!arg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = ((exodus::var const *)arg1)->replace(arg2,arg3,arg4,(exodus::var const &)*arg5);
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1replace_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3, jlong jarg4, jobject jarg4_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  int arg2 ;
  int arg3 ;
  exodus::var *arg4 = 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg4_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = *(exodus::var **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = ((exodus::var const *)arg1)->replace(arg2,arg3,(exodus::var const &)*arg4);
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1replace_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  int arg2 ;
  exodus::var *arg3 = 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = *(exodus::var **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = ((exodus::var const *)arg1)->replace(arg2,(exodus::var const &)*arg3);
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1insert(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3, jint jarg4, jlong jarg5, jobject jarg5_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  exodus::var *arg5 = 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg5_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = *(exodus::var **)&jarg5;
  if (!arg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = ((exodus::var const *)arg1)->insert(arg2,arg3,arg4,(exodus::var const &)*arg5);
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1erase_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3, jint jarg4) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  result = ((exodus::var const *)arg1)->erase(arg2,arg3,arg4);
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1erase_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  int arg2 ;
  int arg3 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  result = ((exodus::var const *)arg1)->erase(arg2,arg3);
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1erase_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  int arg2 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = (int)jarg2; 
  result = ((exodus::var const *)arg1)->erase(arg2);
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1extract_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3, jint jarg4) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  result = ((exodus::var const *)arg1)->extract(arg2,arg3,arg4);
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1extract_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  int arg2 ;
  int arg3 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  result = ((exodus::var const *)arg1)->extract(arg2,arg3);
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1extract_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  int arg2 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = (int)jarg2; 
  result = ((exodus::var const *)arg1)->extract(arg2);
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1replacer_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3, jint jarg4, jlong jarg5, jobject jarg5_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  exodus::var *arg5 = 0 ;
  exodus::var *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg5_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = *(exodus::var **)&jarg5;
  if (!arg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = (exodus::var *) &(arg1)->replacer(arg2,arg3,arg4,(exodus::var const &)*arg5);
  *(exodus::var **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1replacer_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3, jlong jarg4, jobject jarg4_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  int arg2 ;
  int arg3 ;
  exodus::var *arg4 = 0 ;
  exodus::var *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg4_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = *(exodus::var **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = (exodus::var *) &(arg1)->replacer(arg2,arg3,(exodus::var const &)*arg4);
  *(exodus::var **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1replacer_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  int arg2 ;
  exodus::var *arg3 = 0 ;
  exodus::var *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = *(exodus::var **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = (exodus::var *) &(arg1)->replacer(arg2,(exodus::var const &)*arg3);
  *(exodus::var **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1inserter_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3, jint jarg4, jlong jarg5, jobject jarg5_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  exodus::var *arg5 = 0 ;
  exodus::var *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg5_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = *(exodus::var **)&jarg5;
  if (!arg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = (exodus::var *) &(arg1)->inserter(arg2,arg3,arg4,(exodus::var const &)*arg5);
  *(exodus::var **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1inserter_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3, jlong jarg4, jobject jarg4_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  int arg2 ;
  int arg3 ;
  exodus::var *arg4 = 0 ;
  exodus::var *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg4_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = *(exodus::var **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = (exodus::var *) &(arg1)->inserter(arg2,arg3,(exodus::var const &)*arg4);
  *(exodus::var **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1inserter_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  int arg2 ;
  exodus::var *arg3 = 0 ;
  exodus::var *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = *(exodus::var **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = (exodus::var *) &(arg1)->inserter(arg2,(exodus::var const &)*arg3);
  *(exodus::var **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1eraser_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3, jint jarg4) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  exodus::var *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  result = (exodus::var *) &(arg1)->eraser(arg2,arg3,arg4);
  *(exodus::var **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1eraser_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  int arg2 ;
  int arg3 ;
  exodus::var *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  result = (exodus::var *) &(arg1)->eraser(arg2,arg3);
  *(exodus::var **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1eraser_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  int arg2 ;
  exodus::var *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (exodus::var *) &(arg1)->eraser(arg2);
  *(exodus::var **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_exodus_jexodusJNI_var_1locate_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  jboolean jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  int arg4 ;
  int arg5 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  arg3 = *(exodus::var **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var & reference is null");
    return 0;
  } 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  result = (bool)((exodus::var const *)arg1)->locate((exodus::var const &)*arg2,*arg3,arg4,arg5);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_exodus_jexodusJNI_var_1locate_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  jboolean jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  int arg4 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  arg3 = *(exodus::var **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var & reference is null");
    return 0;
  } 
  arg4 = (int)jarg4; 
  result = (bool)((exodus::var const *)arg1)->locate((exodus::var const &)*arg2,*arg3,arg4);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_exodus_jexodusJNI_var_1locate_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  jboolean jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  arg3 = *(exodus::var **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var & reference is null");
    return 0;
  } 
  result = (bool)((exodus::var const *)arg1)->locate((exodus::var const &)*arg2,*arg3);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_exodus_jexodusJNI_var_1locateby_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jstring jarg3, jlong jarg4, jobject jarg4_, jint jarg5, jint jarg6) {
  jboolean jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  exodus::var *arg4 = 0 ;
  int arg5 ;
  int arg6 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  arg3 = 0;
  if (jarg3) {
    arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
    if (!arg3) return 0;
  }
  arg4 = *(exodus::var **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var & reference is null");
    return 0;
  } 
  arg5 = (int)jarg5; 
  arg6 = (int)jarg6; 
  result = (bool)((exodus::var const *)arg1)->locateby((exodus::var const &)*arg2,(char const *)arg3,*arg4,arg5,arg6);
  jresult = (jboolean)result; 
  if (arg3) jenv->ReleaseStringUTFChars(jarg3, (const char *)arg3);
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_exodus_jexodusJNI_var_1locateby_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jstring jarg3, jlong jarg4, jobject jarg4_, jint jarg5) {
  jboolean jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  exodus::var *arg4 = 0 ;
  int arg5 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  arg3 = 0;
  if (jarg3) {
    arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
    if (!arg3) return 0;
  }
  arg4 = *(exodus::var **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var & reference is null");
    return 0;
  } 
  arg5 = (int)jarg5; 
  result = (bool)((exodus::var const *)arg1)->locateby((exodus::var const &)*arg2,(char const *)arg3,*arg4,arg5);
  jresult = (jboolean)result; 
  if (arg3) jenv->ReleaseStringUTFChars(jarg3, (const char *)arg3);
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_exodus_jexodusJNI_var_1locateby_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jstring jarg3, jlong jarg4, jobject jarg4_) {
  jboolean jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  exodus::var *arg4 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  arg3 = 0;
  if (jarg3) {
    arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
    if (!arg3) return 0;
  }
  arg4 = *(exodus::var **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var & reference is null");
    return 0;
  } 
  result = (bool)((exodus::var const *)arg1)->locateby((exodus::var const &)*arg2,(char const *)arg3,*arg4);
  jresult = (jboolean)result; 
  if (arg3) jenv->ReleaseStringUTFChars(jarg3, (const char *)arg3);
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_exodus_jexodusJNI_var_1locateby_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jint jarg5, jint jarg6) {
  jboolean jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  exodus::var *arg4 = 0 ;
  int arg5 ;
  int arg6 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  arg3 = *(exodus::var **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  arg4 = *(exodus::var **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var & reference is null");
    return 0;
  } 
  arg5 = (int)jarg5; 
  arg6 = (int)jarg6; 
  result = (bool)((exodus::var const *)arg1)->locateby((exodus::var const &)*arg2,(exodus::var const &)*arg3,*arg4,arg5,arg6);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_exodus_jexodusJNI_var_1locateby_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jint jarg5) {
  jboolean jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  exodus::var *arg4 = 0 ;
  int arg5 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  arg3 = *(exodus::var **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  arg4 = *(exodus::var **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var & reference is null");
    return 0;
  } 
  arg5 = (int)jarg5; 
  result = (bool)((exodus::var const *)arg1)->locateby((exodus::var const &)*arg2,(exodus::var const &)*arg3,*arg4,arg5);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_exodus_jexodusJNI_var_1locateby_1_1SWIG_15(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
  jboolean jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  exodus::var *arg4 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  arg3 = *(exodus::var **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  arg4 = *(exodus::var **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var & reference is null");
    return 0;
  } 
  result = (bool)((exodus::var const *)arg1)->locateby((exodus::var const &)*arg2,(exodus::var const &)*arg3,*arg4);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_exodus_jexodusJNI_var_1locateusing_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jint jarg5, jint jarg6, jint jarg7) {
  jboolean jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  exodus::var *arg4 = 0 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  arg3 = *(exodus::var **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  arg4 = *(exodus::var **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var & reference is null");
    return 0;
  } 
  arg5 = (int)jarg5; 
  arg6 = (int)jarg6; 
  arg7 = (int)jarg7; 
  result = (bool)((exodus::var const *)arg1)->locateusing((exodus::var const &)*arg2,(exodus::var const &)*arg3,*arg4,arg5,arg6,arg7);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_exodus_jexodusJNI_var_1locateusing_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jint jarg5, jint jarg6) {
  jboolean jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  exodus::var *arg4 = 0 ;
  int arg5 ;
  int arg6 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  arg3 = *(exodus::var **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  arg4 = *(exodus::var **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var & reference is null");
    return 0;
  } 
  arg5 = (int)jarg5; 
  arg6 = (int)jarg6; 
  result = (bool)((exodus::var const *)arg1)->locateusing((exodus::var const &)*arg2,(exodus::var const &)*arg3,*arg4,arg5,arg6);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_exodus_jexodusJNI_var_1locateusing_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jint jarg5) {
  jboolean jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  exodus::var *arg4 = 0 ;
  int arg5 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  arg3 = *(exodus::var **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  arg4 = *(exodus::var **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var & reference is null");
    return 0;
  } 
  arg5 = (int)jarg5; 
  result = (bool)((exodus::var const *)arg1)->locateusing((exodus::var const &)*arg2,(exodus::var const &)*arg3,*arg4,arg5);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_exodus_jexodusJNI_var_1locateusing_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
  jboolean jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  exodus::var *arg4 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  arg3 = *(exodus::var **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  arg4 = *(exodus::var **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var & reference is null");
    return 0;
  } 
  result = (bool)((exodus::var const *)arg1)->locateusing((exodus::var const &)*arg2,(exodus::var const &)*arg3,*arg4);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_exodus_jexodusJNI_var_1locateusing_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  jboolean jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  arg3 = *(exodus::var **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = (bool)((exodus::var const *)arg1)->locateusing((exodus::var const &)*arg2,(exodus::var const &)*arg3);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1sum(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = ((exodus::var const *)arg1)->sum((exodus::var const &)*arg2);
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_exodus_jexodusJNI_var_1connect(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = (bool)(arg1)->connect((exodus::var const &)*arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_exodus_jexodusJNI_var_1disconnect(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = (bool)(arg1)->disconnect();
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_exodus_jexodusJNI_var_1setdefaultconnection(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = (bool)(arg1)->setdefaultconnection();
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_exodus_jexodusJNI_var_1begintrans(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = (bool)((exodus::var const *)arg1)->begintrans();
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_exodus_jexodusJNI_var_1rollbacktrans(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = (bool)((exodus::var const *)arg1)->rollbacktrans();
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_exodus_jexodusJNI_var_1committrans(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = (bool)((exodus::var const *)arg1)->committrans();
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_exodus_jexodusJNI_var_1createdb_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = (bool)((exodus::var const *)arg1)->createdb((exodus::var const &)*arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_exodus_jexodusJNI_var_1deletedb_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = (bool)((exodus::var const *)arg1)->deletedb((exodus::var const &)*arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_exodus_jexodusJNI_var_1createdb_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  jboolean jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  arg3 = *(exodus::var **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var & reference is null");
    return 0;
  } 
  result = (bool)((exodus::var const *)arg1)->createdb((exodus::var const &)*arg2,*arg3);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_exodus_jexodusJNI_var_1deletedb_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  jboolean jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  arg3 = *(exodus::var **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var & reference is null");
    return 0;
  } 
  result = (bool)((exodus::var const *)arg1)->deletedb((exodus::var const &)*arg2,*arg3);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_exodus_jexodusJNI_var_1createfile(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  jboolean jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  arg3 = *(exodus::var **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = (bool)(arg1)->createfile((exodus::var const &)*arg2,(exodus::var const &)*arg3);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_exodus_jexodusJNI_var_1deletefile(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = (bool)((exodus::var const *)arg1)->deletefile();
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_exodus_jexodusJNI_var_1clearfile(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = (bool)((exodus::var const *)arg1)->clearfile();
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1listfiles(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = ((exodus::var const *)arg1)->listfiles();
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_exodus_jexodusJNI_var_1createindex(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  jboolean jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  arg3 = *(exodus::var **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = (bool)((exodus::var const *)arg1)->createindex((exodus::var const &)*arg2,(exodus::var const &)*arg3);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_exodus_jexodusJNI_var_1deleteindex(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = (bool)((exodus::var const *)arg1)->deleteindex((exodus::var const &)*arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1listindexes(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = ((exodus::var const *)arg1)->listindexes((exodus::var const &)*arg2);
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_exodus_jexodusJNI_var_1open(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  jboolean jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  arg3 = *(exodus::var **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = (bool)(arg1)->open((exodus::var const &)*arg2,(exodus::var const &)*arg3);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_exodus_jexodusJNI_var_1close(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  exodus::var *arg1 = (exodus::var *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  (arg1)->close();
}


SWIGEXPORT jboolean JNICALL Java_exodus_jexodusJNI_var_1select(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = (bool)((exodus::var const *)arg1)->select((exodus::var const &)*arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_exodus_jexodusJNI_var_1clearselect(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  exodus::var *arg1 = (exodus::var *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  ((exodus::var const *)arg1)->clearselect();
}


SWIGEXPORT jboolean JNICALL Java_exodus_jexodusJNI_var_1readnext_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var & reference is null");
    return 0;
  } 
  result = (bool)((exodus::var const *)arg1)->readnext(*arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_exodus_jexodusJNI_var_1readnext_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  jboolean jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var & reference is null");
    return 0;
  } 
  arg3 = *(exodus::var **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var & reference is null");
    return 0;
  } 
  result = (bool)((exodus::var const *)arg1)->readnext(*arg2,*arg3);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_exodus_jexodusJNI_var_1selectrecord(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = (bool)((exodus::var const *)arg1)->selectrecord((exodus::var const &)*arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_exodus_jexodusJNI_var_1readnextrecord(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  jboolean jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var & reference is null");
    return 0;
  } 
  arg3 = *(exodus::var **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var & reference is null");
    return 0;
  } 
  result = (bool)((exodus::var const *)arg1)->readnextrecord(*arg2,*arg3);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_exodus_jexodusJNI_var_1lock(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = (bool)((exodus::var const *)arg1)->lock((exodus::var const &)*arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_exodus_jexodusJNI_var_1unlock(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return ;
  } 
  ((exodus::var const *)arg1)->unlock((exodus::var const &)*arg2);
}


SWIGEXPORT void JNICALL Java_exodus_jexodusJNI_var_1unlockall(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  exodus::var *arg1 = (exodus::var *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  ((exodus::var const *)arg1)->unlockall();
}


SWIGEXPORT jboolean JNICALL Java_exodus_jexodusJNI_var_1read(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  jboolean jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  arg3 = *(exodus::var **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = (bool)(arg1)->read((exodus::var const &)*arg2,(exodus::var const &)*arg3);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_exodus_jexodusJNI_var_1readv(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  jboolean jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  int arg4 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  arg3 = *(exodus::var **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  arg4 = (int)jarg4; 
  result = (bool)(arg1)->readv((exodus::var const &)*arg2,(exodus::var const &)*arg3,arg4);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_exodus_jexodusJNI_var_1write(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  jboolean jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  arg3 = *(exodus::var **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = (bool)((exodus::var const *)arg1)->write((exodus::var const &)*arg2,(exodus::var const &)*arg3);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_exodus_jexodusJNI_var_1writev(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  jboolean jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  int arg4 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  arg3 = *(exodus::var **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  arg4 = (int)jarg4; 
  result = (bool)((exodus::var const *)arg1)->writev((exodus::var const &)*arg2,(exodus::var const &)*arg3,arg4);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_exodus_jexodusJNI_var_1deleterecord(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = (bool)((exodus::var const *)arg1)->deleterecord((exodus::var const &)*arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_exodus_jexodusJNI_var_1updaterecord(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  jboolean jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  arg3 = *(exodus::var **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = (bool)((exodus::var const *)arg1)->updaterecord((exodus::var const &)*arg2,(exodus::var const &)*arg3);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_exodus_jexodusJNI_var_1insertrecord(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  jboolean jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  arg3 = *(exodus::var **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = (bool)((exodus::var const *)arg1)->insertrecord((exodus::var const &)*arg2,(exodus::var const &)*arg3);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1xlate_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  wchar_t *arg4 = (wchar_t *) 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  arg3 = *(exodus::var **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  arg4 = *(wchar_t **)&jarg4; 
  result = ((exodus::var const *)arg1)->xlate((exodus::var const &)*arg2,(exodus::var const &)*arg3,(wchar_t const *)arg4);
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1xlate_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  exodus::var *arg4 = 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  arg3 = *(exodus::var **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  arg4 = *(exodus::var **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = ((exodus::var const *)arg1)->xlate((exodus::var const &)*arg2,(exodus::var const &)*arg3,(exodus::var const &)*arg4);
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_exodus_jexodusJNI_var_1sqlexec_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = (bool)((exodus::var const *)arg1)->sqlexec((exodus::var const &)*arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_exodus_jexodusJNI_var_1sqlexec_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  jboolean jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(exodus::var **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  arg3 = *(exodus::var **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var & reference is null");
    return 0;
  } 
  result = (bool)((exodus::var const *)arg1)->sqlexec((exodus::var const &)*arg2,*arg3);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_var_1version(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = (exodus::var *) 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  result = ((exodus::var const *)arg1)->version();
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_exodus_jexodusJNI_MVeq(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  exodus::var *arg1 = 0 ;
  exodus::var *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(exodus::var **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = (bool)exodus::MVeq((exodus::var const &)*arg1,(exodus::var const &)*arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_exodus_jexodusJNI_MVlt_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  exodus::var *arg1 = 0 ;
  exodus::var *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(exodus::var **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = (bool)exodus::MVlt((exodus::var const &)*arg1,(exodus::var const &)*arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_exodus_jexodusJNI_MVlt_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jboolean jresult = 0 ;
  exodus::var *arg1 = 0 ;
  int arg2 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  arg2 = (int)jarg2; 
  result = (bool)exodus::MVlt((exodus::var const &)*arg1,arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_exodus_jexodusJNI_MVlt_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jint jarg1, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  int arg1 ;
  exodus::var *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = (int)jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = (bool)exodus::MVlt(arg1,(exodus::var const &)*arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_MVadd(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(exodus::var **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = exodus::MVadd((exodus::var const &)*arg1,(exodus::var const &)*arg2);
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_MVmul(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(exodus::var **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = exodus::MVmul((exodus::var const &)*arg1,(exodus::var const &)*arg2);
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_MVdiv(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(exodus::var **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = exodus::MVdiv((exodus::var const &)*arg1,(exodus::var const &)*arg2);
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_MVmod(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(exodus::var **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = exodus::MVmod((exodus::var const &)*arg1,(exodus::var const &)*arg2);
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_MVcat(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(exodus::var **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = exodus::MVcat((exodus::var const &)*arg1,(exodus::var const &)*arg2);
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_new_1dim_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jint jarg1, jint jarg2) {
  jlong jresult = 0 ;
  int arg1 ;
  int arg2 ;
  exodus::dim *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  result = (exodus::dim *)new exodus::dim(arg1,arg2);
  *(exodus::dim **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_new_1dim_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jlong jresult = 0 ;
  int arg1 ;
  exodus::dim *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  result = (exodus::dim *)new exodus::dim(arg1);
  *(exodus::dim **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_exodus_jexodusJNI_dim_1redim_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3) {
  jboolean jresult = 0 ;
  exodus::dim *arg1 = (exodus::dim *) 0 ;
  int arg2 ;
  int arg3 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::dim **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  result = (bool)(arg1)->redim(arg2,arg3);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_exodus_jexodusJNI_dim_1redim_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jboolean jresult = 0 ;
  exodus::dim *arg1 = (exodus::dim *) 0 ;
  int arg2 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::dim **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (bool)(arg1)->redim(arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_dim_1unparse(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  exodus::dim *arg1 = (exodus::dim *) 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::dim **)&jarg1; 
  result = ((exodus::dim const *)arg1)->unparse();
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_exodus_jexodusJNI_delete_1dim(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  exodus::dim *arg1 = (exodus::dim *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(exodus::dim **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_new_1dim_1_1SWIG_12(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  exodus::dim *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (exodus::dim *)new exodus::dim();
  *(exodus::dim **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_dim_1parse(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  exodus::dim *arg1 = (exodus::dim *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(exodus::dim **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = (arg1)->parse((exodus::var const &)*arg2);
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_exodus_jexodusJNI_dim_1read(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  jboolean jresult = 0 ;
  exodus::dim *arg1 = (exodus::dim *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(exodus::dim **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  arg3 = *(exodus::var **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = (bool)(arg1)->read((exodus::var const &)*arg2,(exodus::var const &)*arg3);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_exodus_jexodusJNI_dim_1write(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  jboolean jresult = 0 ;
  exodus::dim *arg1 = (exodus::dim *) 0 ;
  exodus::var *arg2 = 0 ;
  exodus::var *arg3 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(exodus::dim **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  arg3 = *(exodus::var **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = (bool)((exodus::dim const *)arg1)->write((exodus::var const &)*arg2,(exodus::var const &)*arg3);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_FM_1get(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  exodus::var *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (exodus::var *)&exodus::FM;
  *(exodus::var **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_VM_1get(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  exodus::var *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (exodus::var *)&exodus::VM;
  *(exodus::var **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_SM_1get(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  exodus::var *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (exodus::var *)&exodus::SM;
  *(exodus::var **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_SVM_1get(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  exodus::var *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (exodus::var *)&exodus::SVM;
  *(exodus::var **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_TM_1get(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  exodus::var *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (exodus::var *)&exodus::TM;
  *(exodus::var **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_STM_1get(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  exodus::var *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (exodus::var *)&exodus::STM;
  *(exodus::var **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_SSTM_1get(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  exodus::var *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (exodus::var *)&exodus::SSTM;
  *(exodus::var **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_IM_1get(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  exodus::var *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (exodus::var *)&exodus::IM;
  *(exodus::var **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_RM_1get(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  exodus::var *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (exodus::var *)&exodus::RM;
  *(exodus::var **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_AM_1get(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  exodus::var *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (exodus::var *)&exodus::AM;
  *(exodus::var **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_DQ_1get(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  exodus::var *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (exodus::var *)&exodus::DQ;
  *(exodus::var **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_SQ_1get(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  exodus::var *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (exodus::var *)&exodus::SQ;
  *(exodus::var **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_SLASH_1get(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  exodus::var *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (exodus::var *)&exodus::SLASH;
  *(exodus::var **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jchar JNICALL Java_exodus_jexodusJNI_SLASH_1_1get(JNIEnv *jenv, jclass jcls) {
  jchar jresult = 0 ;
  char result;
  
  (void)jenv;
  (void)jcls;
  result = (char)(char)exodus::SLASH_;
  jresult = (jchar)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_exodus_jexodusJNI_SLASH_1IS_1BACKSLASH_1get(JNIEnv *jenv, jclass jcls) {
  jboolean jresult = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  result = (bool)(false);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_LOWERCASE_1_1get(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  exodus::var *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (exodus::var *)&exodus::LOWERCASE_;
  *(exodus::var **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_UPPERCASE_1_1get(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  exodus::var *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (exodus::var *)&exodus::UPPERCASE_;
  *(exodus::var **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_PLATFORM_1_1get(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  exodus::var *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (exodus::var *)&exodus::PLATFORM_;
  *(exodus::var **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_exodus_jexodusJNI_DBTRACE_1set(JNIEnv *jenv, jclass jcls, jint jarg1) {
  int arg1 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  exodus::DBTRACE = arg1;
}


SWIGEXPORT jint JNICALL Java_exodus_jexodusJNI_DBTRACE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)exodus::DBTRACE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_exodus_jexodusJNI_EXECPATH2_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  exodus::var *arg1 = (exodus::var *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1; 
  exodus::EXECPATH2 = *arg1;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_EXECPATH2_1get(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  exodus::var *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (exodus::var *)&exodus::EXECPATH2;
  *(exodus::var **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_exodus_jexodusJNI_output(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  exodus::var *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return ;
  } 
  exodus::output((exodus::var const &)*arg1);
}


SWIGEXPORT void JNICALL Java_exodus_jexodusJNI_outputl(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  exodus::var *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return ;
  } 
  exodus::outputl((exodus::var const &)*arg1);
}


SWIGEXPORT void JNICALL Java_exodus_jexodusJNI_outputt(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  exodus::var *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return ;
  } 
  exodus::outputt((exodus::var const &)*arg1);
}


SWIGEXPORT void JNICALL Java_exodus_jexodusJNI_errput(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  exodus::var *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return ;
  } 
  exodus::errput((exodus::var const &)*arg1);
}


SWIGEXPORT void JNICALL Java_exodus_jexodusJNI_errputl(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  exodus::var *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return ;
  } 
  exodus::errputl((exodus::var const &)*arg1);
}


SWIGEXPORT void JNICALL Java_exodus_jexodusJNI_logput(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  exodus::var *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return ;
  } 
  exodus::logput((exodus::var const &)*arg1);
}


SWIGEXPORT void JNICALL Java_exodus_jexodusJNI_logputl(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  exodus::var *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return ;
  } 
  exodus::logputl((exodus::var const &)*arg1);
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_backtrace(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  result = exodus::backtrace();
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_exodus_jexodusJNI_getenvironmentn(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)exodus::getenvironmentn();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_exodus_jexodusJNI_setenvironmentn(JNIEnv *jenv, jclass jcls, jint jarg1) {
  int arg1 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  exodus::setenvironmentn(arg1);
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_getprocessn(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  result = exodus::getprocessn();
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_getexecpath(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  exodus::var result;
  
  (void)jenv;
  (void)jcls;
  result = exodus::getexecpath();
  *(exodus::var **)&jresult = new exodus::var((const exodus::var &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_new_1MVException(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = 0 ;
  exodus::MVException *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = (exodus::MVException *)new exodus::MVException((exodus::var const &)*arg1);
  *(exodus::MVException **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_exodus_jexodusJNI_MVException_1description_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  exodus::MVException *arg1 = (exodus::MVException *) 0 ;
  exodus::var *arg2 = (exodus::var *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(exodus::MVException **)&jarg1; 
  arg2 = *(exodus::var **)&jarg2; 
  if (arg1) (arg1)->description = *arg2;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_MVException_1description_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  exodus::MVException *arg1 = (exodus::MVException *) 0 ;
  exodus::var *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::MVException **)&jarg1; 
  result = (exodus::var *)& ((arg1)->description);
  *(exodus::var **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_exodus_jexodusJNI_delete_1MVException(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  exodus::MVException *arg1 = (exodus::MVException *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(exodus::MVException **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_new_1MVDivideByZero(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = 0 ;
  exodus::MVDivideByZero *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = (exodus::MVDivideByZero *)new exodus::MVDivideByZero((exodus::var const &)*arg1);
  *(exodus::MVDivideByZero **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_exodus_jexodusJNI_delete_1MVDivideByZero(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  exodus::MVDivideByZero *arg1 = (exodus::MVDivideByZero *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(exodus::MVDivideByZero **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_new_1MVNonNumeric(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = 0 ;
  exodus::MVNonNumeric *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = (exodus::MVNonNumeric *)new exodus::MVNonNumeric((exodus::var const &)*arg1);
  *(exodus::MVNonNumeric **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_exodus_jexodusJNI_delete_1MVNonNumeric(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  exodus::MVNonNumeric *arg1 = (exodus::MVNonNumeric *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(exodus::MVNonNumeric **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_new_1MVOutOfMemory(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = 0 ;
  exodus::MVOutOfMemory *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = (exodus::MVOutOfMemory *)new exodus::MVOutOfMemory((exodus::var const &)*arg1);
  *(exodus::MVOutOfMemory **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_exodus_jexodusJNI_delete_1MVOutOfMemory(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  exodus::MVOutOfMemory *arg1 = (exodus::MVOutOfMemory *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(exodus::MVOutOfMemory **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_new_1MVUnassigned(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = 0 ;
  exodus::MVUnassigned *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = (exodus::MVUnassigned *)new exodus::MVUnassigned((exodus::var const &)*arg1);
  *(exodus::MVUnassigned **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_exodus_jexodusJNI_delete_1MVUnassigned(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  exodus::MVUnassigned *arg1 = (exodus::MVUnassigned *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(exodus::MVUnassigned **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_new_1MVUndefined(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = 0 ;
  exodus::MVUndefined *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = (exodus::MVUndefined *)new exodus::MVUndefined((exodus::var const &)*arg1);
  *(exodus::MVUndefined **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_exodus_jexodusJNI_delete_1MVUndefined(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  exodus::MVUndefined *arg1 = (exodus::MVUndefined *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(exodus::MVUndefined **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_new_1MVInvalidPointer(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = 0 ;
  exodus::MVInvalidPointer *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = (exodus::MVInvalidPointer *)new exodus::MVInvalidPointer((exodus::var const &)*arg1);
  *(exodus::MVInvalidPointer **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_exodus_jexodusJNI_delete_1MVInvalidPointer(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  exodus::MVInvalidPointer *arg1 = (exodus::MVInvalidPointer *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(exodus::MVInvalidPointer **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_new_1MVDBException(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = 0 ;
  exodus::MVDBException *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = (exodus::MVDBException *)new exodus::MVDBException((exodus::var const &)*arg1);
  *(exodus::MVDBException **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_exodus_jexodusJNI_delete_1MVDBException(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  exodus::MVDBException *arg1 = (exodus::MVDBException *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(exodus::MVDBException **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_new_1MVNotImplemented(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = 0 ;
  exodus::MVNotImplemented *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = (exodus::MVNotImplemented *)new exodus::MVNotImplemented((exodus::var const &)*arg1);
  *(exodus::MVNotImplemented **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_exodus_jexodusJNI_delete_1MVNotImplemented(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  exodus::MVNotImplemented *arg1 = (exodus::MVNotImplemented *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(exodus::MVNotImplemented **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_new_1MVDebug(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = 0 ;
  exodus::MVDebug *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = (exodus::MVDebug *)new exodus::MVDebug((exodus::var const &)*arg1);
  *(exodus::MVDebug **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_exodus_jexodusJNI_delete_1MVDebug(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  exodus::MVDebug *arg1 = (exodus::MVDebug *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(exodus::MVDebug **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_new_1MVStop(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = 0 ;
  exodus::MVStop *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = (exodus::MVStop *)new exodus::MVStop((exodus::var const &)*arg1);
  *(exodus::MVStop **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_exodus_jexodusJNI_delete_1MVStop(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  exodus::MVStop *arg1 = (exodus::MVStop *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(exodus::MVStop **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_new_1MVAbort(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = 0 ;
  exodus::MVAbort *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = (exodus::MVAbort *)new exodus::MVAbort((exodus::var const &)*arg1);
  *(exodus::MVAbort **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_exodus_jexodusJNI_delete_1MVAbort(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  exodus::MVAbort *arg1 = (exodus::MVAbort *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(exodus::MVAbort **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_new_1MVArrayDimensionedZero(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  exodus::MVArrayDimensionedZero *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (exodus::MVArrayDimensionedZero *)new exodus::MVArrayDimensionedZero();
  *(exodus::MVArrayDimensionedZero **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_exodus_jexodusJNI_delete_1MVArrayDimensionedZero(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  exodus::MVArrayDimensionedZero *arg1 = (exodus::MVArrayDimensionedZero *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(exodus::MVArrayDimensionedZero **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_new_1MVArrayIndexOutOfBounds(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  exodus::var *arg1 = 0 ;
  exodus::MVArrayIndexOutOfBounds *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(exodus::var **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "exodus::var const & reference is null");
    return 0;
  } 
  result = (exodus::MVArrayIndexOutOfBounds *)new exodus::MVArrayIndexOutOfBounds((exodus::var const &)*arg1);
  *(exodus::MVArrayIndexOutOfBounds **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_exodus_jexodusJNI_delete_1MVArrayIndexOutOfBounds(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  exodus::MVArrayIndexOutOfBounds *arg1 = (exodus::MVArrayIndexOutOfBounds *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(exodus::MVArrayIndexOutOfBounds **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_new_1MVArrayNotDimensioned(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  exodus::MVArrayNotDimensioned *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (exodus::MVArrayNotDimensioned *)new exodus::MVArrayNotDimensioned();
  *(exodus::MVArrayNotDimensioned **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_exodus_jexodusJNI_delete_1MVArrayNotDimensioned(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  exodus::MVArrayNotDimensioned *arg1 = (exodus::MVArrayNotDimensioned *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(exodus::MVArrayNotDimensioned **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_MVDivideByZero_1SWIGUpcast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong baseptr = 0;
    (void)jenv;
    (void)jcls;
    *(exodus::MVException **)&baseptr = *(exodus::MVDivideByZero **)&jarg1;
    return baseptr;
}

SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_MVNonNumeric_1SWIGUpcast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong baseptr = 0;
    (void)jenv;
    (void)jcls;
    *(exodus::MVException **)&baseptr = *(exodus::MVNonNumeric **)&jarg1;
    return baseptr;
}

SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_MVOutOfMemory_1SWIGUpcast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong baseptr = 0;
    (void)jenv;
    (void)jcls;
    *(exodus::MVException **)&baseptr = *(exodus::MVOutOfMemory **)&jarg1;
    return baseptr;
}

SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_MVUnassigned_1SWIGUpcast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong baseptr = 0;
    (void)jenv;
    (void)jcls;
    *(exodus::MVException **)&baseptr = *(exodus::MVUnassigned **)&jarg1;
    return baseptr;
}

SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_MVUndefined_1SWIGUpcast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong baseptr = 0;
    (void)jenv;
    (void)jcls;
    *(exodus::MVException **)&baseptr = *(exodus::MVUndefined **)&jarg1;
    return baseptr;
}

SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_MVInvalidPointer_1SWIGUpcast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong baseptr = 0;
    (void)jenv;
    (void)jcls;
    *(exodus::MVException **)&baseptr = *(exodus::MVInvalidPointer **)&jarg1;
    return baseptr;
}

SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_MVDBException_1SWIGUpcast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong baseptr = 0;
    (void)jenv;
    (void)jcls;
    *(exodus::MVException **)&baseptr = *(exodus::MVDBException **)&jarg1;
    return baseptr;
}

SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_MVNotImplemented_1SWIGUpcast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong baseptr = 0;
    (void)jenv;
    (void)jcls;
    *(exodus::MVException **)&baseptr = *(exodus::MVNotImplemented **)&jarg1;
    return baseptr;
}

SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_MVDebug_1SWIGUpcast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong baseptr = 0;
    (void)jenv;
    (void)jcls;
    *(exodus::MVException **)&baseptr = *(exodus::MVDebug **)&jarg1;
    return baseptr;
}

SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_MVStop_1SWIGUpcast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong baseptr = 0;
    (void)jenv;
    (void)jcls;
    *(exodus::MVException **)&baseptr = *(exodus::MVStop **)&jarg1;
    return baseptr;
}

SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_MVAbort_1SWIGUpcast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong baseptr = 0;
    (void)jenv;
    (void)jcls;
    *(exodus::MVException **)&baseptr = *(exodus::MVAbort **)&jarg1;
    return baseptr;
}

SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_MVArrayDimensionedZero_1SWIGUpcast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong baseptr = 0;
    (void)jenv;
    (void)jcls;
    *(exodus::MVException **)&baseptr = *(exodus::MVArrayDimensionedZero **)&jarg1;
    return baseptr;
}

SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_MVArrayIndexOutOfBounds_1SWIGUpcast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong baseptr = 0;
    (void)jenv;
    (void)jcls;
    *(exodus::MVException **)&baseptr = *(exodus::MVArrayIndexOutOfBounds **)&jarg1;
    return baseptr;
}

SWIGEXPORT jlong JNICALL Java_exodus_jexodusJNI_MVArrayNotDimensioned_1SWIGUpcast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong baseptr = 0;
    (void)jenv;
    (void)jcls;
    *(exodus::MVException **)&baseptr = *(exodus::MVArrayNotDimensioned **)&jarg1;
    return baseptr;
}

#ifdef __cplusplus
}
#endif

