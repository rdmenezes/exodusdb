<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title></title>
    <script type="text/javascript" src="../neosys/scripts/client.js"></script>
    <script type="text/javascript">
<!--

        //get the stylesheet
        //var NEOSYSlocation='../neosys/'
        //document.writeln('<link REL="stylesheet" TYPE="text/css" HREF="'+NEOSYSlocation+'global.css">')

        document.onkeydown = document_onkeydown

        document.ondblclick = document_ondblclick

        var goriginalstyles = {}

        window.onload = formfunctions_onload
        function formfunctions_onload() {
            window.setTimeout(autofitwindow, 10)
        }

        function autofitwindow() {

            //get width
            var maxwidth = $$('question1').offsetWidth
            var tt = $$('table1').offsetWidth
            if (tt > maxwidth)
                maxwidth = tt
            var newwidth = maxwidth + 100
            if (newwidth > window.screen.availWidth)
                newwidth = window.screen.availWidth

            //get height
            var maxheight = $$('ok_button').offsetTop
            maxheight += $$('ok_button').offsetHeight
            var newheight = maxheight + 100
            if (newheight > window.screen.availHeight)
                newheight = window.screen.availHeight

            //center
            var newtop = (window.screen.availHeight - newheight) / 2
            var newleft = (window.screen.availWidth - newwidth) / 2

            {
                window.resizeTo(newwidth, newheight)
                window.moveTo(newleft, newtop)
            }
            //msie (and later versions of FF3 but setting doesnt seem to work in 3.03)
            //else if (window.dialogWidth)
            {
                window.dialogWidth = newwidth + 'px'
                window.dialogHeight = newheight + 'px'
                window.dialogTop = newtop + 'px'
                window.dialogLeft = newleft + 'px'
            }

        }

        function document_ondblclick(event) {
            if (!event)
                event = window.event
            eventtarget = geteventtarget(event)

            // var col0=row.all['col0']
            // if (col0.innerText==' '||col0.innerText==''||col0.innerText=='\u00a0') clickrow(row)

            if (eventtarget.id != 'cancel' && eventtarget.type == 'checkbox') {
                eventtarget.checked = true
            }

            ok_onclick()

        }

        function document_onkeydown(event) {

            if (!event)
                event = window.event
            eventtarget = geteventtarget(event)

            if (typeof returnmany == 'undefined')
                returnmany = ''

            var keycode = event.keyCode

            window.status = keycode

            //ctrl+Enter or single select
            if (keycode == 13 && event.ctrlKey) {
                ok_onclick()
                return neosyscancelevent(event)
            }

            //F9 is old save
            if (keycode == 120) {
                ok_onclick()
                return neosyscancelevent(event)
            }

            //Esc is cancel
            if (keycode == 27) {
                cancel_onclick()
                return neosyscancelevent(event)
            }

            var selections = document.getElementsByName('selection')

            var element = eventtarget
            var n
            if (element.rowIndex)
                n = element.rowIndex
            else if (element.parentNode && element.parentNode.rowIndex)
                n = element.parentNode.rowIndex
            else if (element.parentNode && element.parentNode.parentNode && element.parentNode.parentNode.rowIndex)
                n = element.parentNode.parentNode.rowIndex
            else
                return

            n -= 1

            //ctrl+enter and f9 is ok
            if (keycode == 120 || (keycode == 13 && event.ctrlKey)) {
                ok_onclick()
                return
            }

            //digits 0-9 select options 1-10
            if (keycode >= 49 && keycode <= 57) {

                var optionn = keycode - 48
                if (optionn == 0) optionn = 10
                selections = document.getElementsByName('selection')
                if (optionn <= selections.length) {
                    selections[optionn - 1].checked = !selections[optionn - 1].checked
                    if (!returnmany || selections.length == 1) {
                        //window.returnValue=optionn
                        //window.close()
                        ok_onclick()
                    }
                }
            }

            //all following refers to many selections 
            if (!returnmany) return

            //enter
            if (keycode == 13 && !isNaN(n)) {

                element.checked = !element.checked

                checkbox_onclick(element)

                event.returnValue = false
                keycode = 40
            }

            //A=all or none
            if (keycode == 65) {
                decide_all_onclick()
            }

            //up down arrow or page
            if (keycode == 33 || keycode == 34 || keycode == 40 || keycode == 38) {

                var direction
                if (keycode == 34 || keycode == 40) direction = 1
                if (keycode == 33 || keycode == 38) direction = -1
                if (keycode == 34) {
                    if (event.ctrlKey) {
                        n = selection.length - 1
                    }
                    else {
                        if (n == (selections.length - 1)) n = 0
                        else {
                            n += 10
                            if (n >= (selections.length - 1)) n = selection.length - 1
                        }
                    }
                    n--
                }
                if (keycode == 33) {
                    if (event.ctrlKey) {
                        n = 0
                    }
                    else {
                        if (n == 0) n = selections.length - 1
                        else {
                            n -= 10
                            if (n <= 0) n = 0
                        }
                    }
                    n++
                }
                var newelement = element
                while (true) {

                    n += direction
                    if (n < 0) n = selections.length - 1
                    if (n >= selections.length) n = 0

                    newelement = selections[n]

                    //skip if no other suitable elements
                    if (newelement == element) return

                    //skip if not visible
                    if (!newelement) return false//may not be on an element
                    if (newelement.style.visibility == 'hidden') continue

                    if (n == 0) window.scrollTo(0, 0)
                    if (n == (selections.length - 1)) window.scrollTo(0, 999999)
                    break

                }

                newelement.focus()
                newelement.select()

                return false

            }

            //none/delete
            if (keycode == 46) {
                for (var ii = 0; ii < selections.length; ii++) selections[ii].checked = false
            }

        }

        function decide_all_onclick() {
            selections = document.getElementsByName('selection')
            var truefalse = !selections[0].checked
            for (var ii = 0; ii < selections.length; ii++)
                selections[ii].checked = truefalse
        }

        function checkbox_onclick(element) {

            var checking = element.checked
            var selection2 = document.getElementsByName('selection')
            var found = false
            var level
            for (ii = 0; ii < selection2.length; ii++) {
                if (found) {
                    //quit once get back to the same level
                    if (selection2[ii].parentNode.nextSibling.innerText.match(/^[\. -]*/) <= level) break
                    selection2[ii].checked = checking
                }
                else if (selection2[ii] == element) {
                    level = selection2[ii].parentNode.nextSibling.innerText.match(/^[\. -]*/)
                    found = true
                }
            }

        }

        function radio_onmousedown(element) {
            element.checked = true
            ok_onclick()
        }

        function ok_onclick() {

            //NB returns row numbers 1 based not 0 based!
            //0 means cancelled

            var returnvalues = []
            var selection2 = document.getElementsByName('selection')
            for (ii = 0; ii < selection2.length; ii++) {
                if (selection2[ii].checked) {
                    var returnvalue
                    if (returncolid === '') {
                        returnvalue = ii + 1
                    }
                    else {
                        returnvalue = inverted ? data[returncolid][ii] : data[ii][returncolid]
                        if (typeof returnvalue == 'object') returnvalue = returnvalue.text
                    }
                    if (!returnmany) {
                        returnvalues = returnvalue
                        break
                    }

                    if (returnvalue) returnvalues[returnvalues.length] = returnvalue

                }
            }

            if (typeof returnvalues != 'object' || returnvalues.length) {
                window.returnValue = returnvalues
            }
            window.close()

        }

        function cancel_onclick() {
            window.returnValue = ""
            window.close()
        }

//-->
    </script>
</head>
<body>
    <div id='wholediv' style="text-align: center">
        <h2>
            <span id="question1"></span>
        </h2>
        <table id="table1" class="neosystable" border="1" cellspacing="0" cellpadding="1">
            <thead>
                <tr id="table1head1row1">
                </tr>
            </thead>
            <tbody id="table1body1">
            </tbody>
        </table>
        <p>
            <input id="ok_button" value="OK" type="submit" class="neosysbutton" title="Enter, Ctrl+Enter or F9"
                onclick="return ok_onclick()" />
            <input id="cancel_button" value="Cancel" type="button" class="neosysbutton" title="Esc"
                onclick="return cancel_onclick()" />
            <input id="print_button" value="Print" type="button" title="Alt+P" accesskey="P"
                class="neosysbutton" onclick="window.print()" />
        </p>
        <script type="text/javascript">

            var data

            startup()

            function startup() {

                if (typeof window.dialogArguments == 'undefined')
                    window.dialogArguments = window.dialogArguments
                if (typeof window.dialogArguments == 'undefined') window.dialogArguments = []

                //called early to make visible
                clientfunctions_setstyle()

                //returncolid==='' or undefined means return row number(s)

                var question = window.dialogArguments[0]
                data = window.dialogArguments[1]
                var cols = window.dialogArguments[2]
                returncolid = window.dialogArguments[3]
                var defaultreply = window.dialogArguments[4]//must be an array with method neosyslocate
                returnmany = window.dialogArguments[5]
                inverted = window.dialogArguments[6]

                //question
                if (!question) question = 'Which do you want?'
                question = question.replace(/[\|\r\n]/g, '<br />')
                if (returnmany)
                    question += '&nbsp;&nbsp;<span style="font-size:66%">(A=All)</span>'
                $$('question1').innerHTML = question

                //data
                //[[,,,],[,,,],[,,,]] or
                //col1.1 vm col1.2 fm col2.1 vm col2.2 etc
                if (!data && !cols) data = [['Yes'], ['No']]
                if (data && typeof data == 'string') {
                    data = data.split(data.indexOf(fm) + 1 ? fm : ':')
                }
                for (ii = 0; ii < data.length; ii++) {
                    if (typeof data[ii] == 'string') {
                        data[ii] = data[ii].split(data[ii].indexOf(vm) + 1 ? vm : ';')
                    }
                    else if (typeof data[ii] == 'number') data[ii] = [data[ii]]
                }

                //quit if no data
                if (!data.length) {
                    alert('No options available')
                    cancel_onclick()
                    return null
                }

                //check some options
                if (!data.length) {
                    //  cancel_onclick()
                    alert('No data to select')
                    window.setTimeout('window.close()', 1)
                    return false
                }

                //columns
                //[[dictid,title],etc. or
                //colid vm coltitle fm ... etc one per column
                if (!cols) {
                    cols = []
                    for (var ii = 0; ii < data[0].length; ii++) {
                        cols[ii] = [ii, '']
                    }
                }
                if (typeof cols == 'string') {
                    if (cols.indexOf(fm2) < 0 && cols.indexOf(vm2) < 0) {
                        cols = cols.replace(/:/g, fm2)
                        cols = cols.replace(/;/g, vm2)
                    }
                    cols = cols.split(fm2)
                }
                for (ii = 0; ii < cols.length; ii++) {
                    if (typeof cols[ii] == 'string') cols[ii] = cols[ii].split(vm2)
                }
                var ncols = cols.length

                //returncolid
                if (typeof returncolid == 'undefined') returncolid = ''

                //defaultreply

                //returnmany
                //returnmany=

                //build the table

                //build the column headings row
                var firstselection

                //get a handle on the existing heading row
                var oRow = $$('table1head1row1')

                //add two columns for the check box or radio button column to the column heading
                var oCell = document.createElement("TH")
                oCell.colSpan = 2
                oCell.align = 'center'
                if (returnmany)
                    tt = '<button'
                    + ' title="A=All"'
                    + ' onclick="decide_all_onclick()"'
                    + ' style="font-size:80%"'
                    + '>All</button'
                else
                    tt = '&nbsp;'
                oCell.innerHTML = tt
                oRow.appendChild(oCell)

                //add other column headings
                for (ii = 0; ii < ncols; ii++) {
                    var oCell = document.createElement("TH")
                    oCell.style.fontWeight = 'bold'
                    var title = cols[ii][1]
                    if (typeof title == 'undefined') {
                        title = cols[ii][0]
                        if (!title) title = ''
                        if (parseInt(title)) title = ''
                        title = title.replace(/_/gi, ' ')
                    }
                    oCell.innerHTML = title
                    oRow.appendChild(oCell)

                    //check colid is in data
                    //if ((!inverted&&typeof (data[0][cols[ii][0]])=='undefined')||(inverted&&typeof (data[cols[ii][0]][0])=='undefined'))
                    if ((!inverted && typeof (data[0][cols[ii][0]]) == 'undefined') || (inverted && typeof (data[cols[ii][0]]) == 'undefined')) {
                        //  alert(cols[ii])
                        alert('popup column "' + cols[ii][0] + '" not in popup data in decide.htm')
                        cancel_onclick()
                        return null
                    }

                }

                //column heading row built

                //build the table rows
                var starttime = new Date
                var maxsecs = 15

                var table1body1x = $$('table1body1')

                //rows
                var nrows = inverted ? data[cols[0][0]].length : data.length
                for (rown = 0; rown < nrows; rown++) {

                    //break if too many rows
                    if ((new Date - starttime) > (maxsecs * 1000)) {
                        if (!confirm('A large popup window is taking time to prepare.\r\rClick [OK] to wait or [Cancel] to see part.')) break
                        starttime = new Date
                    }

                    //hide checkboxes on rows with nothing to return
                    var visibilityhidden
                    if (returncolid) {
                        var returnvalue = inverted ? data[returncolid][rown] : data[rown][returncolid]
                        if (!returncolid)
                            returnvalue = rown + 1
                        if (returnmany)
                            visibilityhidden = returnvalue ? '' : 'onclick="checkbox_onclick(this)"'
                        else
                            visibilityhidden = returnvalue ? '' : 'style=visibility:hidden'
                    }

                    //create a new row
                    var oRow = document.createElement("TR")
                    table1body1x.appendChild(oRow)

                    //add line number column
                    var oCell = document.createElement("TD")
                    oRow.appendChild(oCell)
                    oCell.innerHTML = rown + 1 + "."
                    if (visibilityhidden) oCell.style.visibility = 'hidden'

                    //add a check box or radio button column
                    var oCellx = document.createElement("TD")
                    oRow.appendChild(oCellx)

                    if (returnmany) {
                        oCellx.innerHTML = '<input ' + visibilityhidden + ' id=selection name=selection type="checkbox" />'
                    }
                    else {
                        var checked = ''
                        if (!firstselection) {
                            if (!visibilityhidden) {
                                checked = 'checked=true'
                                firstselection = oCellx
                            }
                        }
                        oCellx.innerHTML = '<input ' + checked + ' ' + visibilityhidden + ' id=selection name=selection type=radio onmousedown="radio_onmousedown(this)" />'
                    }
                    if (defaultreply && returncolid === '' && defaultreply.neosyslocate(rown + 1)) oCellx.firstChild.checked = true

                    //add the data columns for this row
                    for (coln = 0; coln < ncols; coln++) {
                        var oCell = document.createElement("TD")
                        oRow.appendChild(oCell)

                        var colinfo = cols[coln]

                        if (inverted) {
                            value = data[colinfo[0]][rown]
                        }
                        else {
                            value = data[rown][colinfo[0]]
                        }
                        if (typeof value == 'undefined')
                            value = ''
                        else if (typeof value == 'object')
                            value = value.text

                        //date conversion
                        if (colinfo[2] == 'DATE')
                            value = DATE(value)

                        //time conversion
                        if (colinfo[2] == 'TIME')
                            value = TIME(value)

                        //oCell.innerHTML=value
                        //use innerText otherwise things like <> in the data do not show
                        oCell.innerText = value
                        //if (visibilityhidden) oCell.style.fontWeight='bold'

                        if (colinfo[3])
                            oCell.align = colinfo[3]

                        if (defaultreply) {
                            if (typeof returncolid === '') {
                                if (defaultreply.neosyslocate(rown + 1))
                                    oCellx.firstChild.checked = true
                            }
                            else {
                                //returncolid was being treated as onscreen col preventing proper defaulting
                                //if (value && coln === returncolid) {
                                if (value && (colinfo[0] == returncolid || Number(colinfo[0]) == returncolid)) {
                                    if (defaultreply.neosyslocate(value))
                                        oCellx.firstChild.checked = true
                                }
                            }
                        }

                    }

                    //table rows built

                    //table built

                }

                //autoselect only one option
                if (data.length == 1) {
                    if (returncolid == '') {
                        var selection2 = document.getElementsByName('selection')
                        selection2[0].checked = true
                    }
                    ok_onclick()
                    return null
                }

            } //of startup()

            //date functions duplicated in decide.htm and decide2.htm
            var gdatedaypos
            var gdatemonthpos
            var gdateyearpos

            function setdateformat() {
                var gfirstdayofweek = neosysgetcookie(glogincode, 'NEOSYS2', 'fd')
                if (!gfirstdayofweek) gfirstdayofweek = 1
                gfirstdayofweek = Number(gfirstdayofweek)

                var dateformat = neosysgetcookie(glogincode, 'NEOSYS2', 'df')
                if (dateformat.slice(0, 2) == '01') {
                    gdatedaypos = 1
                    gdatemonthpos = 0
                    gdateyearpos = 2
                }
                else if (dateformat.slice(0, 2) == '31') {
                    gdatedaypos = 0
                    gdatemonthpos = 1
                    gdateyearpos = 2
                }
                else {
                    gdatedaypos = 2
                    gdatemonthpos = 1
                    gdateyearpos = 0
                }
                return
            }

            function DATE(value) {

                if (typeof gdatedaypos == 'undefined') setdateformat()

                if (value == '') return ''

                //convert from 1=1/1/67 to text DD/MM/YYYY format
                //result=new Date(1967,11,31+parseInt(value,10))
                result = new Date(Date.UTC(1967, 11, 31 + parseInt(value, 10)))
                //result.setUTCHours(0,0,0)
                //result=result.getUTCDate()+'/'+(result.getUTCMonth()+1)+'/'+result.getUTCFullYear()
                var result2 = []
                result2[gdatedaypos] = result.getUTCDate()
                result2[gdatemonthpos] = result.getUTCMonth() + 1
                result2[gdateyearpos] = result.getUTCFullYear()

                return result2.join('/')

            }

            function TIME(value) {

                //blank in .. blank out
                if (value == '') return ''

                var secs = value % 60
                value -= secs
                var mins = (value / 60) % 60
                value -= 60 * mins
                //var hours=(value/60/60)%24
                //allow for 25 hour clock
                var hours = (value / 60 / 60)
                result = ('0' + hours).slice(-2) + ':' + ('0' + mins).slice(-2)

                return result

            }

        </script>
    </div>
</body>
</html>
