<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title></title>
</head>
<body>
    <div>
        <h3>
            INSTALLATION</h3>
        <p>
            Some draft information how to get NEOSYS Ajax implementation going in AREV backend</p>
        <ol>
            <li>Install the NEOSYS server routine into your runtime. I have to make an installation
                procedure for this. I imagine it will be a case of attaching a subdirectory containing
                most BP programs (but possibly some other files eg security tables) and cataloging
                all my subroutines.<br />
                Note that the standard Revelation MSG routine in SYSOBJ will have to be replaced
                by a NEOSYS version that will return messages to the web interface instead of simply
                displaying them on the screen.<br />
                NEOSYS currently relies on using @USER0 TO @USER4 so if you use these in your routines
                you will have to eliminate them or ask NEOSYS to change it. NEOSYS.NET also uses
                labelled commons called SYSTEM and GENERAL
                <li>Install the NEOSYS.NET folder in a directory parallel to your IMC and AREV directories
                    and add it as a virtual directory to your web server. If you do not want to use
                    a web server you can also simply open the HTML web pages via a shared folder or
                    mapped drive.
                    <li>Create a folder in NEOSYS.NET for your applications web pages. You can create separate
                        folders for each module of your application as desired.
                        <li>Start one or more copies of your application (on the server preferably) and start
                            the NEOSYS listening routine by running the command "NET".</li>
        </ol>
        <h3>
            CONVERSION/DEVELOPMENT</h3>
        <h4>
            Conversion of forms from templates to HTML pages (both tiles and collector forms):</h4>
        <em>
            <p>
                Partially Automated routine.</p>
            <p>
        </em>Syntax: <strong>WINDOW2HTM windowfilename windowkey outputpathandfilename</strong><p />
        <p>
            </EM>It is possible to reduce the initial grunt work of creating forms to HTML by
            using a NEOSYS&nbsp;template to HTML&nbsp;program&nbsp;in AREV. This currently results
            in a top down form with prompts on the left, data entry in the middle and help comments
            on the right. This can be edited into any look you like using an HTML editor of
            your choice. It might be possible to modify the conversion program to produce HTML
            that looks exactly like the DOS entry form but this would perhaps not exploit the
            new flexibility available in HTML forms. The conversion routine does not convert
            everything automatically ... especially it does not translate popup, pre and post
            routines from R/Basic to jscript. You will have to do manual work to convert these
            features.</p>
        <p>
            <em>Manually</em> Create a web page in NEOSYS.NET for each template that you have.
            The web page will have three main sections. The dictionary and routines section
            can either be stored in the main web page or stored in separate files and included
            using any and all standard HTML programming methods and tricks. The three main logical
            sections of the new HTML forms are as follows:</p>
        <ul>
            <li>Standard HTML layout of the form ... using any HTML layout you like without restriction.
                <li>Dictionary of the form in jscript form. See examples for this. A dictionary is a
                    jscript array of dictitems Each dictitem may have lots of properties representing
                    all the field properties found in a template by pressing Shift+F6 in paint plus
                    many others. The formula for symbolic items is also stored as a jscript routine
                    in the dictionary.
                    <li>Routines written in jscript representing the F2, PRE and POST routines of each field.
                        Also pre,post and replace routines for READ, WRITE, DELETE etc. </li>
        </ul>
        <h4>
            Conversion of menus</h4>
        <p>
            <em>Mostly automated routine</em></p>
        <p>
            Syntax: <strong>MENU2HTM menufilename menukey</strong></p>
        <p>
            Handles M, W, S, E and X codes</p>
        <p>
            Outputs a MENU.HTM into the NEOSYS.NET directory containing the main menu AND all
            subsidiary menus.</p>
        <p>
            Also&nbsp;converts all WINDOW templates found in the menus converted.</p>
        <p>
            Any S or E or X commands in the menu need converting of the subroutine and programs
            from R/Basic to jScript.</p>
        <h4>
            Conversion of R/LIST</h4>
        <p>
            A collector window to collect the report parameters must be converted (see conversion
            of forms from templates above)</p>
        <p>
            An XXXXXPROXY program must be written according to a skeleton example. XXXXX is
            defined in the client form as the global variable gmodule. Eg ACCOUNTSPROXY is a
            program that will handle a variety of requests from the client depending on the
            exact command.</p>
        <p>
            The XXXXXPROXY program will receive the contents of the form or just a simple command
            from a jscript&nbsp;and produce an output .HTM file. NEOSYS support functions provide
            the path and name of the file.</p>
        <p>
            A NEOSYS replacement of the standard RLIST program can output to the required .HTM
            file given from standard queries.</p>
        <p>
            By default on saving any collector window. The contents of the window will be passed
            to the XXXXXPROXY program on the server and any output from XXXXXPROXY will be displayed
            on the client. If there is any error discovered then an error message will display,
            the user can correct their data on the collector window and resubmit.</p>
        <h4>
            Conversion of custom updates/printouts</h4>
        <p>
            The must first be converted to output to .HTM files. Preferably they should output
            native HTML however you can simply continue to output fixed font reports and wrap
            this in HTML tags.</p>
        <p>
            © 2004 NEOSYS Software Ltd. All Rights Reserved.</p>
    </div>
</body>
</html>
