<?php

/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

// Try to load our extension if it's not already loaded.
if (!extension_loaded('exophp')) {
  if (strtolower(substr(PHP_OS, 0, 3)) === 'win') {
    if (!dl('php_exophp.dll')) return;
  } else {
    // PHP_SHLIB_SUFFIX gives 'dylib' on MacOS X but modules are 'so'.
    if (PHP_SHLIB_SUFFIX === 'dylib') {
      if (!dl('exophp.so')) return;
    } else {
      if (!dl('exophp.'.PHP_SHLIB_SUFFIX)) return;
    }
  }
}



abstract class exophp {
	const MV_H = MV_H;

	static function mvtypemask_get() {
		return mvtypemask_get();
	}

	const LASTDELIMITERCHARNOPLUS1 = LASTDELIMITERCHARNOPLUS1;

	static function MVeq($var1,$var2) {
		return MVeq($var1,$var2);
	}

	static function MVlt($var1_or_int1,$var2_or_int2) {
		return MVlt($var1_or_int1,$var2_or_int2);
	}

	static function MVadd($var1,$var2) {
		$r=MVadd($var1,$var2);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	static function MVmul($var1,$var2) {
		$r=MVmul($var1,$var2);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	static function MVdiv($var1,$var2) {
		$r=MVdiv($var1,$var2);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	static function MVmod($var1,$var2) {
		$r=MVmod($var1,$var2);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	static function MVcat($var1,$var2) {
		$r=MVcat($var1,$var2);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	static function FM_get() {
		$r=FM_get();
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	static function VM_get() {
		$r=VM_get();
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	static function SM_get() {
		$r=SM_get();
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	static function SVM_get() {
		$r=SVM_get();
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	static function TM_get() {
		$r=TM_get();
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	static function STM_get() {
		$r=STM_get();
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	static function SSTM_get() {
		$r=SSTM_get();
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	static function IM_get() {
		$r=IM_get();
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	static function RM_get() {
		$r=RM_get();
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	static function AM_get() {
		$r=AM_get();
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	static function DQ_get() {
		$r=DQ_get();
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	static function SQ_get() {
		$r=SQ_get();
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	static function SLASH_get() {
		$r=SLASH_get();
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	static function SLASH__get() {
		return SLASH__get();
	}

	const SLASH_IS_BACKSLASH = SLASH_IS_BACKSLASH;

	static function LOWERCASE__get() {
		$r=LOWERCASE__get();
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	static function UPPERCASE__get() {
		$r=UPPERCASE__get();
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	static function PLATFORM__get() {
		$r=PLATFORM__get();
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	static function DBTRACE_set($DBTRACE) {
		DBTRACE_set($DBTRACE);
	}

	static function DBTRACE_get() {
		return DBTRACE_get();
	}

	static function EXECPATH2_set($EXECPATH2) {
		EXECPATH2_set($EXECPATH2);
	}

	static function EXECPATH2_get() {
		$r=EXECPATH2_get();
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	static function output($var1) {
		output($var1);
	}

	static function outputl($var1) {
		outputl($var1);
	}

	static function outputt($var1) {
		outputt($var1);
	}

	static function errput($var1) {
		errput($var1);
	}

	static function errputl($var1) {
		errputl($var1);
	}

	static function logput($var1) {
		logput($var1);
	}

	static function logputl($var1) {
		logputl($var1);
	}

	static function backtrace() {
		$r=backtrace();
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	static function getenvironmentn() {
		return getenvironmentn();
	}

	static function setenvironmentn($environmentn) {
		setenvironmentn($environmentn);
	}

	static function getprocessn() {
		$r=getprocessn();
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	static function getexecpath() {
		$r=getexecpath();
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}
}

/* PHP Proxy Classes */
class c_var {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_exophp_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_exophp_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function toBool() {
		return c_var_toBool($this->_cPtr);
	}

	function toInt() {
		return c_var_toInt($this->_cPtr);
	}

	function toDouble() {
		return c_var_toDouble($this->_cPtr);
	}

	function towstring() {
		return c_var_towstring($this->_cPtr);
	}

	function __toString() {
		return c_var___toString($this->_cPtr);
	}

	function __construct($var1_or_cstr1_or_str1_or_bool1_or_int1_or_longlong1_or_double1=null,$int1=null) {
		if (is_resource($var1_or_cstr1_or_str1_or_bool1_or_int1_or_longlong1_or_double1) && get_resource_type($var1_or_cstr1_or_str1_or_bool1_or_int1_or_longlong1_or_double1) === '_p_exodus__var') {
			$this->_cPtr=$var1_or_cstr1_or_str1_or_bool1_or_int1_or_longlong1_or_double1;
			return;
		}
		switch (func_num_args()) {
		case 0: $this->_cPtr=new_c_var(); break;
		case 1: $this->_cPtr=new_c_var($var1_or_cstr1_or_str1_or_bool1_or_int1_or_longlong1_or_double1); break;
		default: $this->_cPtr=new_c_var($var1_or_cstr1_or_str1_or_bool1_or_int1_or_longlong1_or_double1,$int1);
		}
	}

	function date() {
		$r=c_var_date($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function time() {
		$r=c_var_time($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function timedate() {
		$r=c_var_timedate($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function ossleep($milliseconds) {
		c_var_ossleep($this->_cPtr,$milliseconds);
	}

	function ostime() {
		$r=c_var_ostime($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function osopen($filename=null,$locale=null) {
		switch (func_num_args()) {
		case 0: $r=c_var_osopen($this->_cPtr); break;
		case 1: $r=c_var_osopen($this->_cPtr,$filename); break;
		default: $r=c_var_osopen($this->_cPtr,$filename,$locale);
		}
		return $r;
	}

	function osbread($osfilevar,$startoffset,$length) {
		$r=c_var_osbread($this->_cPtr,$osfilevar,$startoffset,$length);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function osbwrite($osfilevar,$startoffset) {
		return c_var_osbwrite($this->_cPtr,$osfilevar,$startoffset);
	}

	function osclose() {
		c_var_osclose($this->_cPtr);
	}

	function oswrite($osfilename,$locale) {
		return c_var_oswrite($this->_cPtr,$osfilename,$locale);
	}

	function osdelete($osfilename=null) {
		switch (func_num_args()) {
		case 0: $r=c_var_osdelete($this->_cPtr); break;
		default: $r=c_var_osdelete($this->_cPtr,$osfilename);
		}
		return $r;
	}

	function osrename($newosdir_or_filename) {
		return c_var_osrename($this->_cPtr,$newosdir_or_filename);
	}

	function oscopy($to_osfilename) {
		return c_var_oscopy($this->_cPtr,$to_osfilename);
	}

	function oslist($path,$wildcard,$mode=0) {
		$r=c_var_oslist($this->_cPtr,$path,$wildcard,$mode);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function oslistf($path,$wildcard) {
		$r=c_var_oslistf($this->_cPtr,$path,$wildcard);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function oslistd($path,$wildcard) {
		$r=c_var_oslistd($this->_cPtr,$path,$wildcard);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function osfile() {
		$r=c_var_osfile($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function osdir() {
		$r=c_var_osdir($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function osmkdir() {
		return c_var_osmkdir($this->_cPtr);
	}

	function osrmdir($evenifnotempty=false) {
		return c_var_osrmdir($this->_cPtr,$evenifnotempty);
	}

	function oscwd($path=null) {
		switch (func_num_args()) {
		case 0: $r=c_var_oscwd($this->_cPtr); break;
		default: $r=c_var_oscwd($this->_cPtr,$path);
		}
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function osflush() {
		c_var_osflush($this->_cPtr);
	}

	function osread($osfilename,$locale) {
		return c_var_osread($this->_cPtr,$osfilename,$locale);
	}

	function suspend() {
		$r=c_var_suspend($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function osshell() {
		$r=c_var_osshell($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function osshellread() {
		$r=c_var_osshellread($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function osshellwrite($writestr) {
		$r=c_var_osshellwrite($this->_cPtr,$writestr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function osgetenv($name) {
		return c_var_osgetenv($this->_cPtr,$name);
	}

	function ossetenv($name) {
		return c_var_ossetenv($this->_cPtr,$name);
	}

	function stop($text) {
		c_var_stop($this->_cPtr,$text);
	}

	function abort($text) {
		c_var_abort($this->_cPtr,$text);
	}

	function perform() {
		$r=c_var_perform($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function execute() {
		$r=c_var_execute($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function chain() {
		$r=c_var_chain($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function logoff() {
		$r=c_var_logoff($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function debug($arg1=null) {
		switch (func_num_args()) {
		case 0: $r=c_var_debug($this->_cPtr); break;
		default: $r=c_var_debug($this->_cPtr,$arg1);
		}
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function breakon() {
		c_var_breakon($this->_cPtr);
	}

	function breakoff() {
		c_var_breakoff($this->_cPtr);
	}

	function output($var1=null) {
		switch (func_num_args()) {
		case 0: $r=c_var_output($this->_cPtr); break;
		default: $r=c_var_output($this->_cPtr,$var1);
		}
		if (!is_resource($r)) return $r;
		switch (get_resource_type($r)) {
		case '_p_exodus__var': return new c_var($r);
		default: return new c_var($r);
		}
	}

	function outputl($var1=null) {
		switch (func_num_args()) {
		case 0: $r=c_var_outputl($this->_cPtr); break;
		default: $r=c_var_outputl($this->_cPtr,$var1);
		}
		if (!is_resource($r)) return $r;
		switch (get_resource_type($r)) {
		case '_p_exodus__var': return new c_var($r);
		default: return new c_var($r);
		}
	}

	function outputt($var1=null) {
		switch (func_num_args()) {
		case 0: $r=c_var_outputt($this->_cPtr); break;
		default: $r=c_var_outputt($this->_cPtr,$var1);
		}
		if (!is_resource($r)) return $r;
		switch (get_resource_type($r)) {
		case '_p_exodus__var': return new c_var($r);
		default: return new c_var($r);
		}
	}

	function logput($var1=null) {
		switch (func_num_args()) {
		case 0: $r=c_var_logput($this->_cPtr); break;
		default: $r=c_var_logput($this->_cPtr,$var1);
		}
		if (!is_resource($r)) return $r;
		switch (get_resource_type($r)) {
		case '_p_exodus__var': return new c_var($r);
		default: return new c_var($r);
		}
	}

	function logputl($var1=null) {
		switch (func_num_args()) {
		case 0: $r=c_var_logputl($this->_cPtr); break;
		default: $r=c_var_logputl($this->_cPtr,$var1);
		}
		if (!is_resource($r)) return $r;
		switch (get_resource_type($r)) {
		case '_p_exodus__var': return new c_var($r);
		default: return new c_var($r);
		}
	}

	function errput($var1=null) {
		switch (func_num_args()) {
		case 0: $r=c_var_errput($this->_cPtr); break;
		default: $r=c_var_errput($this->_cPtr,$var1);
		}
		if (!is_resource($r)) return $r;
		switch (get_resource_type($r)) {
		case '_p_exodus__var': return new c_var($r);
		default: return new c_var($r);
		}
	}

	function errputl($var1=null) {
		switch (func_num_args()) {
		case 0: $r=c_var_errputl($this->_cPtr); break;
		default: $r=c_var_errputl($this->_cPtr,$var1);
		}
		if (!is_resource($r)) return $r;
		switch (get_resource_type($r)) {
		case '_p_exodus__var': return new c_var($r);
		default: return new c_var($r);
		}
	}

	function put($ostream1) {
		$r=c_var_put($this->_cPtr,$ostream1);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function at($columnorcode_or_column,$row=null) {
		switch (func_num_args()) {
		case 1: $r=c_var_at($this->_cPtr,$columnorcode_or_column); break;
		default: $r=c_var_at($this->_cPtr,$columnorcode_or_column,$row);
		}
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function getcursor() {
		$r=c_var_getcursor($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function setcursor() {
		c_var_setcursor($this->_cPtr);
	}

	function getprompt() {
		$r=c_var_getprompt($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function setprompt() {
		c_var_setprompt($this->_cPtr);
	}

	function input($prompt=null,$int1=0) {
		switch (func_num_args()) {
		case 0: $r=c_var_input($this->_cPtr); break;
		default: $r=c_var_input($this->_cPtr,$prompt,$int1);
		}
		return $r;
	}

	function eof() {
		return c_var_eof($this->_cPtr);
	}

	function assigned() {
		return c_var_assigned($this->_cPtr);
	}

	function unassigned() {
		return c_var_unassigned($this->_cPtr);
	}

	function transfer($var2) {
		$r=c_var_transfer($this->_cPtr,$var2);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function exchange($var2) {
		$r=c_var_exchange($this->_cPtr,$var2);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function c_clone($var2) {
		$r=c_var_c_clone($this->_cPtr,$var2);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function abs() {
		$r=c_var_abs($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function mod($divisor) {
		$r=c_var_mod($this->_cPtr,$divisor);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function pwr($exponent) {
		$r=c_var_pwr($this->_cPtr,$exponent);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function rnd() {
		$r=c_var_rnd($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function initrnd() {
		c_var_initrnd($this->_cPtr);
	}

	function exp() {
		$r=c_var_exp($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function sqrt() {
		$r=c_var_sqrt($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function sin() {
		$r=c_var_sin($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function cos() {
		$r=c_var_cos($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function tan() {
		$r=c_var_tan($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function atan() {
		$r=c_var_atan($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function loge() {
		$r=c_var_loge($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function integer() {
		$r=c_var_integer($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function floor() {
		$r=c_var_floor($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function round($ndecimals=0) {
		$r=c_var_round($this->_cPtr,$ndecimals);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function setxlocale() {
		return c_var_setxlocale($this->_cPtr);
	}

	function getxlocale() {
		$r=c_var_getxlocale($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function chr($num) {
		$r=c_var_chr($this->_cPtr,$num);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function str($num) {
		$r=c_var_str($this->_cPtr,$num);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function space() {
		$r=c_var_space($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function match($matchstr,$options) {
		return c_var_match($this->_cPtr,$matchstr,$options);
	}

	function seq() {
		$r=c_var_seq($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function dcount($substrx) {
		$r=c_var_dcount($this->_cPtr,$substrx);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function count($substrx_or_charx) {
		$r=c_var_count($this->_cPtr,$substrx_or_charx);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function length() {
		$r=c_var_length($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function len() {
		$r=c_var_len($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function data() {
		return c_var_data($this->_cPtr);
	}

	function isnum() {
		return c_var_isnum($this->_cPtr);
	}

	function isnum_old() {
		return c_var_isnum_old($this->_cPtr);
	}

	function converter($oldchars,$newchars) {
		$r=c_var_converter($this->_cPtr,$oldchars,$newchars);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function swapper($oldstr,$newstr,$options) {
		$r=c_var_swapper($this->_cPtr,$oldstr,$newstr,$options);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function splicer($start1,$length_or_str,$str=null) {
		switch (func_num_args()) {
		case 2: $r=c_var_splicer($this->_cPtr,$start1,$length_or_str); break;
		default: $r=c_var_splicer($this->_cPtr,$start1,$length_or_str,$str);
		}
		if (!is_resource($r)) return $r;
		switch (get_resource_type($r)) {
		case '_p_exodus__var': return new c_var($r);
		default: return new c_var($r);
		}
	}

	function quoter() {
		$r=c_var_quoter($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function squoter() {
		$r=c_var_squoter($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function unquoter() {
		$r=c_var_unquoter($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function ucaser() {
		$r=c_var_ucaser($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function lcaser() {
		$r=c_var_lcaser($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function trimmer($trimchar) {
		$r=c_var_trimmer($this->_cPtr,$trimchar);
		if (!is_resource($r)) return $r;
		switch (get_resource_type($r)) {
		case '_p_exodus__var': return new c_var($r);
		default: return new c_var($r);
		}
	}

	function trimmerf($trimchar) {
		$r=c_var_trimmerf($this->_cPtr,$trimchar);
		if (!is_resource($r)) return $r;
		switch (get_resource_type($r)) {
		case '_p_exodus__var': return new c_var($r);
		default: return new c_var($r);
		}
	}

	function trimmerb($trimchar) {
		$r=c_var_trimmerb($this->_cPtr,$trimchar);
		if (!is_resource($r)) return $r;
		switch (get_resource_type($r)) {
		case '_p_exodus__var': return new c_var($r);
		default: return new c_var($r);
		}
	}

	function fieldstorer($sepchar,$fieldno,$nfields,$replacement) {
		$r=c_var_fieldstorer($this->_cPtr,$sepchar,$fieldno,$nfields,$replacement);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function substrer($startx,$length=null) {
		switch (func_num_args()) {
		case 1: $r=c_var_substrer($this->_cPtr,$startx); break;
		default: $r=c_var_substrer($this->_cPtr,$startx,$length);
		}
		if (!is_resource($r)) return $r;
		switch (get_resource_type($r)) {
		case '_p_exodus__var': return new c_var($r);
		default: return new c_var($r);
		}
	}

	function convert($oldchars,$newchars) {
		$r=c_var_convert($this->_cPtr,$oldchars,$newchars);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function swap($oldstr,$newstr,$options) {
		$r=c_var_swap($this->_cPtr,$oldstr,$newstr,$options);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function splice($start1,$length_or_str,$str=null) {
		switch (func_num_args()) {
		case 2: $r=c_var_splice($this->_cPtr,$start1,$length_or_str); break;
		default: $r=c_var_splice($this->_cPtr,$start1,$length_or_str,$str);
		}
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function quote() {
		$r=c_var_quote($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function squote() {
		$r=c_var_squote($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function unquote() {
		$r=c_var_unquote($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function ucase() {
		$r=c_var_ucase($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function lcase() {
		$r=c_var_lcase($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function trim($trimchar) {
		$r=c_var_trim($this->_cPtr,$trimchar);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function trimf($trimchar) {
		$r=c_var_trimf($this->_cPtr,$trimchar);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function trimb($trimchar) {
		$r=c_var_trimb($this->_cPtr,$trimchar);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function fieldstore($sepchar,$fieldno,$nfields,$replacement) {
		$r=c_var_fieldstore($this->_cPtr,$sepchar,$fieldno,$nfields,$replacement);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function substr($startx,$length=null) {
		switch (func_num_args()) {
		case 1: $r=c_var_substr($this->_cPtr,$startx); break;
		default: $r=c_var_substr($this->_cPtr,$startx,$length);
		}
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function index($substr,$occurrenceno=1) {
		$r=c_var_index($this->_cPtr,$substr,$occurrenceno);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function index2($substr,$startchar1=1) {
		$r=c_var_index2($this->_cPtr,$substr,$startchar1);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function field($substrx,$fieldnx,$nfieldsx=1) {
		$r=c_var_field($this->_cPtr,$substrx,$fieldnx,$nfieldsx);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function field2($substrx,$fieldnx,$nfieldsx=1) {
		$r=c_var_field2($this->_cPtr,$substrx,$fieldnx,$nfieldsx);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function oconv($convstr) {
		$r=c_var_oconv($this->_cPtr,$convstr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function iconv($convstr) {
		$r=c_var_iconv($this->_cPtr,$convstr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function lower() {
		$r=c_var_lower($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function raise() {
		$r=c_var_raise($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function crop() {
		$r=c_var_crop($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function lowerer() {
		$r=c_var_lowerer($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function raiser() {
		$r=c_var_raiser($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function cropper() {
		$r=c_var_cropper($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function remove($startx,$delimiterno) {
		$r=c_var_remove($this->_cPtr,$startx,$delimiterno);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function replace($fieldno,$valueno_or_replacement,$subvalueno_or_replacement=null,$replacement=null) {
		switch (func_num_args()) {
		case 2: $r=c_var_replace($this->_cPtr,$fieldno,$valueno_or_replacement); break;
		case 3: $r=c_var_replace($this->_cPtr,$fieldno,$valueno_or_replacement,$subvalueno_or_replacement); break;
		default: $r=c_var_replace($this->_cPtr,$fieldno,$valueno_or_replacement,$subvalueno_or_replacement,$replacement);
		}
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function insert($fieldno,$valueno,$subvalueno,$insertion) {
		$r=c_var_insert($this->_cPtr,$fieldno,$valueno,$subvalueno,$insertion);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function erase($fieldno,$valueno=0,$subvalueno=0) {
		$r=c_var_erase($this->_cPtr,$fieldno,$valueno,$subvalueno);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function extract($fieldno,$valueno=0,$subvalueno=0) {
		$r=c_var_extract($this->_cPtr,$fieldno,$valueno,$subvalueno);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function replacer($fieldno,$valueno_or_replacement,$subvalueno_or_replacement=null,$replacement=null) {
		switch (func_num_args()) {
		case 2: $r=c_var_replacer($this->_cPtr,$fieldno,$valueno_or_replacement); break;
		case 3: $r=c_var_replacer($this->_cPtr,$fieldno,$valueno_or_replacement,$subvalueno_or_replacement); break;
		default: $r=c_var_replacer($this->_cPtr,$fieldno,$valueno_or_replacement,$subvalueno_or_replacement,$replacement);
		}
		if (!is_resource($r)) return $r;
		switch (get_resource_type($r)) {
		case '_p_exodus__var': return new c_var($r);
		default: return new c_var($r);
		}
	}

	function inserter($fieldno,$valueno_or_insertion,$subvalueno_or_insertion=null,$insertion=null) {
		switch (func_num_args()) {
		case 2: $r=c_var_inserter($this->_cPtr,$fieldno,$valueno_or_insertion); break;
		case 3: $r=c_var_inserter($this->_cPtr,$fieldno,$valueno_or_insertion,$subvalueno_or_insertion); break;
		default: $r=c_var_inserter($this->_cPtr,$fieldno,$valueno_or_insertion,$subvalueno_or_insertion,$insertion);
		}
		if (!is_resource($r)) return $r;
		switch (get_resource_type($r)) {
		case '_p_exodus__var': return new c_var($r);
		default: return new c_var($r);
		}
	}

	function eraser($fieldno,$valueno=0,$subvalueno=0) {
		$r=c_var_eraser($this->_cPtr,$fieldno,$valueno,$subvalueno);
		if (!is_resource($r)) return $r;
		switch (get_resource_type($r)) {
		case '_p_exodus__var': return new c_var($r);
		default: return new c_var($r);
		}
	}

	function locate($target,$setting,$fieldno=0,$valueno=0) {
		return c_var_locate($this->_cPtr,$target,$setting,$fieldno,$valueno);
	}

	function locateby($target,$ordercode,$setting,$fieldno=0,$valueno=0) {
		$r=c_var_locateby($this->_cPtr,$target,$ordercode,$setting,$fieldno,$valueno);
		return $r;
	}

	function locateusing($target,$usingchar,$setting=null,$fieldno=0,$valueno=0,$subvalueno=0) {
		switch (func_num_args()) {
		case 2: $r=c_var_locateusing($this->_cPtr,$target,$usingchar); break;
		default: $r=c_var_locateusing($this->_cPtr,$target,$usingchar,$setting,$fieldno,$valueno,$subvalueno);
		}
		return $r;
	}

	function sum($sepchar) {
		$r=c_var_sum($this->_cPtr,$sepchar);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function connect($conninfo) {
		return c_var_connect($this->_cPtr,$conninfo);
	}

	function disconnect() {
		return c_var_disconnect($this->_cPtr);
	}

	function setdefaultconnection() {
		return c_var_setdefaultconnection($this->_cPtr);
	}

	function begintrans() {
		return c_var_begintrans($this->_cPtr);
	}

	function rollbacktrans() {
		return c_var_rollbacktrans($this->_cPtr);
	}

	function committrans() {
		return c_var_committrans($this->_cPtr);
	}

	function createdb($dbname,$errmsg=null) {
		switch (func_num_args()) {
		case 1: $r=c_var_createdb($this->_cPtr,$dbname); break;
		default: $r=c_var_createdb($this->_cPtr,$dbname,$errmsg);
		}
		return $r;
	}

	function deletedb($dbname,$errmsg=null) {
		switch (func_num_args()) {
		case 1: $r=c_var_deletedb($this->_cPtr,$dbname); break;
		default: $r=c_var_deletedb($this->_cPtr,$dbname,$errmsg);
		}
		return $r;
	}

	function createfile($filename,$options) {
		return c_var_createfile($this->_cPtr,$filename,$options);
	}

	function deletefile() {
		return c_var_deletefile($this->_cPtr);
	}

	function clearfile() {
		return c_var_clearfile($this->_cPtr);
	}

	function listfiles() {
		$r=c_var_listfiles($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function createindex($fieldname,$dictfile) {
		return c_var_createindex($this->_cPtr,$fieldname,$dictfile);
	}

	function deleteindex($fieldname) {
		return c_var_deleteindex($this->_cPtr,$fieldname);
	}

	function listindexes($filename) {
		$r=c_var_listindexes($this->_cPtr,$filename);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function open($dbfilename,$dbconnection) {
		return c_var_open($this->_cPtr,$dbfilename,$dbconnection);
	}

	function close() {
		c_var_close($this->_cPtr);
	}

	function select($sortselectclause) {
		return c_var_select($this->_cPtr,$sortselectclause);
	}

	function clearselect() {
		c_var_clearselect($this->_cPtr);
	}

	function readnext($key,$valueno=null) {
		switch (func_num_args()) {
		case 1: $r=c_var_readnext($this->_cPtr,$key); break;
		default: $r=c_var_readnext($this->_cPtr,$key,$valueno);
		}
		return $r;
	}

	function selectrecord($sortselectclause) {
		return c_var_selectrecord($this->_cPtr,$sortselectclause);
	}

	function readnextrecord($record,$key) {
		return c_var_readnextrecord($this->_cPtr,$record,$key);
	}

	function lock($key) {
		return c_var_lock($this->_cPtr,$key);
	}

	function unlock($key) {
		c_var_unlock($this->_cPtr,$key);
	}

	function unlockall() {
		c_var_unlockall($this->_cPtr);
	}

	function read($filehandle,$key) {
		return c_var_read($this->_cPtr,$filehandle,$key);
	}

	function readv($filehandle,$key,$fieldno) {
		return c_var_readv($this->_cPtr,$filehandle,$key,$fieldno);
	}

	function write($filehandle,$key) {
		return c_var_write($this->_cPtr,$filehandle,$key);
	}

	function writev($filehandle,$key,$fieldno) {
		return c_var_writev($this->_cPtr,$filehandle,$key,$fieldno);
	}

	function deleterecord($key) {
		return c_var_deleterecord($this->_cPtr,$key);
	}

	function updaterecord($file,$key) {
		return c_var_updaterecord($this->_cPtr,$file,$key);
	}

	function insertrecord($file,$key) {
		return c_var_insertrecord($this->_cPtr,$file,$key);
	}

	function xlate($filename,$fieldno,$mode) {
		$r=c_var_xlate($this->_cPtr,$filename,$fieldno,$mode);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function sqlexec($SqlToExecute_or_sqlcmd,$errmsg=null) {
		switch (func_num_args()) {
		case 1: $r=c_var_sqlexec($this->_cPtr,$SqlToExecute_or_sqlcmd); break;
		default: $r=c_var_sqlexec($this->_cPtr,$SqlToExecute_or_sqlcmd,$errmsg);
		}
		return $r;
	}

	function version() {
		$r=c_var_version($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}
}

class dim {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_exophp_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_exophp_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function redim($nrows,$ncols=1) {
		return dim_redim($this->_cPtr,$nrows,$ncols);
	}

	function unparse() {
		$r=dim_unparse($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function __construct($nrows=null,$ncols=1) {
		if (is_resource($nrows) && get_resource_type($nrows) === '_p_exodus__dim') {
			$this->_cPtr=$nrows;
			return;
		}
		switch (func_num_args()) {
		case 0: $this->_cPtr=new_dim(); break;
		default: $this->_cPtr=new_dim($nrows,$ncols);
		}
	}

	function parse($var1) {
		$r=dim_parse($this->_cPtr,$var1);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new c_var($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function read($filehandle,$key) {
		return dim_read($this->_cPtr,$filehandle,$key);
	}

	function write($filehandle,$key) {
		return dim_write($this->_cPtr,$filehandle,$key);
	}
}

class MVException {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'description') return MVException_description_set($this->_cPtr,$value);
		if ($var === 'thisown') return swig_exophp_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if (function_exists('MVException_'.$var.'_set')) return true;
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		$func = 'MVException_'.$var.'_get';
		if (function_exists($func)) {
			$r = call_user_func($func,$this->_cPtr);
			if (!is_resource($r)) return $r;
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			return new $c($r);
		}
		if ($var === 'thisown') return swig_exophp_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($description) {
		if (is_resource($description) && get_resource_type($description) === '_p_exodus__MVException') {
			$this->_cPtr=$description;
			return;
		}
		$this->_cPtr=new_MVException($description);
	}
}

class MVDivideByZero extends MVException {
	public $_cPtr=null;

	function __set($var,$value) {
		if ($var === 'thisown') return swig_exophp_alter_newobject($this->_cPtr,$value);
		MVException::__set($var,$value);
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return MVException::__isset($var);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_exophp_get_newobject($this->_cPtr);
		return MVException::__get($var);
	}

	function __construct($var1) {
		if (is_resource($var1) && get_resource_type($var1) === '_p_exodus__MVDivideByZero') {
			$this->_cPtr=$var1;
			return;
		}
		$this->_cPtr=new_MVDivideByZero($var1);
	}
}

class MVNonNumeric extends MVException {
	public $_cPtr=null;

	function __set($var,$value) {
		if ($var === 'thisown') return swig_exophp_alter_newobject($this->_cPtr,$value);
		MVException::__set($var,$value);
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return MVException::__isset($var);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_exophp_get_newobject($this->_cPtr);
		return MVException::__get($var);
	}

	function __construct($var1) {
		if (is_resource($var1) && get_resource_type($var1) === '_p_exodus__MVNonNumeric') {
			$this->_cPtr=$var1;
			return;
		}
		$this->_cPtr=new_MVNonNumeric($var1);
	}
}

class MVOutOfMemory extends MVException {
	public $_cPtr=null;

	function __set($var,$value) {
		if ($var === 'thisown') return swig_exophp_alter_newobject($this->_cPtr,$value);
		MVException::__set($var,$value);
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return MVException::__isset($var);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_exophp_get_newobject($this->_cPtr);
		return MVException::__get($var);
	}

	function __construct($var1) {
		if (is_resource($var1) && get_resource_type($var1) === '_p_exodus__MVOutOfMemory') {
			$this->_cPtr=$var1;
			return;
		}
		$this->_cPtr=new_MVOutOfMemory($var1);
	}
}

class MVUnassigned extends MVException {
	public $_cPtr=null;

	function __set($var,$value) {
		if ($var === 'thisown') return swig_exophp_alter_newobject($this->_cPtr,$value);
		MVException::__set($var,$value);
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return MVException::__isset($var);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_exophp_get_newobject($this->_cPtr);
		return MVException::__get($var);
	}

	function __construct($var1) {
		if (is_resource($var1) && get_resource_type($var1) === '_p_exodus__MVUnassigned') {
			$this->_cPtr=$var1;
			return;
		}
		$this->_cPtr=new_MVUnassigned($var1);
	}
}

class MVUndefined extends MVException {
	public $_cPtr=null;

	function __set($var,$value) {
		if ($var === 'thisown') return swig_exophp_alter_newobject($this->_cPtr,$value);
		MVException::__set($var,$value);
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return MVException::__isset($var);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_exophp_get_newobject($this->_cPtr);
		return MVException::__get($var);
	}

	function __construct($var1) {
		if (is_resource($var1) && get_resource_type($var1) === '_p_exodus__MVUndefined') {
			$this->_cPtr=$var1;
			return;
		}
		$this->_cPtr=new_MVUndefined($var1);
	}
}

class MVInvalidPointer extends MVException {
	public $_cPtr=null;

	function __set($var,$value) {
		if ($var === 'thisown') return swig_exophp_alter_newobject($this->_cPtr,$value);
		MVException::__set($var,$value);
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return MVException::__isset($var);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_exophp_get_newobject($this->_cPtr);
		return MVException::__get($var);
	}

	function __construct($var1) {
		if (is_resource($var1) && get_resource_type($var1) === '_p_exodus__MVInvalidPointer') {
			$this->_cPtr=$var1;
			return;
		}
		$this->_cPtr=new_MVInvalidPointer($var1);
	}
}

class MVDBException extends MVException {
	public $_cPtr=null;

	function __set($var,$value) {
		if ($var === 'thisown') return swig_exophp_alter_newobject($this->_cPtr,$value);
		MVException::__set($var,$value);
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return MVException::__isset($var);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_exophp_get_newobject($this->_cPtr);
		return MVException::__get($var);
	}

	function __construct($var1) {
		if (is_resource($var1) && get_resource_type($var1) === '_p_exodus__MVDBException') {
			$this->_cPtr=$var1;
			return;
		}
		$this->_cPtr=new_MVDBException($var1);
	}
}

class MVNotImplemented extends MVException {
	public $_cPtr=null;

	function __set($var,$value) {
		if ($var === 'thisown') return swig_exophp_alter_newobject($this->_cPtr,$value);
		MVException::__set($var,$value);
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return MVException::__isset($var);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_exophp_get_newobject($this->_cPtr);
		return MVException::__get($var);
	}

	function __construct($var1) {
		if (is_resource($var1) && get_resource_type($var1) === '_p_exodus__MVNotImplemented') {
			$this->_cPtr=$var1;
			return;
		}
		$this->_cPtr=new_MVNotImplemented($var1);
	}
}

class MVDebug extends MVException {
	public $_cPtr=null;

	function __set($var,$value) {
		if ($var === 'thisown') return swig_exophp_alter_newobject($this->_cPtr,$value);
		MVException::__set($var,$value);
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return MVException::__isset($var);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_exophp_get_newobject($this->_cPtr);
		return MVException::__get($var);
	}

	function __construct($var1) {
		if (is_resource($var1) && get_resource_type($var1) === '_p_exodus__MVDebug') {
			$this->_cPtr=$var1;
			return;
		}
		$this->_cPtr=new_MVDebug($var1);
	}
}

class MVStop extends MVException {
	public $_cPtr=null;

	function __set($var,$value) {
		if ($var === 'thisown') return swig_exophp_alter_newobject($this->_cPtr,$value);
		MVException::__set($var,$value);
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return MVException::__isset($var);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_exophp_get_newobject($this->_cPtr);
		return MVException::__get($var);
	}

	function __construct($var1) {
		if (is_resource($var1) && get_resource_type($var1) === '_p_exodus__MVStop') {
			$this->_cPtr=$var1;
			return;
		}
		$this->_cPtr=new_MVStop($var1);
	}
}

class MVAbort extends MVException {
	public $_cPtr=null;

	function __set($var,$value) {
		if ($var === 'thisown') return swig_exophp_alter_newobject($this->_cPtr,$value);
		MVException::__set($var,$value);
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return MVException::__isset($var);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_exophp_get_newobject($this->_cPtr);
		return MVException::__get($var);
	}

	function __construct($var1) {
		if (is_resource($var1) && get_resource_type($var1) === '_p_exodus__MVAbort') {
			$this->_cPtr=$var1;
			return;
		}
		$this->_cPtr=new_MVAbort($var1);
	}
}

class MVArrayDimensionedZero extends MVException {
	public $_cPtr=null;

	function __set($var,$value) {
		if ($var === 'thisown') return swig_exophp_alter_newobject($this->_cPtr,$value);
		MVException::__set($var,$value);
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return MVException::__isset($var);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_exophp_get_newobject($this->_cPtr);
		return MVException::__get($var);
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_exodus__MVArrayDimensionedZero') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_MVArrayDimensionedZero();
	}
}

class MVArrayIndexOutOfBounds extends MVException {
	public $_cPtr=null;

	function __set($var,$value) {
		if ($var === 'thisown') return swig_exophp_alter_newobject($this->_cPtr,$value);
		MVException::__set($var,$value);
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return MVException::__isset($var);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_exophp_get_newobject($this->_cPtr);
		return MVException::__get($var);
	}

	function __construct($var1) {
		if (is_resource($var1) && get_resource_type($var1) === '_p_exodus__MVArrayIndexOutOfBounds') {
			$this->_cPtr=$var1;
			return;
		}
		$this->_cPtr=new_MVArrayIndexOutOfBounds($var1);
	}
}

class MVArrayNotDimensioned extends MVException {
	public $_cPtr=null;

	function __set($var,$value) {
		if ($var === 'thisown') return swig_exophp_alter_newobject($this->_cPtr,$value);
		MVException::__set($var,$value);
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return MVException::__isset($var);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_exophp_get_newobject($this->_cPtr);
		return MVException::__get($var);
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_exodus__MVArrayNotDimensioned') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_MVArrayNotDimensioned();
	}
}


?>
